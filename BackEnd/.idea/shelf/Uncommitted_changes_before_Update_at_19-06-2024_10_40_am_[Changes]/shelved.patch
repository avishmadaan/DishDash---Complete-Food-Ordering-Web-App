Index: order-service-api/src/main/java/com/bej/domain/Order.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bej.domain;\r\n\r\nimport lombok.*;\r\nimport org.springframework.data.annotation.Id;\r\nimport org.springframework.data.mongodb.core.mapping.Document;\r\n\r\nimport java.util.List;\r\n\r\n@Document\r\n@Getter\r\n@Setter\r\n@ToString\r\n@NoArgsConstructor\r\n@AllArgsConstructor\r\npublic class Order {\r\n    @Id\r\n    private String orderId;\r\n    private String restaurantId;\r\n    private String customerId;\r\n    private String timeStamp;\r\n    private double totalPrice;\r\n    private double Discount;\r\n    private double billingPrice;\r\n    private int totalItems;\r\n    private Object customerAddress;\r\n    private String paymentMethod;\r\n    private List<CartDish> cartItems;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/order-service-api/src/main/java/com/bej/domain/Order.java b/order-service-api/src/main/java/com/bej/domain/Order.java
--- a/order-service-api/src/main/java/com/bej/domain/Order.java	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/order-service-api/src/main/java/com/bej/domain/Order.java	(date 1718742151243)
@@ -17,6 +17,8 @@
     private String orderId;
     private String restaurantId;
     private String customerId;
+    private String customerName;
+    private String customerEmail;
     private String timeStamp;
     private double totalPrice;
     private double Discount;
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12-06-2024_12_36_am__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12-06-2024_12_36_am__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12-06-2024_12_36_am__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12-06-2024_12_36_am__Changes_.xml	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ /dev/null	(revision fb455e25290c428a50a3890b59a8ce863edac877)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_12-06-2024_12_36_am_[Changes]" date="1718132822278" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12-06-2024_12_36_am_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12-06-2024 12:36 am [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12-06-2024_12_36_am_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12-06-2024_12_36_am_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12-06-2024_12_36_am_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12-06-2024_12_36_am_[Changes]/shelved.patch	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ /dev/null	(revision fb455e25290c428a50a3890b59a8ce863edac877)
@@ -1,539 +0,0 @@
-Index: customersapiservice/pom.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.example</groupId>\r\n\t\t<artifactId>FoodieApp</artifactId>\r\n\t\t<version>1.0-SNAPSHOT</version>\r\n\t</parent>\r\n\t<groupId>com.bej</groupId>\r\n\t<artifactId>customersapiservice</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>customersapiservice</name>\r\n\t<description>Customer microservice</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t\t<spring-cloud.version>2023.0.2</spring-cloud.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-starter-openfeign</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-mongodb</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt</artifactId>\r\n\t\t\t<version>0.9.1</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-mail</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.sun.mail</groupId>\r\n\t\t\t<artifactId>jakarta.mail</artifactId>\r\n\t\t\t<version>1.6.7</version> <!-- or the latest version -->\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\t<dependencyManagement>\r\n\t\t<dependencies>\r\n\t\t\t<dependency>\r\n\t\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n\t\t\t\t<version>${spring-cloud.version}</version>\r\n\t\t\t\t<type>pom</type>\r\n\t\t\t\t<scope>import</scope>\r\n\t\t\t</dependency>\r\n\t\t</dependencies>\r\n\t</dependencyManagement>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<excludes>\r\n\t\t\t\t\t\t<exclude>\r\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t\t\t\t</exclude>\r\n\t\t\t\t\t</excludes>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/customersapiservice/pom.xml b/customersapiservice/pom.xml
---- a/customersapiservice/pom.xml	(revision 30e26ff62633f08bdc7225834cffc8fe40a050b2)
-+++ b/customersapiservice/pom.xml	(date 1718108355257)
-@@ -51,11 +51,6 @@
- 			<artifactId>spring-boot-starter-mail</artifactId>
- 		</dependency>
- 		<dependency>
--			<groupId>com.sun.mail</groupId>
--			<artifactId>jakarta.mail</artifactId>
--			<version>1.6.7</version> <!-- or the latest version -->
--		</dependency>
--		<dependency>
- 			<groupId>org.springframework.boot</groupId>
- 			<artifactId>spring-boot-starter-test</artifactId>
- 			<scope>test</scope>
-Index: customersapiservice/src/main/java/com/bej/customersapiservice/CustomersapiserviceApplication.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.bej.customersapiservice;\r\n\r\nimport com.bej.customersapiservice.filter.JwtFilter;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.boot.web.servlet.FilterRegistrationBean;\r\nimport org.springframework.cloud.openfeign.EnableFeignClients;\r\nimport org.springframework.context.annotation.Bean;\r\n\r\n@SpringBootApplication\r\n@EnableFeignClients\r\npublic class CustomersapiserviceApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(CustomersapiserviceApplication.class, args);\r\n\t}\r\n\t@Bean\r\n\tpublic FilterRegistrationBean jwtFilterBean(){\r\n\t\tFilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();\r\n\t\tfilterRegistrationBean.setFilter(new JwtFilter());\r\n\t\tfilterRegistrationBean.addUrlPatterns(\"/api/v2/customers/*\");\r\n\t\treturn filterRegistrationBean;\r\n\t}\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/customersapiservice/src/main/java/com/bej/customersapiservice/CustomersapiserviceApplication.java b/customersapiservice/src/main/java/com/bej/customersapiservice/CustomersapiserviceApplication.java
---- a/customersapiservice/src/main/java/com/bej/customersapiservice/CustomersapiserviceApplication.java	(revision 30e26ff62633f08bdc7225834cffc8fe40a050b2)
-+++ b/customersapiservice/src/main/java/com/bej/customersapiservice/CustomersapiserviceApplication.java	(date 1718089173860)
-@@ -6,9 +6,11 @@
- import org.springframework.boot.web.servlet.FilterRegistrationBean;
- import org.springframework.cloud.openfeign.EnableFeignClients;
- import org.springframework.context.annotation.Bean;
-+import org.springframework.web.bind.annotation.CrossOrigin;
- 
- @SpringBootApplication
- @EnableFeignClients
-+@CrossOrigin
- public class CustomersapiserviceApplication {
- 
- 	public static void main(String[] args) {
-Index: customersapiservice/src/main/java/com/bej/customersapiservice/services/ICustomerService.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.bej.customersapiservice.services;\r\n\r\nimport com.bej.customersapiservice.domain.Customer;\r\nimport com.bej.customersapiservice.exception.CustomerAlreadyExistException;\r\nimport com.bej.customersapiservice.exception.CustomerNotFoundException;\r\n\r\nimport java.util.List;\r\n\r\npublic interface ICustomerService {\r\n\r\n    public Customer registerCustomer(Customer customer) throws CustomerAlreadyExistException;\r\n    public Customer updateCustomer(Customer customer, String customerId) throws CustomerAlreadyExistException, CustomerNotFoundException;\r\n    public String addFavoriteRestaurant(String resId,String customerId) throws CustomerNotFoundException;\r\n    public String addFavoriteDish(Object obj,String customerId) throws CustomerNotFoundException;\r\n    public List<Object> getAllFavRestaurant(String customerId);\r\n    public List<Object> getAllFavDishes(String customerId);\r\n    public Customer getCustomerById(String customerId) throws CustomerNotFoundException;\r\n    public boolean deleteFavRestaurant(String customerId,Object restName) throws CustomerNotFoundException;\r\n    public boolean deleteFavDish(String customerId,Object dish) throws CustomerNotFoundException;\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/customersapiservice/src/main/java/com/bej/customersapiservice/services/ICustomerService.java b/customersapiservice/src/main/java/com/bej/customersapiservice/services/ICustomerService.java
---- a/customersapiservice/src/main/java/com/bej/customersapiservice/services/ICustomerService.java	(revision 30e26ff62633f08bdc7225834cffc8fe40a050b2)
-+++ b/customersapiservice/src/main/java/com/bej/customersapiservice/services/ICustomerService.java	(date 1718089173934)
-@@ -17,4 +17,6 @@
-     public Customer getCustomerById(String customerId) throws CustomerNotFoundException;
-     public boolean deleteFavRestaurant(String customerId,Object restName) throws CustomerNotFoundException;
-     public boolean deleteFavDish(String customerId,Object dish) throws CustomerNotFoundException;
-+
-+    public Customer testRegister(Customer customer);
- }
-Index: customersapiservice/src/main/java/com/bej/customersapiservice/services/ImplCustomerService.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.bej.customersapiservice.services;\r\n\r\nimport com.bej.customersapiservice.domain.Customer;\r\nimport com.bej.customersapiservice.exception.CustomerAlreadyExistException;\r\nimport com.bej.customersapiservice.exception.CustomerNotFoundException;\r\nimport com.bej.customersapiservice.proxy.CustomerProxy;\r\nimport com.bej.customersapiservice.respository.CustomerRepo;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\n@Service\r\npublic class ImplCustomerService implements ICustomerService {\r\n\r\n    @Autowired\r\n    private CustomerRepo customerRepo;\r\n    @Autowired\r\n    private CustomerProxy customerProxy;\r\n    @Override\r\n    public Customer registerCustomer(Customer customer) throws CustomerAlreadyExistException {\r\n        if(customerRepo.findById(customer.getCustomerId()).isPresent()) {\r\n            throw new CustomerAlreadyExistException();\r\n        }\r\n        if(customer.getCustomerFavDishes() ==  null) {\r\n            customer.setCustomerFavDishes(new ArrayList<>());\r\n        }\r\n        if(customer.getCustomerFavRestaurants() == null) {\r\n            customer.setCustomerFavRestaurants(new ArrayList<>());\r\n        }\r\n//\r\n//        customerProxy.registerCustomer(customer);\r\n//        return customerRepo.save(customer);\r\n        Customer customer1=customerRepo.save(customer);\r\n        if(!(customer1.getCustomerId().isEmpty()))\r\n        {\r\n            ResponseEntity<?> proxyResponse=customerProxy.registerCustomer(customer);\r\n            System.out.println(proxyResponse.getBody());\r\n        }\r\n        return customer1;\r\n    }\r\n\r\n    public Customer updateCustomer(Customer customer, String customerId) throws CustomerNotFoundException {\r\n        if(customerRepo.findById(customerId).isPresent()) {\r\n            return customerRepo.save(customer);\r\n        }\r\n        else {\r\n            throw new CustomerNotFoundException();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String addFavoriteRestaurant(String resId,String customerId) throws CustomerNotFoundException {\r\n        System.out.println(\"Inside\");\r\n        System.out.println(\"Inside Imple :\" + customerRepo.findById(customerId).get() +\"Object :\"+resId);\r\n        Customer optionalCustomer=customerRepo.findById(customerId).orElseThrow(CustomerNotFoundException::new);\r\n        if(optionalCustomer.getCustomerFavRestaurants()==null)\r\n        {\r\n            optionalCustomer.setCustomerFavRestaurants(new ArrayList<>());\r\n        }\r\n\r\n        List<Object> favList = optionalCustomer.getCustomerFavRestaurants();\r\n        favList.add(resId);\r\n        customerRepo.save(optionalCustomer);\r\n        return \"Favourite Restaurant added\";\r\n    }\r\n\r\n    @Override\r\n    public String addFavoriteDish(Object obj, String customerId) throws CustomerNotFoundException {\r\n        Customer customer= customerRepo.findById(customerId).orElseThrow(CustomerNotFoundException::new);\r\n\r\n        if (customer.getCustomerFavDishes() == null) {\r\n            customer.setCustomerFavDishes(new ArrayList<>());\r\n        }\r\n\r\n        List<Object> favDishList = customer.getCustomerFavDishes();\r\n        favDishList.add(obj);\r\n        customerRepo.save(customer);\r\n        return \"Dish added to your favorites...\";\r\n\r\n    }\r\n\r\n    @Override\r\n    public List<Object> getAllFavRestaurant(String customerId) {\r\n\r\n        Optional<Customer> restCustomer = customerRepo.findById(customerId);\r\n        System.out.println(restCustomer.get());\r\n        return restCustomer.get().getCustomerFavRestaurants();\r\n    }\r\n\r\n    @Override\r\n    public List<Object> getAllFavDishes(String customerId) {\r\n        Optional<Customer> restCustomer = customerRepo.findById(customerId);\r\n        System.out.println(restCustomer.get());\r\n        return restCustomer.get().getCustomerFavDishes();\r\n    }\r\n\r\n    @Override\r\n    public Customer getCustomerById(String customerId) throws CustomerNotFoundException {\r\n        return customerRepo.findById(customerId).orElseThrow(CustomerNotFoundException::new);\r\n    }\r\n\r\n    @Override\r\n    public boolean deleteFavRestaurant(String customerId,Object resId) throws CustomerNotFoundException {\r\n        boolean isDeleted=false;\r\n        Optional<Customer> optionalCustomer=customerRepo.findById(customerId);\r\n\r\n        if(optionalCustomer.isEmpty())\r\n        {\r\n            throw new CustomerNotFoundException();\r\n        }\r\n        Customer customer=optionalCustomer.get();\r\n        List<Object> favRestList= customer.getCustomerFavRestaurants();\r\n        favRestList.remove(resId);\r\n        customer.setCustomerFavRestaurants(favRestList);\r\n        customerRepo.save(customer);\r\n        isDeleted=true;\r\n\r\n        return isDeleted;\r\n    }\r\n    public boolean deleteFavDish(String customerId,Object dish) throws CustomerNotFoundException {\r\n        boolean isDeleted=false;\r\n        Optional<Customer> optionalCustomer=customerRepo.findById(customerId);\r\n\r\n        if(optionalCustomer.isEmpty())\r\n        {\r\n            throw new CustomerNotFoundException();\r\n        }\r\n        Customer customer=optionalCustomer.get();\r\n\r\n        List<Object> favList = customer.getCustomerFavDishes();\r\n        favList.remove(dish);\r\n        customer.setCustomerFavDishes(favList);\r\n        customerRepo.save(customer);\r\n        isDeleted=true;\r\n\r\n        return isDeleted;\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/customersapiservice/src/main/java/com/bej/customersapiservice/services/ImplCustomerService.java b/customersapiservice/src/main/java/com/bej/customersapiservice/services/ImplCustomerService.java
---- a/customersapiservice/src/main/java/com/bej/customersapiservice/services/ImplCustomerService.java	(revision 30e26ff62633f08bdc7225834cffc8fe40a050b2)
-+++ b/customersapiservice/src/main/java/com/bej/customersapiservice/services/ImplCustomerService.java	(date 1718089173986)
-@@ -20,6 +20,11 @@
-     private CustomerRepo customerRepo;
-     @Autowired
-     private CustomerProxy customerProxy;
-+
-+    @Override
-+    public Customer testRegister(Customer customer){
-+        return this.customerRepo.save(customer);
-+    }
-     @Override
-     public Customer registerCustomer(Customer customer) throws CustomerAlreadyExistException {
-         if(customerRepo.findById(customer.getCustomerId()).isPresent()) {
-@@ -31,9 +36,7 @@
-         if(customer.getCustomerFavRestaurants() == null) {
-             customer.setCustomerFavRestaurants(new ArrayList<>());
-         }
--//
--//        customerProxy.registerCustomer(customer);
--//        return customerRepo.save(customer);
-+
-         Customer customer1=customerRepo.save(customer);
-         if(!(customer1.getCustomerId().isEmpty()))
-         {
-Index: customersapiservice/src/main/java/com/bej/customersapiservice/controller/CustomerController.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.bej.customersapiservice.controller;\r\n\r\nimport com.bej.customersapiservice.domain.Customer;\r\nimport com.bej.customersapiservice.emails.IGenerateEmails;\r\nimport com.bej.customersapiservice.exception.CustomerAlreadyExistException;\r\nimport com.bej.customersapiservice.exception.CustomerNotFoundException;\r\nimport com.bej.customersapiservice.services.EmailService;\r\nimport com.bej.customersapiservice.services.ICustomerService;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.data.annotation.Id;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v2\")\r\n@CrossOrigin\r\npublic class CustomerController {\r\n\r\n    @Autowired\r\n    private ICustomerService iCustomerService;\r\n\r\n    @Autowired\r\n    private EmailService emailService;\r\n\r\n    @Autowired\r\n    private IGenerateEmails iGenerateEmails;\r\n\r\n    @PostMapping(\"/register\")\r\n    public ResponseEntity registerCustomer(@RequestBody Customer customer) {\r\n        try {\r\n            ResponseEntity<?> response =  new ResponseEntity(iCustomerService.registerCustomer(customer), HttpStatus.CREATED);\r\n            emailService.sendEmail(customer.getCustomerEmail(),\"Welcome To DishDash\", iGenerateEmails.generateWelcomeEmail(customer.getCustomerName(), customer.getCustomerEmail(), customer.getCustomerPassword()));\r\n            return response;\r\n        } catch (CustomerAlreadyExistException e) {\r\n            return new ResponseEntity(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }\r\n    }\r\n\r\n    @PutMapping(\"/customers/update\")\r\n    public ResponseEntity updateCustomer(@RequestBody Customer customer, HttpServletRequest request) {\r\n        String customerId = (String) request.getAttribute(\"customerId\");\r\n        try {\r\n            return new ResponseEntity(iCustomerService.updateCustomer(customer, customerId), HttpStatus.OK);\r\n        } catch (Exception e) {\r\n            return new ResponseEntity(e.getMessage(), HttpStatus.NOT_FOUND);\r\n        }\r\n    }\r\n\r\n    @PutMapping(\"/customers/addfavres\")\r\n    public ResponseEntity updateFavRest(@RequestBody String obj, HttpServletRequest request) throws CustomerNotFoundException {\r\n        String customerId = (String) request.getAttribute(\"customerId\");\r\n        return new ResponseEntity<>(iCustomerService.addFavoriteRestaurant(obj,customerId),HttpStatus.OK);\r\n    }\r\n\r\n    @PutMapping(\"/customers/addfavdish\")\r\n    public ResponseEntity updateFavDish(@RequestBody Object obj, HttpServletRequest request) throws CustomerNotFoundException {\r\n        String customerId = (String) request.getAttribute(\"customerId\");\r\n        return new ResponseEntity<>(iCustomerService.addFavoriteDish(obj,customerId),HttpStatus.OK);\r\n    }\r\n\r\n    @GetMapping(\"/customers/restaurant\")\r\n    public ResponseEntity fetchFavRest(HttpServletRequest request)\r\n    {\r\n        String customerId = (String) request.getAttribute(\"customerId\");\r\n        return new ResponseEntity<>(iCustomerService.getAllFavRestaurant(customerId),HttpStatus.OK);\r\n    }\r\n    @GetMapping(\"/customers/dishes\")\r\n    public ResponseEntity fetchFavDish(HttpServletRequest request)\r\n    {\r\n        String customerId = (String) request.getAttribute(\"customerId\");\r\n        return new ResponseEntity<>(iCustomerService.getAllFavDishes(customerId),HttpStatus.OK);\r\n    }\r\n    @GetMapping(\"/eachcustomer\")\r\n    public ResponseEntity<?> fetchByJwtToken(HttpServletRequest request) throws CustomerNotFoundException {\r\n        String customerId = (String) request.getAttribute(\"customerId\");\r\n        return new ResponseEntity<>(iCustomerService.getCustomerById(customerId),HttpStatus.OK);\r\n    }\r\n    @DeleteMapping(\"/customers/deletedish\")\r\n    public ResponseEntity<?> deleteFavDish(@RequestBody Object dish, HttpServletRequest request) throws CustomerNotFoundException {\r\n        String customerId = (String) request.getAttribute(\"customerId\");\r\n        return new ResponseEntity<>(iCustomerService.deleteFavDish(customerId,dish),HttpStatus.OK);\r\n    }\r\n    @DeleteMapping(\"/customers/deletedrestaurant/{restName}\")\r\n    public ResponseEntity<?> deleteFavRest(@RequestBody Object restName, HttpServletRequest request) throws CustomerNotFoundException {\r\n        String customerId = (String) request.getAttribute(\"customerId\");\r\n        return new ResponseEntity<>(iCustomerService.deleteFavRestaurant(customerId,restName),HttpStatus.OK);\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/customersapiservice/src/main/java/com/bej/customersapiservice/controller/CustomerController.java b/customersapiservice/src/main/java/com/bej/customersapiservice/controller/CustomerController.java
---- a/customersapiservice/src/main/java/com/bej/customersapiservice/controller/CustomerController.java	(revision 30e26ff62633f08bdc7225834cffc8fe40a050b2)
-+++ b/customersapiservice/src/main/java/com/bej/customersapiservice/controller/CustomerController.java	(date 1718089174072)
-@@ -15,7 +15,7 @@
- 
- @RestController
- @RequestMapping("/api/v2")
--@CrossOrigin
-+@CrossOrigin(origins = "http://localhost:4200")
- public class CustomerController {
- 
-     @Autowired
-@@ -27,6 +27,11 @@
-     @Autowired
-     private IGenerateEmails iGenerateEmails;
- 
-+    @PostMapping("/registertest")
-+    public ResponseEntity registerCustomertest(@RequestBody Customer customer) {
-+        return new ResponseEntity(iCustomerService.testRegister(customer), HttpStatus.CREATED);
-+    }
-+
-     @PostMapping("/register")
-     public ResponseEntity registerCustomer(@RequestBody Customer customer) {
-         try {
-@@ -72,7 +77,7 @@
-         String customerId = (String) request.getAttribute("customerId");
-         return new ResponseEntity<>(iCustomerService.getAllFavDishes(customerId),HttpStatus.OK);
-     }
--    @GetMapping("/eachcustomer")
-+    @GetMapping("/customers/eachcustomer")
-     public ResponseEntity<?> fetchByJwtToken(HttpServletRequest request) throws CustomerNotFoundException {
-         String customerId = (String) request.getAttribute("customerId");
-         return new ResponseEntity<>(iCustomerService.getCustomerById(customerId),HttpStatus.OK);
-Index: ../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.html
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><div class=\"restaurantbox\" *ngIf=\"oneRestaurant\">\r\n    <div class=\"infobox bg-light p-3 m-3\">\r\n        <div class=\"photos flex\">\r\n            <img alt=\"Restaurant\" *ngFor=\"let x of oneRestaurant.resImages\" [src]=\"x\">\r\n            \r\n        </div>\r\n        <div class=\"descriptionbox flex justify-content-between\">\r\n            <div class=\"left\">\r\n                <h2>{{oneRestaurant.resName}}</h2>\r\n                <p>{{oneRestaurant.resCuisines}}</p>\r\n                <span>{{oneRestaurant.resAddress}}</span>\r\n            </div>\r\n            <div class=\"right flex \">\r\n                <span>{{oneRestaurant.resRating}}</span>\r\n                <mat-icon class=\"fav\" fontIcon=\"favorite_border\" (click)=\"toogleFav()\" ></mat-icon>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"menubox bg-light flex p-3 m-3\">\r\n        <div class=\"menuleft bg-danger-subtle p-3\">\r\n\r\n            <p *ngFor=\"let category of categoryArray\">{{category[0]}} ({{category[1]}})</p>\r\n        </div>\r\n\r\n        <div class=\"menuright\">\r\n            <!-- <div class=\"categories\" *ngFor=\"let category of oneRestaurant.resCategories\">\r\n                <h4>{{category}}</h4>\r\n            </div> -->\r\n        \r\n            <div class=\"menuitem bg-body-secondary flex p-2 m-2 mb-3 gap-3\" *ngFor=\"let menu of oneRestaurant.resMenu\">\r\n                <div class=\"part1\">\r\n                    <img [src]=\"menu.dishImage\" alt=\"\">\r\n                </div>\r\n                <div class=\"part2\">\r\n                    <h5 class=\"m-0\">{{menu.dishName}}</h5>\r\n                    <p class=\"m-0\">{{menu.dishRating}} people rated</p>\r\n                    <p class=\"m-0\">Rs {{menu.dishPrice}}/-</p>\r\n                    <span class=\"m-0\">{{menu.dishDescription}}</span>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.html b/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.html
---- a/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.html	(revision 30e26ff62633f08bdc7225834cffc8fe40a050b2)
-+++ b/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.html	(date 1718111843054)
-@@ -6,13 +6,14 @@
-         </div>
-         <div class="descriptionbox flex justify-content-between">
-             <div class="left">
--                <h2>{{oneRestaurant.resName}}</h2>
-+                <h2 >{{oneRestaurant.resName}}</h2>
-                 <p>{{oneRestaurant.resCuisines}}</p>
-                 <span>{{oneRestaurant.resAddress}}</span>
-             </div>
-             <div class="right flex ">
-+               
-                 <span>{{oneRestaurant.resRating}}</span>
--                <mat-icon class="fav" fontIcon="favorite_border" (click)="toogleFav()" ></mat-icon>
-+                <mat-icon class="fav" [fontIcon]="isFavorite ? 'favorite':'favorite_border'" (click)="toogleFav()" ></mat-icon>
-             </div>
-         </div>
-     </div>
-Index: UserAuthenticationService/src/main/resources/application.properties
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>spring.application.name=UserAuthenticationService\r\n\r\nserver.port = 8081\r\n\r\nspring.datasource.url=jdbc:mysql://localhost:3306/CapstoneCustomer\r\nspring.datasource.username=root\r\nspring.datasource.password=root@123\r\nspring.jpa.hibernate.ddl-auto=update\r\nspring.jpa.show-sql=true\r\n\r\neureka.client.register-with-eureka=true\r\neureka.client.fetch-registry=true\r\nlogging.level.org.springframework=info\r\nlogging.level.com.example.UserAuthenticationService=debug\r\nlogging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>ISO-8859-1
-===================================================================
-diff --git a/UserAuthenticationService/src/main/resources/application.properties b/UserAuthenticationService/src/main/resources/application.properties
---- a/UserAuthenticationService/src/main/resources/application.properties	(revision 30e26ff62633f08bdc7225834cffc8fe40a050b2)
-+++ b/UserAuthenticationService/src/main/resources/application.properties	(date 1718089173715)
-@@ -4,7 +4,7 @@
- 
- spring.datasource.url=jdbc:mysql://localhost:3306/CapstoneCustomer
- spring.datasource.username=root
--spring.datasource.password=root@123
-+spring.datasource.password=Rockstar@123*
- spring.jpa.hibernate.ddl-auto=update
- spring.jpa.show-sql=true
- 
-Index: ../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.ts
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { reduce } from 'rxjs';\r\nimport { restaurant } from '../../Model/restaurant';\r\nimport { RestaurantService } from '../../services/restaurant.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Dialog } from '@angular/cdk/dialog';\r\nimport { LoginalertComponent } from '../loginalert/loginalert.component';\r\n\r\n@Component({\r\n  selector: 'app-restaurantview',\r\n  templateUrl: './restaurantview.component.html',\r\n  styleUrl: './restaurantview.component.css'\r\n})\r\nexport class RestaurantviewComponent implements OnInit {\r\n\r\n  oneRestaurant:restaurant;\r\n  categoryAndCount = new Map();\r\n  categoryArray:[string, number][]=[];\r\n\r\n  constructor(private ac:ActivatedRoute, private resService:RestaurantService, private cookieService:CookieService, private dialog:Dialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.ac.paramMap.subscribe({\r\n      next:data => {\r\n        let restId = data.get(\"resid\")\r\n        console.log(restId);\r\n        this.resService.fetchRestaurantByid(restId).subscribe({\r\n          next:data => {\r\n            console.log(data);\r\n            this.oneRestaurant = data;\r\n            this.prepareMapForCategories();\r\n            this.categoryArray = Array.from(this.categoryAndCount.entries())\r\n            console.log(this.categoryArray);\r\n          }\r\n        })\r\n\r\n      },\r\n      error:e => {\r\n        console.log(e);\r\n      }\r\n    })\r\n  }\r\n\r\n  toogleFav() {\r\nif(!this.cookieService.get(\"token\")) {\r\nthis.dialog.open(LoginalertComponent)\r\n}\r\n  }\r\n\r\n  prepareMapForCategories() {\r\n    \r\n   \r\n    for(let cateogry of this.oneRestaurant.resCategories) {\r\n      let count =0\r\n      for(let dish of this.oneRestaurant.resMenu) {\r\n        if(dish.dishCategory.toLowerCase() == cateogry.toLowerCase()) {\r\n          count++;\r\n        }\r\n      }\r\n      this.categoryAndCount.set(cateogry,count);\r\n    }\r\n  \r\n  }\r\n\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.ts b/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.ts
---- a/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.ts	(revision 30e26ff62633f08bdc7225834cffc8fe40a050b2)
-+++ b/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.ts	(date 1718111895898)
-@@ -6,6 +6,9 @@
- import { CookieService } from 'ngx-cookie-service';
- import { Dialog } from '@angular/cdk/dialog';
- import { LoginalertComponent } from '../loginalert/loginalert.component';
-+import { RegisterComponent } from '../register/register.component';
-+import { MatDialog } from '@angular/material/dialog';
-+import { UserService } from '../../services/user.service';
- 
- @Component({
-   selector: 'app-restaurantview',
-@@ -17,8 +20,10 @@
-   oneRestaurant:restaurant;
-   categoryAndCount = new Map();
-   categoryArray:[string, number][]=[];
-+  isFavorite:boolean = false;
-+  custFavorites:string[]=[];
- 
--  constructor(private ac:ActivatedRoute, private resService:RestaurantService, private cookieService:CookieService, private dialog:Dialog) {}
-+  constructor(private ac:ActivatedRoute, private resService:RestaurantService, private cookieService:CookieService, public dialog:MatDialog, private userService:UserService) {}
- 
-   ngOnInit(): void {
-     this.ac.paramMap.subscribe({
-@@ -31,6 +36,22 @@
-             this.oneRestaurant = data;
-             this.prepareMapForCategories();
-             this.categoryArray = Array.from(this.categoryAndCount.entries())
-+
-+            if(this.cookieService.get("token")) {
-+
-+              this.userService.getCustomerFavRestaurants.subscribe({
-+                next:data => {
-+                  console.log("is fav: "+this.isFavorite)
-+                  this.custFavorites = data;
-+                  if( this.custFavorites.includes(this.oneRestaurant.resId)) {
-+                    this.isFavorite = true;
-+                    console.log("is fav: "+this.isFavorite)
-+                  }
-+                 
-+                }
-+              })
-+            }
-+            
-             console.log(this.categoryArray);
-           }
-         })
-@@ -42,11 +63,33 @@
-     })
-   }
- 
--  toogleFav() {
-+toogleFav() {
-+
- if(!this.cookieService.get("token")) {
--this.dialog.open(LoginalertComponent)
-+  this.openLoginAlertDialog('3000ms', '1500ms');
-+}
-+
-+this.isFavorite = !this.isFavorite;
-+console.log("Sending " +this.isFavorite)
-+if(this.isFavorite) {
-+  console.log("Sending Fav Called")
-+  const Jwt = this.cookieService.get("token");
-+  this.userService.sendFavoriteRestToCustomer(this.oneRestaurant.resId,Jwt )
- }
-+
-+
-+
-+
-   }
-+
-+
-+
-+  openLoginAlertDialog(enterAnimationDuration: string, exitAnimationDuration: string): void {
-+    this.dialog.open(LoginalertComponent, {
-+      width: '400px'
-+    });
-+  }
-+
- 
-   prepareMapForCategories() {
-     
-Index: ../FrontEnd/DishDash/src/app/Model/customer.ts
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import { address } from \"./address\"\r\nimport { favdishes } from \"./favdishes\"\r\nimport { favrestaurant } from \"./favrestaurant\"\r\n\r\nexport class customer {\r\n    customerName: string\r\n    customerEmail: string\r\n    customerPassword: string\r\n    customerProfilePic?: string\r\n    customerPhone: number\r\n    customerAddress?:address[]\r\n    customerFavRestaurant?:favrestaurant[]\r\n    customerFavDishes?:favdishes[]\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/../FrontEnd/DishDash/src/app/Model/customer.ts b/../FrontEnd/DishDash/src/app/Model/customer.ts
---- a/../FrontEnd/DishDash/src/app/Model/customer.ts	(revision 30e26ff62633f08bdc7225834cffc8fe40a050b2)
-+++ b/../FrontEnd/DishDash/src/app/Model/customer.ts	(date 1718110345649)
-@@ -9,6 +9,6 @@
-     customerProfilePic?: string
-     customerPhone: number
-     customerAddress?:address[]
--    customerFavRestaurant?:favrestaurant[]
-+    customerFavRestaurant?:string[]
-     customerFavDishes?:favdishes[]
- }
-\ No newline at end of file
-Index: ../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.html
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><mat-icon  aria-hidden=\"false\" aria-label=\"Example home icon\" fontIcon=\"alert\"></mat-icon>\r\n\r\n<h3>Login Alert</h3>\r\n<p (click)=\"openLoginDialog()\">Do login First</p>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.html b/../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.html
---- a/../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.html	(revision 30e26ff62633f08bdc7225834cffc8fe40a050b2)
-+++ b/../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.html	(date 1718109969301)
-@@ -1,4 +1,14 @@
--<mat-icon  aria-hidden="false" aria-label="Example home icon" fontIcon="alert"></mat-icon>
--
--<h3>Login Alert</h3>
--<p (click)="openLoginDialog()">Do login First</p>
-\ No newline at end of file
-+<div class=" header flex justify-content-between align-items">
-+    <button mat-icon-button class="close-button" (click)="closeDialog()">
-+      <mat-icon>close</mat-icon>
-+    </button>
-+  </div>
-+<div>
-+<h1 mat-dialog-title>  <mat-icon  aria-hidden="false" aria-label="Example home icon" fontIcon="error"></mat-icon></h1>
-+<div mat-dialog-content>
-+  <!-- Your content here -->
-+   <h4>You need to Login First</h4>
-+   <a class="login pointer" (click)="openLoginDialog()">Here you can login
-+   </a>
-+</div>
-+</div>
-\ No newline at end of file
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"9c8a6dba-7c8c-426b-ad82-e45f53e77f5c\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/emails/GenerateEmails.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/emails/IGenerateEmails.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/services/EmailService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/customersapiservice/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/customersapiservice/pom.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/controller/CustomerController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/controller/CustomerController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/customersapiservice/src/main/resources/application.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/customersapiservice/src/main/resources/application.properties\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2hRdb5bzKy99WtrSghQJjDoSedT\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.ApiGateawayApplication.executor\": \"Run\",\r\n    \"Application.CustomersapiserviceApplication.executor\": \"Run\",\r\n    \"Application.EurekaDiscoveryServerApplication.executor\": \"Run\",\r\n    \"Application.RestaurantServiceApplication.executor\": \"Run\",\r\n    \"Application.UserAuthenticationServiceApplication.executor\": \"Run\",\r\n    \"Application.abc.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"dev-v1\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"D:/Personal Folders/SND/major-capstone-project/BackEnd\",\r\n    \"settings.editor.selected.configurable\": \"preferences.pluginManager\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Avish Madaan\\Desktop\\NIIT\\Phase 2\\Course 14 - Capstone Project\\major-capstone-project\\FoodieApp\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.ApiGateawayApplication\">\r\n    <configuration name=\"ApiGateawayApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.ApiGateaway.ApiGateawayApplication\" />\r\n      <module name=\"ApiGateaway\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.ApiGateaway.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CustomersapiserviceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.bej.customersapiservice.CustomersapiserviceApplication\" />\r\n      <module name=\"customersapiservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.bej.customersapiservice.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"EurekaDiscoveryServerApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.EurekaDiscoveryServer.EurekaDiscoveryServerApplication\" />\r\n      <module name=\"EurekaDiscoveryServer\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.EurekaDiscoveryServer.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"RestaurantServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.RestaurantService.RestaurantServiceApplication\" />\r\n      <module name=\"RestaurantService\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.RestaurantService.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserAuthenticationServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.UserAuthenticationService.UserAuthenticationServiceApplication\" />\r\n      <module name=\"UserAuthenticationService\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.UserAuthenticationService.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.RestaurantServiceApplication\" />\r\n      <item itemvalue=\"Application.ApiGateawayApplication\" />\r\n      <item itemvalue=\"Application.CustomersapiserviceApplication\" />\r\n      <item itemvalue=\"Application.EurekaDiscoveryServerApplication\" />\r\n      <item itemvalue=\"Application.UserAuthenticationServiceApplication\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.CustomersapiserviceApplication\" />\r\n        <item itemvalue=\"Application.ApiGateawayApplication\" />\r\n        <item itemvalue=\"Application.UserAuthenticationServiceApplication\" />\r\n        <item itemvalue=\"Application.EurekaDiscoveryServerApplication\" />\r\n        <item itemvalue=\"Application.RestaurantServiceApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"9c8a6dba-7c8c-426b-ad82-e45f53e77f5c\" name=\"Changes\" comment=\"\" />\r\n      <created>1717560898011</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1717560898011</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 30e26ff62633f08bdc7225834cffc8fe40a050b2)
-+++ b/.idea/workspace.xml	(date 1718108246749)
-@@ -5,14 +5,16 @@
-   </component>
-   <component name="ChangeListManager">
-     <list default="true" id="9c8a6dba-7c8c-426b-ad82-e45f53e77f5c" name="Changes" comment="">
--      <change afterPath="$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/emails/GenerateEmails.java" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/emails/IGenerateEmails.java" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/services/EmailService.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/customersapiservice/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/customersapiservice/pom.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/UserAuthenticationService/src/main/java/com/example/UserAuthenticationService/domain/Customer.java" beforeDir="false" afterPath="$PROJECT_DIR$/UserAuthenticationService/src/main/java/com/example/UserAuthenticationService/domain/Customer.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/UserAuthenticationService/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/UserAuthenticationService/src/main/resources/application.properties" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/CustomersapiserviceApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/CustomersapiserviceApplication.java" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/controller/CustomerController.java" beforeDir="false" afterPath="$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/controller/CustomerController.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/customersapiservice/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/customersapiservice/src/main/resources/application.properties" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/services/ICustomerService.java" beforeDir="false" afterPath="$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/services/ICustomerService.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/services/ImplCustomerService.java" beforeDir="false" afterPath="$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/services/ImplCustomerService.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.html" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.ts" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.ts" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -41,28 +43,28 @@
-     <option name="hideEmptyMiddlePackages" value="true" />
-     <option name="showLibraryContents" value="true" />
-   </component>
--  <component name="PropertiesComponent"><![CDATA[{
--  "keyToString": {
--    "Application.ApiGateawayApplication.executor": "Run",
--    "Application.CustomersapiserviceApplication.executor": "Run",
--    "Application.EurekaDiscoveryServerApplication.executor": "Run",
--    "Application.RestaurantServiceApplication.executor": "Run",
--    "Application.UserAuthenticationServiceApplication.executor": "Run",
--    "Application.abc.executor": "Run",
--    "RunOnceActivity.OpenProjectViewOnStart": "true",
--    "RunOnceActivity.ShowReadmeOnStart": "true",
--    "git-widget-placeholder": "dev-v1",
--    "kotlin-language-version-configured": "true",
--    "last_opened_file_path": "D:/Personal Folders/SND/major-capstone-project/BackEnd",
--    "settings.editor.selected.configurable": "preferences.pluginManager"
-+  <component name="PropertiesComponent">{
-+  &quot;keyToString&quot;: {
-+    &quot;Application.ApiGateawayApplication.executor&quot;: &quot;Run&quot;,
-+    &quot;Application.CustomersapiserviceApplication.executor&quot;: &quot;Run&quot;,
-+    &quot;Application.EurekaDiscoveryServerApplication.executor&quot;: &quot;Run&quot;,
-+    &quot;Application.RestaurantServiceApplication.executor&quot;: &quot;Run&quot;,
-+    &quot;Application.UserAuthenticationServiceApplication.executor&quot;: &quot;Run&quot;,
-+    &quot;Application.abc.executor&quot;: &quot;Run&quot;,
-+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-+    &quot;git-widget-placeholder&quot;: &quot;dev-v1&quot;,
-+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-+    &quot;last_opened_file_path&quot;: &quot;D:/Personal Folders/SND/major-capstone-project/BackEnd&quot;,
-+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
-   }
--}]]></component>
-+}</component>
-   <component name="RecentsManager">
-     <key name="CopyFile.RECENT_KEYS">
-       <recent name="C:\Users\Avish Madaan\Desktop\NIIT\Phase 2\Course 14 - Capstone Project\major-capstone-project\FoodieApp" />
-     </key>
-   </component>
--  <component name="RunManager" selected="Application.ApiGateawayApplication">
-+  <component name="RunManager">
-     <configuration name="ApiGateawayApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-       <option name="MAIN_CLASS_NAME" value="com.example.ApiGateaway.ApiGateawayApplication" />
-       <module name="ApiGateaway" />
-@@ -137,11 +139,11 @@
-     </list>
-     <recent_temporary>
-       <list>
-+        <item itemvalue="Application.EurekaDiscoveryServerApplication" />
-+        <item itemvalue="Application.UserAuthenticationServiceApplication" />
-         <item itemvalue="Application.CustomersapiserviceApplication" />
-+        <item itemvalue="Application.RestaurantServiceApplication" />
-         <item itemvalue="Application.ApiGateawayApplication" />
--        <item itemvalue="Application.UserAuthenticationServiceApplication" />
--        <item itemvalue="Application.EurekaDiscoveryServerApplication" />
--        <item itemvalue="Application.RestaurantServiceApplication" />
-       </list>
-     </recent_temporary>
-   </component>
-Index: ../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.ts
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import { Component, OnInit } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { UserService } from '../../services/user.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { customer } from '../../Model/customer';\r\nimport { RegisterComponent } from '../register/register.component';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrl: './navbar.component.css'\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  activeCustomer:customer;\r\n  customerJwt:string;\r\n\r\n  constructor(private cookieService:CookieService, private userService:UserService, public dialog:MatDialog){}\r\n  isLoggedIn:boolean = false;\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(this.cookieService.check(\"token\")) {\r\n      this.isLoggedIn = true\r\n      this.customerJwt = this.cookieService.get(\"token\")\r\n      console.log(\"Jwt: \"+this.customerJwt);\r\n      this.fetchActiveCustomer();\r\n    }\r\n\r\n    this.userService.logInSubject.subscribe({\r\n      next:data => {\r\n        this.isLoggedIn = data;\r\n        this.customerJwt = this.cookieService.get(\"token\")\r\n        this.fetchActiveCustomer();\r\n      }\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    this.cookieService.delete(\"token\");\r\n    this.isLoggedIn=false;\r\n  }\r\n\r\n  openLoginDialog(enterAnimationDuration: string, exitAnimationDuration: string):void {\r\n    this.dialog.open(LoginComponent, {\r\n      width: \"400px\"\r\n    })\r\n  }\r\n\r\n  openSignupDialog(enterAnimationDuration: string, exitAnimationDuration: string):void {\r\n    this.dialog.open(RegisterComponent, {\r\n      width: \"400px\"\r\n    })\r\n  }\r\n\r\n  fetchActiveCustomer() {\r\n    console.log(\"Fetch called\")\r\n    console.log(\"Inside fetc jwt :\" +this.customerJwt);\r\n    this.userService.fetchCustomerByJwt(this.customerJwt).subscribe({\r\n      next:data => {\r\n        this.activeCustomer = data\r\n        console.log(data);\r\n      },\r\n      error:e => {\r\n        console.log(e);\r\n\r\n      }\r\n    })\r\n  }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.ts b/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.ts
---- a/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.ts	(revision 30e26ff62633f08bdc7225834cffc8fe40a050b2)
-+++ b/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.ts	(date 1718110397433)
-@@ -60,6 +60,7 @@
-     this.userService.fetchCustomerByJwt(this.customerJwt).subscribe({
-       next:data => {
-         this.activeCustomer = data
-+        this.userService.sendCustomerFavRest(data.customerFavRestaurant)
-         console.log(data);
-       },
-       error:e => {
-Index: ../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.css
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.css b/../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.css
---- a/../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.css	(revision 30e26ff62633f08bdc7225834cffc8fe40a050b2)
-+++ b/../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.css	(date 1718109952532)
-@@ -1,0 +1,3 @@
-+.close-button {
-+    margin: 10px 15px auto auto;
-+    }
-\ No newline at end of file
-Index: ../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.ts
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import { Dialog } from '@angular/cdk/dialog';\r\nimport { Component } from '@angular/core';\r\nimport { LoginComponent } from '../login/login.component';\r\n\r\n@Component({\r\n  selector: 'app-loginalert',\r\n  templateUrl: './loginalert.component.html',\r\n  styleUrl: './loginalert.component.css'\r\n})\r\nexport class LoginalertComponent {\r\n  constructor(private dialog:Dialog){}\r\n\r\n  openLoginDialog(){\r\n    this.dialog.open(LoginComponent);\r\n  }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.ts b/../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.ts
---- a/../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.ts	(revision 30e26ff62633f08bdc7225834cffc8fe40a050b2)
-+++ b/../FrontEnd/DishDash/src/app/Components/loginalert/loginalert.component.ts	(date 1718109799230)
-@@ -1,6 +1,7 @@
- import { Dialog } from '@angular/cdk/dialog';
- import { Component } from '@angular/core';
- import { LoginComponent } from '../login/login.component';
-+import { MatDialog, MatDialogRef } from '@angular/material/dialog';
- 
- @Component({
-   selector: 'app-loginalert',
-@@ -8,9 +9,14 @@
-   styleUrl: './loginalert.component.css'
- })
- export class LoginalertComponent {
--  constructor(private dialog:Dialog){}
-+  constructor(private dialog:MatDialog, public dialogRef:MatDialogRef<LoginalertComponent>){}
-+
-+  closeDialog(){
-+    this.dialogRef.close();
-+  }
- 
-   openLoginDialog(){
-+    this.closeDialog();
-     this.dialog.open(LoginComponent);
-   }
- 
-Index: ../FrontEnd/DishDash/src/app/services/user.service.ts
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { customerLogin } from '../Model/customerLogin';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { customer } from '../Model/customer';\r\nimport { restaurant } from '../Model/restaurant';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  loginAPIkey:string = ``;\r\n\r\n  logInSubject = new Subject<boolean>()\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  loginUser(data:customerLogin):Observable<string> {\r\n    return this.http.post(\"http://localhost:8081/api/v1/login\", data,  { responseType: 'text' });\r\n  }\r\n\r\n  registerUser(customer:any):Observable<any>\r\n  {\r\n    return this.http.post<any>(\"http://localhost:8083/api/v2/register\",customer);\r\n  }\r\n\r\n  fetchCustomerByJwt(Jwt:any):Observable<customer> {\r\n\r\n    const headers = new HttpHeaders({\r\n      'Authorization': `Bearer ${Jwt}` \r\n    });\r\n    console.log(headers);\r\n\r\n    return this.http.get<customer>('http://localhost:8083/api/v2/customers/eachcustomer',{ headers });\r\n  }\r\n\r\n  fetchCustomerFavRestaurants(customerId:string):Observable<string> {\r\n    return this.http.get<string>(\"url\")\r\n  }\r\n\r\n  login(isLoggedIn:boolean) {\r\n    this.logInSubject.next(isLoggedIn);\r\n  }\r\n\r\n  fetchCustomerFavByJwt(Jwt:any):Observable<Array<string>> {\r\n\r\n    const headers = new HttpHeaders({\r\n      'Authorization': `Bearer ${Jwt}` \r\n    });\r\n    console.log(headers);\r\n\r\n    return this.http.get<Array<string>>('http://localhost:8083/api/v2/customers/eachcustomer',{ headers });\r\n  }\r\n\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/../FrontEnd/DishDash/src/app/services/user.service.ts b/../FrontEnd/DishDash/src/app/services/user.service.ts
---- a/../FrontEnd/DishDash/src/app/services/user.service.ts	(revision 30e26ff62633f08bdc7225834cffc8fe40a050b2)
-+++ b/../FrontEnd/DishDash/src/app/services/user.service.ts	(date 1718111595055)
-@@ -14,6 +14,8 @@
- 
-   logInSubject = new Subject<boolean>()
- 
-+  getCustomerFavRestaurants = new Subject<Array<string>>
-+
-   constructor(private http:HttpClient) { }
- 
-   loginUser(data:customerLogin):Observable<string> {
-@@ -54,4 +56,21 @@
-   }
- 
- 
-+  //This is sending to Restaurant View
-+  sendCustomerFavRest(favRest:string[]) {
-+    this.getCustomerFavRestaurants.next(favRest);
-+  }
-+
-+  //Sending Customer Fav To Backend
-+
-+  sendFavoriteRestToCustomer(resId:string, Jwt:string) {
-+
-+    const headers = new HttpHeaders({
-+      'Authorization': `Bearer ${Jwt}` 
-+    });
-+    console.log(headers);
-+
-+    this.http.put<string>("http://localhost:8082/api/v2//customers/addfavres", resId, { headers })
-+  }
-+
- }
-Index: UserAuthenticationService/src/main/java/com/example/UserAuthenticationService/domain/Customer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.UserAuthenticationService.domain;\r\n\r\nimport jakarta.persistence.Entity;\r\n\r\nimport jakarta.persistence.Id;\r\nimport jakarta.validation.constraints.Email;\r\nimport jakarta.validation.constraints.NotNull;\r\nimport jakarta.validation.constraints.Size;\r\nimport lombok.*;\r\n\r\n@Entity\r\n@Getter\r\n@Setter\r\n@NoArgsConstructor\r\n@AllArgsConstructor\r\n@ToString\r\npublic class Customer {\r\n\r\n    @Id\r\n    private String customerId;\r\n    private String customerEmail;\r\n\r\n\r\n    private String customerPassword;\r\n\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/UserAuthenticationService/src/main/java/com/example/UserAuthenticationService/domain/Customer.java b/UserAuthenticationService/src/main/java/com/example/UserAuthenticationService/domain/Customer.java
---- a/UserAuthenticationService/src/main/java/com/example/UserAuthenticationService/domain/Customer.java	(revision 30e26ff62633f08bdc7225834cffc8fe40a050b2)
-+++ b/UserAuthenticationService/src/main/java/com/example/UserAuthenticationService/domain/Customer.java	(date 1718089182391)
-@@ -19,8 +19,6 @@
-     @Id
-     private String customerId;
-     private String customerEmail;
--
--
-     private String customerPassword;
- 
- 
Index: ../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.restaurant-container {\r\n  max-width: 1200px;\r\n  margin: auto;\r\n  padding: 20px;\r\n}\r\n\r\n.restaurant-header {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.carousel-inner img {\r\n  height: 400px;\r\n  object-fit: cover;\r\n}\r\n\r\n.restaurant-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.restaurant-info .info-left {\r\n  flex: 3;\r\n}\r\n\r\n.restaurant-info h1 {\r\n  font-size: 2.5em;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.restaurant-info .cuisines {\r\n  display: flex;\r\n  gap: 10px;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.restaurant-info .cuisines .badge {\r\n  font-size: 0.9em;\r\n}\r\n\r\n.restaurant-info .address,\r\n.restaurant-info .description {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n  color: #6c757d;\r\n}\r\n\r\n.restaurant-info .address mat-icon,\r\n.restaurant-info .description mat-icon {\r\n  font-size: 1.2em;\r\n  color: #007bff;\r\n}\r\n\r\n.restaurant-info .info-right {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n.rating-favorite {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.rating-favorite .fav {\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n  transition: color 0.3s ease-in-out;\r\n}\r\n\r\n.rating-favorite .fav.favorited {\r\n  color: red;\r\n  animation: pulse 0.6s;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.2); }\r\n  100% { transform: scale(1); }\r\n}\r\n\r\n.menu-section {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.categories {\r\n  flex: 1;\r\n  background-color: #f8f9fa;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.categories h2 {\r\n  margin-bottom: 20px;\r\n  font-size: 1.5em;\r\n}\r\n\r\n.category-item {\r\n  padding: 10px 15px;\r\n  margin-bottom: 10px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease-in-out;\r\n}\r\n\r\n.category-item:hover {\r\n  background-color: #e9ecef;\r\n}\r\n\r\n.menu-items {\r\n  flex: 3;\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.menu-category {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.menu-category h3 {\r\n  margin-bottom: 20px;\r\n  font-size: 1.75em;\r\n}\r\n\r\n.menu-item {\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.item-image img {\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 8px;\r\n  object-fit: cover;\r\n}\r\n\r\n.item-info {\r\n  flex: 1;\r\n}\r\n\r\n.item-info h4 {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.item-info .rating,\r\n.item-info .price,\r\n.item-info .description {\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.item-info .badge {\r\n  margin-right: 10px;\r\n}\r\n\r\n.add-to-cart {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.quantity-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.spinner {\r\n  margin-top: 20px;\r\n}\r\n\r\n.no-such-restaurant {\r\n  text-align: center;\r\n  margin-top: 50px;\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.css b/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.css
--- a/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.css	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.css	(date 1718750162950)
@@ -1,3 +1,4 @@
+/* Updated CSS */
 .restaurant-container {
   max-width: 1200px;
   margin: auto;
@@ -69,20 +70,38 @@
   gap: 10px;
 }
 
+.restaurant-info .info-right .rating {
+  font-size: 1.5em;
+}
+
 .rating-favorite {
   display: flex;
   align-items: center;
   gap: 10px;
 }
 
+.fav {
+  font-size: 50px  !important;
+  width: 20%;
+  height: 100%;
+  color: red;
+}
+
+.favblack {
+  font-size: 50px  !important;
+  width: 20%;
+  height: 100%;
+}
+
 .rating-favorite .fav {
-  font-size: 30px;
+  font-size: 40px;
   cursor: pointer;
-  transition: color 0.3s ease-in-out;
+  transition: color 0.3s ease-in-out, transform 0.3s;
 }
 
 .rating-favorite .fav.favorited {
   color: red;
+  transform: scale(1.2);
   animation: pulse 0.6s;
 }
 
@@ -103,6 +122,8 @@
   padding: 20px;
   border-radius: 8px;
   box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
+  position: sticky;
+  top: 20px;
 }
 
 .categories h2 {
@@ -150,6 +171,10 @@
   box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
 }
 
+.item-image {
+  position: relative;
+}
+
 .item-image img {
   width: 100px;
   height: 100px;
@@ -157,6 +182,14 @@
   object-fit: cover;
 }
 
+.item-image .badge {
+  position: absolute;
+  bottom: -10px;
+  left: 0;
+  right: 0;
+  text-align: center;
+}
+
 .item-info {
   flex: 1;
 }
@@ -195,4 +228,3 @@
   text-align: center;
   margin-top: 50px;
 }
-
Index: ../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div *ngIf=\"spinnerVisible; else content\" class=\"spinner flex justify-content-center\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n\r\n<ng-template #content>\r\n  <div class=\"restaurant-container\">\r\n    <!-- Restaurant Header Section -->\r\n    <div class=\"restaurant-header\">\r\n      <div id=\"restaurantImagesCarousel\" class=\"carousel slide\" data-bs-ride=\"carousel\">\r\n        <div class=\"carousel-inner\">\r\n          <div *ngFor=\"let x of oneRestaurant.resImages; let i = index\" [class]=\"i === 0 ? 'carousel-item active' : 'carousel-item'\">\r\n            <img [src]=\"x\" class=\"d-block w-100\" alt=\"Restaurant Image\">\r\n          </div>\r\n        </div>\r\n        <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#restaurantImagesCarousel\" data-bs-slide=\"prev\">\r\n          <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n          <span class=\"visually-hidden\">Previous</span>\r\n        </button>\r\n        <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#restaurantImagesCarousel\" data-bs-slide=\"next\">\r\n          <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n          <span class=\"visually-hidden\">Next</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"restaurant-info\">\r\n        <div class=\"info-left\">\r\n          <h1>{{ oneRestaurant.resName }}</h1>\r\n          <div class=\"cuisines\">\r\n            <span *ngFor=\"let cuisine of oneRestaurant.resCuisines\" class=\"badge bg-primary\">{{ cuisine }}</span>\r\n          </div>\r\n          <p class=\"address\"><mat-icon>location_on</mat-icon>{{ oneRestaurant.resAddress }}</p>\r\n          <p class=\"description\"><mat-icon>description</mat-icon>{{ oneRestaurant.resDescription }}</p>\r\n        </div>\r\n        <div class=\"info-right\">\r\n          <span class=\"badge bg-success\">{{ oneRestaurant.resRating }}</span>\r\n          <mat-icon class=\"fav\" [class.favorited]=\"isFavorite\" [fontIcon]=\"isFavorite ? 'favorite' : 'favorite_border'\" (click)=\"toggleFav()\"></mat-icon>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Categories and Menu Section -->\r\n    <div class=\"menu-section\">\r\n      <div class=\"categories\">\r\n        <h2>Categories</h2>\r\n        <div *ngFor=\"let category of categoryArray\" class=\"category-item pointer\" (click)=\"scrollToCategory(category[0])\">\r\n          {{ category[0] }} ({{ category[1] }})\r\n        </div>\r\n      </div>\r\n      <div class=\"menu-items\">\r\n        <div *ngFor=\"let category of categoryWiseDishesArray\" class=\"menu-category\" id=\"{{ category[0] }}\">\r\n          <h3>{{ category[0] }}</h3>\r\n          <div *ngFor=\"let item of category[1]\" class=\"menu-item\">\r\n            <div class=\"item-image\">\r\n              <img [src]=\"item.dishImage\" alt=\"{{ item.dishName }}\">\r\n            </div>\r\n            <div class=\"item-info\">\r\n              <h4>{{ item.dishName }}</h4>\r\n              <p class=\"rating\">{{ item.dishRating }} people rated</p>\r\n              <p class=\"price\">Rs {{ item.dishPrice }}/-</p>\r\n              <p class=\"description\">{{ item.dishDescription }}</p>\r\n              <span class=\"badge\" [ngClass]=\"item.veg ? 'bg-success' : 'bg-danger'\">{{ item.veg ? 'Veg' : 'Non-Veg' }}</span>\r\n              <div class=\"add-to-cart\">\r\n                <button class=\"btn btn-warning mt-2\" *ngIf=\"!isInCart(item)\" (click)=\"increaseCount(item)\">Add +</button>\r\n                <div class=\"quantity-controls mt-2\" *ngIf=\"isInCart(item)\">\r\n                  <button class=\"btn btn-dark\" (click)=\"decreaseCount(item)\">-</button>\r\n                  <span>{{ getCartItemQuantity(item) }}</span>\r\n                  <button class=\"btn btn-dark\" (click)=\"increaseCount(item)\">+</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- No Such Restaurant -->\r\n    <div class=\"no-such-restaurant flex justify-content-center align-items-center flex-column mt-5\" *ngIf=\"noSuchRestaurant\">\r\n      <h2>No Such Restaurant.....</h2>\r\n      <a routerLink=\"/\" class=\"btn btn-primary mt-3\">Go To Home Page</a>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.html b/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.html
--- a/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.html	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.html	(date 1718749853778)
@@ -1,3 +1,4 @@
+<!-- Updated HTML -->
 <div *ngIf="spinnerVisible; else content" class="spinner flex justify-content-center">
   <mat-spinner></mat-spinner>
 </div>
@@ -31,15 +32,16 @@
           <p class="description"><mat-icon>description</mat-icon>{{ oneRestaurant.resDescription }}</p>
         </div>
         <div class="info-right">
-          <span class="badge bg-success">{{ oneRestaurant.resRating }}</span>
-          <mat-icon class="fav" [class.favorited]="isFavorite" [fontIcon]="isFavorite ? 'favorite' : 'favorite_border'" (click)="toggleFav()"></mat-icon>
+          <span class="badge bg-success rating">{{ oneRestaurant.resRating }}</span>
+          <mat-icon class="fav" fontIcon='favorite' (click)="toggleFav()" *ngIf="isFavorite"></mat-icon>
+          <mat-icon class="favblack " fontIcon="favorite_border" (click)="toggleFav()" *ngIf="!isFavorite"></mat-icon>
         </div>
       </div>
     </div>
 
     <!-- Categories and Menu Section -->
     <div class="menu-section">
-      <div class="categories">
+      <div class="categories position-sticky top-0 ">
         <h2>Categories</h2>
         <div *ngFor="let category of categoryArray" class="category-item pointer" (click)="scrollToCategory(category[0])">
           {{ category[0] }} ({{ category[1] }})
@@ -51,13 +53,13 @@
           <div *ngFor="let item of category[1]" class="menu-item">
             <div class="item-image">
               <img [src]="item.dishImage" alt="{{ item.dishName }}">
+              <span class="badge" [ngClass]="item.veg ? 'bg-success' : 'bg-danger'">{{ item.veg ? 'Veg' : 'Non-Veg' }}</span>
             </div>
             <div class="item-info">
               <h4>{{ item.dishName }}</h4>
               <p class="rating">{{ item.dishRating }} people rated</p>
               <p class="price">Rs {{ item.dishPrice }}/-</p>
               <p class="description">{{ item.dishDescription }}</p>
-              <span class="badge" [ngClass]="item.veg ? 'bg-success' : 'bg-danger'">{{ item.veg ? 'Veg' : 'Non-Veg' }}</span>
               <div class="add-to-cart">
                 <button class="btn btn-warning mt-2" *ngIf="!isInCart(item)" (click)="increaseCount(item)">Add +</button>
                 <div class="quantity-controls mt-2" *ngIf="isInCart(item)">
Index: ../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { restaurant } from '../../Model/restaurant';\r\nimport { RestaurantService } from '../../services/restaurant.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginalertComponent } from '../loginalert/loginalert.component';\r\nimport { UserService } from '../../services/user.service';\r\nimport { customer } from '../../Model/customer';\r\nimport { dish } from '../../Model/dish';\r\nimport { CartServiceService } from '../../services/cart-service.service';\r\nimport { CartDish } from '../../Model/CartDish';\r\n\r\n@Component({\r\n  selector: 'app-restaurantview',\r\n  templateUrl: './restaurantview.component.html',\r\n  styleUrls: ['./restaurantview.component.css'],\r\n})\r\nexport class RestaurantviewComponent implements OnInit {\r\n  oneRestaurant: restaurant;\r\n  categoryAndCount = new Map();\r\n  categoryArray: [string, number][] = [];\r\n  isFavorite: boolean = false;\r\n  custFavorites: string[] = [];\r\n  spinnerVisible: boolean = false;\r\n  categoryWise = new Map();\r\n  categoryWiseDishesArray: [string, dish[]][] = [];\r\n  noSuchRestaurant = false;\r\n  activeCustomer: customer;\r\n\r\n  constructor(\r\n    private ac: ActivatedRoute,\r\n    private resService: RestaurantService,\r\n    private cookieService: CookieService,\r\n    public dialog: MatDialog,\r\n    private userService: UserService,\r\n    private cartService: CartServiceService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.spinnerVisible = true;\r\n    this.ac.paramMap.subscribe({\r\n      next: data => {\r\n        let restId = data.get('resid');\r\n        this.fetchRestaurantById(restId);\r\n        this.initilizeCart();\r\n        this.fetchActiveCustomerFavs();\r\n      },\r\n      error: e => {\r\n        console.log(e);\r\n        this.spinnerVisible = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Fetching active customer\r\n  fetchActiveCustomer() {\r\n    const Jwt = this.cookieService.get(\"token\")\r\n    this.userService.fetchCustomerByJwt(Jwt).subscribe({\r\n      next: data => {\r\n        console.log(\"fetching Success\")\r\n        this.activeCustomer = data;\r\n      },\r\n      error: e => {\r\n        console.log(\"Error while fetching the customer\")\r\n        console.log(e);\r\n      }\r\n    })\r\n  }\r\n\r\n  // Initialize cart\r\n  initilizeCart() {\r\n    if (!localStorage.getItem('cart')) {\r\n      localStorage.setItem('cart', JSON.stringify([]));\r\n    }\r\n  }\r\n\r\n  // Adding to cart Method, when user clicks to add\r\n  addToCart(dish: dish) {\r\n    if (this.checkDifferentRestaurant(dish)) {\r\n      const confirmation = confirm(\"You already have items from a different restaurant in your cart. Do you want to clear the cart and add items from the restaurant?\");\r\n      if (confirmation) {\r\n        localStorage.setItem('cart', JSON.stringify([]));\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    let cart = JSON.parse(localStorage.getItem('cart') || '[]');\r\n\r\n    // Checking if the dish is already present\r\n    const existingItem = cart.find((item: any) => item.dishName === dish.dishName);\r\n\r\n    if (existingItem) {\r\n      existingItem.quantity += 1;\r\n    } else {\r\n      cart.push({ ...dish, quantity: 1, restaurantId: this.oneRestaurant.resId });\r\n    }\r\n\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n    this.updateNavBarCartCount();\r\n  }\r\n\r\n  // For the + button\r\n  increaseCount(item: dish) {\r\n    this.addToCart(item);\r\n  }\r\n\r\n  // Decrease Quantity\r\n  decreaseCount(dish: dish) {\r\n    let cart = JSON.parse(localStorage.getItem('cart') || '[]');\r\n    const existingItem = cart.find((item: any) => item.dishName === dish.dishName);\r\n\r\n    if (existingItem) {\r\n      if (existingItem.quantity > 1) {\r\n        existingItem.quantity -= 1;\r\n      } else {\r\n        cart = cart.filter((item: any) => item.dishName !== dish.dishName);\r\n      }\r\n      localStorage.setItem('cart', JSON.stringify(cart));\r\n      this.updateNavBarCartCount();\r\n    }\r\n  }\r\n\r\n  // Updating nav bar about it\r\n  updateNavBarCartCount() {\r\n    const event = new Event('storage');\r\n    window.dispatchEvent(event);\r\n  }\r\n\r\n  // For checking is dish in the cart\r\n  isInCart(dish: dish): boolean {\r\n    let cart = JSON.parse(localStorage.getItem('cart') || '[]');\r\n    return cart.some((item: any) => item.dishName === dish.dishName);\r\n  }\r\n\r\n  // For getting CartItem Quantity\r\n  getCartItemQuantity(dish: dish): number {\r\n    let cart = JSON.parse(localStorage.getItem('cart') || '[]');\r\n    const cartItem = cart.find((item: any) => item.dishName === dish.dishName);\r\n    return cartItem ? cartItem.quantity : 0;\r\n  }\r\n\r\n  // Checking Different Restaurant\r\n  checkDifferentRestaurant(dish: dish): boolean {\r\n    let cart = JSON.parse(localStorage.getItem('cart') || '[]');\r\n    if (cart.length > 0) {\r\n      const existingItem = cart[0];\r\n      if (existingItem && existingItem.restaurantId !== this.oneRestaurant.resId) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  fetchRestaurantById(id: string) {\r\n    this.resService.fetchRestaurantByid(id).subscribe({\r\n      next: data => {\r\n        this.oneRestaurant = data;\r\n        this.prepareMapForCategories();\r\n        this.categoryArray = Array.from(this.categoryAndCount.entries());\r\n        this.prepareCategoryWise();\r\n        this.categoryWiseDishesArray = Array.from(this.categoryWise.entries());\r\n\r\n        if (this.cookieService.get('token')) {\r\n          this.fetchActiveCustomer();\r\n        }\r\n\r\n        this.spinnerVisible = false;\r\n      },\r\n      error: e => {\r\n        console.log(\"Error fetching restaurant\", e);\r\n        this.spinnerVisible = false;\r\n        this.noSuchRestaurant = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Fetching Customer Favorite Restaurant List\r\n  fetchActiveCustomerFavs() {\r\n    const Jwt = this.cookieService.get('token');\r\n    this.userService.fetchCustomerFavByJwt(Jwt).subscribe({\r\n      next: data => {\r\n        this.custFavorites = data;\r\n        console.log(\"Best Coming: \", data);\r\n        console.log(\"One Restaurant: \", this.oneRestaurant);\r\n\r\n        if (this.oneRestaurant) {\r\n          console.log(\"Restaurant ID: \", this.oneRestaurant.resId);\r\n          console.log(\"Customer Favorites: \", this.custFavorites);\r\n          console.log(\"Condition: \", this.custFavorites.includes(this.oneRestaurant.resId));\r\n\r\n          if (this.custFavorites.includes(this.oneRestaurant.resId)) {\r\n            console.log(\"It's true for favorite\");\r\n            this.isFavorite = true;\r\n          }\r\n        }\r\n      },\r\n      error: e => {\r\n        console.log(\"Error in fetch cust fav\", e);\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleFav() {\r\n    if (!this.cookieService.get('token')) {\r\n      this.openLoginAlertDialog('3000ms', '1500ms');\r\n      return; // Stop further execution if user is not logged in\r\n    }\r\n\r\n    this.isFavorite = !this.isFavorite;\r\n    const Jwt = this.cookieService.get('token');\r\n\r\n    if (this.isFavorite) {\r\n      console.log(\"Addintion Request\");\r\n      this.userService.sendFavoriteRestToCustomer(this.oneRestaurant.resId, Jwt).subscribe({\r\n        next: data => {\r\n          console.log(\"Added Success\");\r\n        },\r\n        error: e => {\r\n          console.log(\"Error adding favorite\", e);\r\n        }\r\n      });\r\n    } else {\r\n      console.log(\"Deletion Request\");\r\n      this.userService.DeleteFavoriteRestFromCustomer(this.oneRestaurant.resId, Jwt).subscribe({\r\n        next: data => {\r\n          console.log(\"Deletion Success\");\r\n        },\r\n        error: e => {\r\n          console.log(\"Error deleting favorite\", e);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  openLoginAlertDialog(enterAnimationDuration: string, exitAnimationDuration: string): void {\r\n    this.dialog.open(LoginalertComponent, {\r\n      width: '400px',\r\n    });\r\n  }\r\n\r\n  prepareMapForCategories() {\r\n    for (let category of this.oneRestaurant.resCategories) {\r\n      let count = 0;\r\n      for (let dish of this.oneRestaurant.resMenu) {\r\n        if (dish.dishCategory.toLowerCase() == category.toLowerCase()) {\r\n          count++;\r\n        }\r\n      }\r\n      this.categoryAndCount.set(category, count);\r\n    }\r\n  }\r\n\r\n  prepareCategoryWise() {\r\n    let dishesInOneCategory = [];\r\n    for (let category of this.oneRestaurant.resCategories) {\r\n      for (let dish of this.oneRestaurant.resMenu) {\r\n        if (dish.dishCategory.toLowerCase() == category.toLowerCase()) {\r\n          dishesInOneCategory.push(dish);\r\n        }\r\n      }\r\n      this.categoryWise.set(category, dishesInOneCategory);\r\n      dishesInOneCategory = [];\r\n    }\r\n    console.log(\"MyDisWise Map\", dishesInOneCategory);\r\n  }\r\n\r\n  scrollToCategory(category: string) {\r\n    console.log(\"Scroll Called\");\r\n    const element = document.getElementById(category);\r\n    console.log(element);\r\n\r\n    if (element) {\r\n      element.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.ts b/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.ts
--- a/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.ts	(date 1718749444562)
@@ -10,6 +10,7 @@
 import { dish } from '../../Model/dish';
 import { CartServiceService } from '../../services/cart-service.service';
 import { CartDish } from '../../Model/CartDish';
+import { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';
 
 @Component({
   selector: 'app-restaurantview',
@@ -33,8 +34,7 @@
     private resService: RestaurantService,
     private cookieService: CookieService,
     public dialog: MatDialog,
-    private userService: UserService,
-    private cartService: CartServiceService
+    private userService: UserService
   ) {}
 
   ngOnInit(): void {
@@ -53,6 +53,7 @@
     });
   }
 
+
   // Fetching active customer
   fetchActiveCustomer() {
     const Jwt = this.cookieService.get("token")
@@ -78,29 +79,37 @@
   // Adding to cart Method, when user clicks to add
   addToCart(dish: dish) {
     if (this.checkDifferentRestaurant(dish)) {
-      const confirmation = confirm("You already have items from a different restaurant in your cart. Do you want to clear the cart and add items from the restaurant?");
-      if (confirmation) {
-        localStorage.setItem('cart', JSON.stringify([]));
-      } else {
-        return;
-      }
-    }
+      const dialogRef = this.dialog.open(ConfirmDialogComponent);
+  
+      dialogRef.afterClosed().subscribe(result => {
+        if (result) {
+          localStorage.setItem('cart', JSON.stringify([]));
+          this.addDishToCart(dish);
+        }
+      });
+    } else {
+      this.addDishToCart(dish);
+    }
+  }
 
+  addDishToCart(dish: dish) {
     let cart = JSON.parse(localStorage.getItem('cart') || '[]');
-
+  
     // Checking if the dish is already present
     const existingItem = cart.find((item: any) => item.dishName === dish.dishName);
-
+  
     if (existingItem) {
       existingItem.quantity += 1;
     } else {
       cart.push({ ...dish, quantity: 1, restaurantId: this.oneRestaurant.resId });
     }
-
+  
     localStorage.setItem('cart', JSON.stringify(cart));
     this.updateNavBarCartCount();
   }
 
+    
+
   // For the + button
   increaseCount(item: dish) {
     this.addToCart(item);
@@ -161,6 +170,7 @@
         this.categoryArray = Array.from(this.categoryAndCount.entries());
         this.prepareCategoryWise();
         this.categoryWiseDishesArray = Array.from(this.categoryWise.entries());
+        this.fetchActiveCustomerFavs();
 
         if (this.cookieService.get('token')) {
           this.fetchActiveCustomer();
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"9c8a6dba-7c8c-426b-ad82-e45f53e77f5c\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10-06-2024_09_31_pm_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10-06-2024_09_31_pm__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16-06-2024_14_44__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16-06-2024_14_44__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/UserAuthenticationService/src/main/resources/application.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/UserAuthenticationService/src/main/resources/application.properties\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/controller/CustomerController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/controller/CustomerController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/domain/Customer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/domain/Customer.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/order-service-api/src/main/java/com/bej/controller/OrderController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/order-service-api/src/main/java/com/bej/controller/OrderController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/order-service-api/src/main/java/com/bej/domain/CartDish.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/order-service-api/src/main/java/com/bej/domain/CartDish.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/order-service-api/src/main/java/com/bej/domain/Order.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/order-service-api/src/main/java/com/bej/domain/Order.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/angular.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/angular.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/profile/profile.component.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/profile/profile.component.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/profile/profile.component.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/profile/profile.component.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurant/restaurant.component.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurant/restaurant.component.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurant/restaurant.component.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurant/restaurant.component.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantcard/restaurantcard.component.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantcard/restaurantcard.component.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantcard/restaurantcard.component.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantcard/restaurantcard.component.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/search/search.component.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/search/search.component.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Model/customer.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Model/customer.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Model/file-handle.ts\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/app.module.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/app.module.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/guards/auth-guard.guard.spec.ts\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/guards/auth-guard.guard.ts\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/guards/can-deactivate.guard.spec.ts\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/guards/can-deactivate.guard.ts\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/services/auth.service.spec.ts\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/services/auth.service.ts\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/services/order-service.service.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/services/order-service.service.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/services/register.service.ts\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/services/user.service.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/app/services/user.service.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/assets/MainLogo.png\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../FrontEnd/DishDash/src/assets/background.jpg\" beforeDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2hRdb5bzKy99WtrSghQJjDoSedT\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.ApiGateawayApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.CartServiceApiApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.CustomersapiserviceApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.EurekaDiscoveryServerApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.OrderServiceApiApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.RestaurantServiceApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.UserAuthenticationServiceApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.abc.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.ApiGateawayApplicationTests.contextLoads.executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.FoodieApp [clean].executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.FoodieApp [compile].executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;dev-v1&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Niit/Major_Capstone_project/major-capstone-project/major-capstone-project/BackEnd&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Avish Madaan\\Desktop\\NIIT\\Phase 2\\Course 14 - Capstone Project\\major-capstone-project\\FoodieApp\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"ApiGateawayApplication\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.ApiGateaway.ApiGateawayApplication\" />\r\n      <module name=\"ApiGateaway\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.ApiGateaway.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CustomersapiserviceApplication\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.bej.customersapiservice.CustomersapiserviceApplication\" />\r\n      <module name=\"customersapiservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.bej.customersapiservice.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"OrderServiceApiApplication\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.bej.OrderServiceApiApplication\" />\r\n      <module name=\"cart-service-api\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.bej.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserAuthenticationServiceApplication\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.UserAuthenticationService.UserAuthenticationServiceApplication\" />\r\n      <module name=\"UserAuthenticationService\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.UserAuthenticationService.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"My Group\" type=\"CompoundRunConfigurationType\">\r\n      <toRun name=\"ApiGateawayApplication\" type=\"Application\" />\r\n      <toRun name=\"CustomersapiserviceApplication\" type=\"Application\" />\r\n      <toRun name=\"OrderServiceApiApplication\" type=\"Application\" />\r\n      <toRun name=\"UserAuthenticationServiceApplication\" type=\"Application\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"ApiGateawayApplicationTests.contextLoads\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ApiGateaway\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.ApiGateaway.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.example.ApiGateaway\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.ApiGateaway.ApiGateawayApplicationTests\" />\r\n      <option name=\"METHOD_NAME\" value=\"contextLoads\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.OrderServiceApiApplication\" />\r\n      <item itemvalue=\"Application.ApiGateawayApplication\" />\r\n      <item itemvalue=\"Application.UserAuthenticationServiceApplication\" />\r\n      <item itemvalue=\"Application.CustomersapiserviceApplication\" />\r\n      <item itemvalue=\"Compound.My Group\" />\r\n      <item itemvalue=\"JUnit.ApiGateawayApplicationTests.contextLoads\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.ApiGateawayApplicationTests.contextLoads\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"9c8a6dba-7c8c-426b-ad82-e45f53e77f5c\" name=\"Changes\" comment=\"\" />\r\n      <created>1717560898011</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1717560898011</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/.idea/workspace.xml	(date 1718769050090)
@@ -5,45 +5,49 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="9c8a6dba-7c8c-426b-ad82-e45f53e77f5c" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10-06-2024_09_31_pm_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10-06-2024_09_31_pm__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16-06-2024_14_44__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16-06-2024_14_44__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12-06-2024_12_36_am_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12-06-2024_12_36_am__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/UserAuthenticationService/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/UserAuthenticationService/src/main/resources/application.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/controller/CustomerController.java" beforeDir="false" afterPath="$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/controller/CustomerController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/domain/Customer.java" beforeDir="false" afterPath="$PROJECT_DIR$/customersapiservice/src/main/java/com/bej/customersapiservice/domain/Customer.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/order-service-api/src/main/java/com/bej/controller/OrderController.java" beforeDir="false" afterPath="$PROJECT_DIR$/order-service-api/src/main/java/com/bej/controller/OrderController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/order-service-api/src/main/java/com/bej/domain/CartDish.java" beforeDir="false" afterPath="$PROJECT_DIR$/order-service-api/src/main/java/com/bej/domain/CartDish.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/order-service-api/src/main/java/com/bej/domain/Order.java" beforeDir="false" afterPath="$PROJECT_DIR$/order-service-api/src/main/java/com/bej/domain/Order.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/angular.json" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/angular.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.css" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/cart/cart.component.css" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/cart/cart.component.css" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/footer/footer.component.css" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/footer/footer.component.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/footer/footer.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/footer/footer.component.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/footer/footer.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/footer/footer.component.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/login/login.component.css" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/login/login.component.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/login/login.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/login/login.component.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/login/login.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/login/login.component.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.css" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.spec.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.css" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.css" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/pagenotfound/pagenotfound.component.css" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/pagenotfound/pagenotfound.component.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/pagenotfound/pagenotfound.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/pagenotfound/pagenotfound.component.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/profile/profile.component.css" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/profile/profile.component.css" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/profile/profile.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/profile/profile.component.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/profile/profile.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/profile/profile.component.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurant/restaurant.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurant/restaurant.component.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurant/restaurant.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurant/restaurant.component.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantcard/restaurantcard.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantcard/restaurantcard.component.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantcard/restaurantcard.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantcard/restaurantcard.component.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/register/register.component.css" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/register/register.component.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/register/register.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/register/register.component.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/register/register.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/register/register.component.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.css" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.css" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/restaurantview/restaurantview.component.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/search/search.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/search/search.component.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Model/customer.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Model/customer.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Model/file-handle.ts" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/support-chat/support-chat.component.css" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/support-chat/support-chat.component.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/support-chat/support-chat.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Components/support-chat/support-chat.component.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Model/Order.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/Model/Order.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/app-routing.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/app-routing.module.ts" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/app.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/app.module.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/guards/auth-guard.guard.spec.ts" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/guards/auth-guard.guard.ts" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/guards/can-deactivate.guard.spec.ts" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/guards/can-deactivate.guard.ts" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/services/auth.service.spec.ts" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/services/auth.service.ts" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/services/order-service.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/services/order-service.service.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/services/register.service.ts" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/services/user.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/app/services/user.service.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/assets/MainLogo.png" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/assets/background.jpg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../FrontEnd/DishDash/src/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/../FrontEnd/DishDash/src/index.html" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -99,7 +103,7 @@
       <recent name="C:\Users\Avish Madaan\Desktop\NIIT\Phase 2\Course 14 - Capstone Project\major-capstone-project\FoodieApp" />
     </key>
   </component>
-  <component name="RunManager">
+  <component name="RunManager" selected="Compound.My Group">
     <configuration name="ApiGateawayApplication" type="Application" factoryName="Application" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="com.example.ApiGateaway.ApiGateawayApplication" />
       <module name="ApiGateaway" />
Index: ../FrontEnd/DishDash/src/app/Components/pagenotfound/pagenotfound.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><h1>Nothing Here.... Don't waste your time</h1>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/pagenotfound/pagenotfound.component.html b/../FrontEnd/DishDash/src/app/Components/pagenotfound/pagenotfound.component.html
--- a/../FrontEnd/DishDash/src/app/Components/pagenotfound/pagenotfound.component.html	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/pagenotfound/pagenotfound.component.html	(date 1718748127078)
@@ -1,1 +1,1 @@
-<h1>Nothing Here.... Don't waste your time</h1>
\ No newline at end of file
+<div class="not-found-contai
\ No newline at end of file
Index: ../FrontEnd/DishDash/src/app/Components/login/login.component.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.header {\r\n    padding: 1rem;\r\n    border-bottom: 1px solid #dee2e6;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n  \r\n  .close-button {\r\n    margin: 0;\r\n    font-size: 1.25rem;\r\n    color: #495057;\r\n  }\r\n  \r\n  .loginform {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .form-outline {\r\n    position: relative;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .form-control {\r\n    padding: 1rem 0.75rem;\r\n    height: auto;\r\n    border-radius: 0.25rem;\r\n    border: 1px solid #ced4da;\r\n    transition: all 0.2s;\r\n  }\r\n  \r\n  .form-control:focus {\r\n    border-color: #80bdff;\r\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n  }\r\n  \r\n  .button {\r\n    text-align: center;\r\n  }\r\n  \r\n  .button button {\r\n    min-width: 100%;\r\n    padding: 0.75rem;\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  .spinner {\r\n    margin-top: 1rem;\r\n  }\r\n  \r\n  .text-center {\r\n    margin-top: 1rem;\r\n  }\r\n  \r\n  .text-center p {\r\n    margin: 0;\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .text-center a {\r\n    color: #007bff;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .text-center a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  \r\n  .alert {\r\n    font-size: 0.9rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/login/login.component.css b/../FrontEnd/DishDash/src/app/Components/login/login.component.css
--- a/../FrontEnd/DishDash/src/app/Components/login/login.component.css	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/login/login.component.css	(date 1718714838029)
@@ -70,6 +70,15 @@
     font-size: 0.9rem;
     margin-bottom: 1rem;
   }
+
+  .login-message {
+    position: fixed;
+    top: 10%;
+    left: 50%;
+    transform: translateX(-50%);
+    z-index: 1050;
+    transition: opacity 0.5s ease-in-out;
+  }
   
 
 
Index: ../FrontEnd/DishDash/src/app/Components/login/login.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div class=\"header flex justify-content-end align-items-center\">\r\n  <button mat-icon-button class=\"close-button\" (click)=\"closeDialoge()\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</div>\r\n\r\n<div class=\"loginform p-5\">\r\n  <form #loginform=\"ngForm\" ngNativeValidate (ngSubmit)=\"loginUser(userlogin)\">\r\n\r\n    <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{errorMessage}}</div>\r\n\r\n    <!-- Email input -->\r\n    <div class=\"form-outline mb-4\">\r\n      <input\r\n        type=\"email\"\r\n        id=\"email\"\r\n        class=\"form-control\"\r\n        name=\"customerEmail\"\r\n        [(ngModel)]=\"userlogin.customerEmail\"\r\n        #customerEmail=\"ngModel\"\r\n        required\r\n        placeholder=\"Email address\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Password input -->\r\n    <div class=\"form-outline mb-4\">\r\n      <input\r\n        type=\"password\"\r\n        id=\"password\"\r\n        class=\"form-control\"\r\n        name=\"customerPassword\"\r\n        [(ngModel)]=\"userlogin.customerPassword\"\r\n        #customerPassword=\"ngModel\"\r\n        required\r\n        placeholder=\"Password\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Submit button -->\r\n    <div class=\"button\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-primary btn-block mb-4\"\r\n        [disabled]=\"loginform.invalid\"\r\n      >\r\n        Sign in\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Spinner -->\r\n    <div class=\"spinner flex justify-content-center\" *ngIf=\"isLoadingSpinner\">\r\n      <mat-spinner></mat-spinner>\r\n    </div>\r\n    \r\n    <!-- Register link -->\r\n    <div class=\"text-center\">\r\n      <p>Not a member? <a class=\"pointer\" (click)=\"openRegister()\">Register</a></p>\r\n    </div>\r\n  </form>\r\n</div>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/login/login.component.html b/../FrontEnd/DishDash/src/app/Components/login/login.component.html
--- a/../FrontEnd/DishDash/src/app/Components/login/login.component.html	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/login/login.component.html	(date 1718714917389)
@@ -58,4 +58,8 @@
       <p>Not a member? <a class="pointer" (click)="openRegister()">Register</a></p>
     </div>
   </form>
+
+  <div class="login-message alert alert-success" *ngIf="loggedInSuccess" role="alert">
+    Logged in successfully!
+  </div>
 </div>
Index: ../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div class=\"address-management-container p-5\">\r\n  <div class=\"add-address-section w-100 mb-5\">\r\n    <mat-accordion class=\"address-accordion\" multi>\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            <mat-icon>add_location_alt</mat-icon>\r\n            Add Your Address\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n\r\n        <form [formGroup]=\"addressForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"form-row\">\r\n            <mat-form-field class=\"w-100\">\r\n              <mat-label>House No/Flat No/Area Name</mat-label>\r\n              <input matInput placeholder=\"House No/Flat No/Area Name\" formControlName=\"address1\">\r\n              <mat-error *ngIf=\"address1?.hasError('required')\">Address Line 1 is required.</mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"w-100\">\r\n              <mat-label>Landmark</mat-label>\r\n              <input matInput placeholder=\"Landmark\" formControlName=\"landMark\">\r\n              <mat-error *ngIf=\"landmark?.hasError('required')\">Landmark is required.</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"form-row\">\r\n            <mat-form-field class=\"w-100\">\r\n              <mat-label>City</mat-label>\r\n              <input matInput placeholder=\"City\" formControlName=\"city\">\r\n              <mat-error *ngIf=\"city?.hasError('required')\">City is required.</mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"w-100\">\r\n              <mat-label>Pin Code</mat-label>\r\n              <input matInput placeholder=\"Pincode\" formControlName=\"pincode\">\r\n              <mat-error *ngIf=\"pincode?.hasError('required')\">Pin Code is required.</mat-error>\r\n              <mat-error *ngIf=\"pincode?.hasError('pattern')\">Pin Code must be 6 digits.</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <button class=\"btn btn-dark btn-block mb-3\" type=\"submit\" [disabled]=\"addressForm.invalid\">Save Address</button>\r\n        </form>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n  </div>\r\n\r\n  <div class=\"saved-addresses-section bg-light p-4 rounded\">\r\n    <div *ngIf=\"spinnerVisible\" class=\"spinner flex justify-content-center\">\r\n      <mat-spinner></mat-spinner>\r\n    </div>\r\n\r\n    <div *ngIf=\"!spinnerVisible && noAddresses\" class=\"no-address flex justify-content-center\">\r\n      <h3>No Saved Addresses...</h3>\r\n    </div>\r\n\r\n    <div *ngIf=\"!spinnerVisible && !noAddresses\">\r\n      <h4 class=\"mb-4\">Your Saved Addresses</h4>\r\n      <div class=\"address-cards\">\r\n        <div *ngFor=\"let address of allAddress; let isFirst = first\" class=\"address-card card shadow-sm mb-3\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">{{ address.address1 }}</h5>\r\n            <p class=\"card-text\"><strong>City:</strong> {{ address.city }}</p>\r\n            <p class=\"card-text\"><strong>Landmark:</strong> {{ address.landMark }}</p>\r\n            <p class=\"card-text\"><strong>Pin Code:</strong> {{ address.pincode }}</p>\r\n        \r\n            <div class=\"d-flex justify-content-between align-items-center mt-3\">\r\n              <button *ngIf=\"!isFirst\" mat-raised-button color=\"primary\" class=\"btn btn-sm\" (click)=\"primaryAddress(address)\">Make Primary</button>\r\n              <button mat-raised-button color=\"warn\" class=\"btn btn-sm\" (click)=\"deleteAddress(address.addressId)\">Delete</button>\r\n            </div>\r\n            <div *ngIf=\"isFirst\" class=\"primary-banner bg-primary text-white text-center p-2 mt-2\">\r\n              Primary Address\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.html b/../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.html
--- a/../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.html	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.html	(date 1718772843886)
@@ -14,13 +14,15 @@
             <mat-form-field class="w-100">
               <mat-label>House No/Flat No/Area Name</mat-label>
               <input matInput placeholder="House No/Flat No/Area Name" formControlName="address1">
-              <mat-error *ngIf="address1?.hasError('required')">Address Line 1 is required.</mat-error>
+              <mat-error *ngIf="address1?.hasError('required')">Address is required.</mat-error>
+              <mat-error *ngIf="address1?.hasError('minlength')">Address should contain atleast 5 characters</mat-error>
             </mat-form-field>
 
             <mat-form-field class="w-100">
               <mat-label>Landmark</mat-label>
               <input matInput placeholder="Landmark" formControlName="landMark">
               <mat-error *ngIf="landmark?.hasError('required')">Landmark is required.</mat-error>
+              <mat-error *ngIf="landmark?.hasError('minlength')">LandMark should contain atleast 5 characters </mat-error>
             </mat-form-field>
           </div>
 
@@ -29,6 +31,8 @@
               <mat-label>City</mat-label>
               <input matInput placeholder="City" formControlName="city">
               <mat-error *ngIf="city?.hasError('required')">City is required.</mat-error>
+              <mat-error *ngIf="city?.hasError('pattern')">Only alphabets are allowed</mat-error>
+              <mat-error *ngIf="city?.hasError('minlength')">City should contain atleast 2 characters </mat-error>
             </mat-form-field>
 
             <mat-form-field class="w-100">
@@ -58,22 +62,21 @@
       <h4 class="mb-4">Your Saved Addresses</h4>
       <div class="address-cards">
         <div *ngFor="let address of allAddress; let isFirst = first" class="address-card card shadow-sm mb-3">
+          <div class="card-header d-flex justify-content-between align-items-center">
+            <h5 class="card-title mb-0">{{ address.address1 }}</h5>
+            <div *ngIf="isFirst" class="badge bg-primary">Primary</div>
+          </div>
           <div class="card-body">
-            <h5 class="card-title">{{ address.address1 }}</h5>
-            <p class="card-text"><strong>City:</strong> {{ address.city }}</p>
-            <p class="card-text"><strong>Landmark:</strong> {{ address.landMark }}</p>
-            <p class="card-text"><strong>Pin Code:</strong> {{ address.pincode }}</p>
-        
-            <div class="d-flex justify-content-between align-items-center mt-3">
+            <p class="card-text"><mat-icon>location_city</mat-icon> {{ address.city }}</p>
+            <p class="card-text"><mat-icon>place</mat-icon> {{ address.landMark }}</p>
+            <p class="card-text"><mat-icon>markunread_mailbox</mat-icon> {{ address.pincode }}</p>
+            <div class="card-actions d-flex justify-content-between align-items-center mt-3">
               <button *ngIf="!isFirst" mat-raised-button color="primary" class="btn btn-sm" (click)="primaryAddress(address)">Make Primary</button>
               <button mat-raised-button color="warn" class="btn btn-sm" (click)="deleteAddress(address.addressId)">Delete</button>
             </div>
-            <div *ngIf="isFirst" class="primary-banner bg-primary text-white text-center p-2 mt-2">
-              Primary Address
-            </div>
-          </div>
-        </div>
-      </div>
-    </div>
-  </div>
-</div>
\ No newline at end of file
+          </div>
+        </div>
+      </div>
+    </div>
+  </div>
+</div>
Index: ../FrontEnd/DishDash/src/app/Components/login/login.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, OnInit } from '@angular/core';\r\nimport { customerLogin } from '../../Model/customerLogin';\r\nimport { UserService } from '../../services/user.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { LoadingService } from '../../services/loading.service';\r\nimport { RegisterComponent } from '../register/register.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  userlogin: customerLogin = {\r\n    customerEmail: '',\r\n    customerPassword: ''\r\n  };\r\n\r\n  customerJWT: string;\r\n  errorMessage: string | null = null;\r\n  isLoadingSpinner = false;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private cookieService: CookieService,\r\n    public dialog: MatDialog,\r\n    public dialogRef: MatDialogRef<LoginComponent>,\r\n    public loadingSevice: LoadingService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userService.listenLogin.subscribe({\r\n      next: data => {\r\n        this.loginUser(data);\r\n      },\r\n      error: e => {\r\n        console.log(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  loginUser(userlogin: customerLogin): void {\r\n    this.isLoadingSpinner = true;\r\n    this.userService.loginUser(userlogin).subscribe({\r\n      next: data => {\r\n        this.isLoadingSpinner = false;\r\n        console.log(\"My JWT \" + data);\r\n        this.customerJWT = data;\r\n        this.cookieService.set(\"token\", this.customerJWT);\r\n        this.afterLogin();\r\n        this.closeDialoge();\r\n      },\r\n      error: e => {\r\n        this.isLoadingSpinner = false;\r\n        console.log(e);\r\n        this.errorMessage = \"Invalid email or password. Please try again\";\r\n      }\r\n    });\r\n  }\r\n\r\n  afterLogin(): void {\r\n    this.userService.login(true);\r\n  }\r\n\r\n  openRegister(): void {\r\n    this.dialog.open(RegisterComponent, {\r\n      width: \"600px\"\r\n    });\r\n\r\n    this.closeDialoge();\r\n  }\r\n\r\n  closeDialoge(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/login/login.component.ts b/../FrontEnd/DishDash/src/app/Components/login/login.component.ts
--- a/../FrontEnd/DishDash/src/app/Components/login/login.component.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/login/login.component.ts	(date 1718714966045)
@@ -21,6 +21,7 @@
   customerJWT: string;
   errorMessage: string | null = null;
   isLoadingSpinner = false;
+  loggedInSuccess:boolean = false;
 
   constructor(
     private userService: UserService,
@@ -50,7 +51,12 @@
         this.customerJWT = data;
         this.cookieService.set("token", this.customerJWT);
         this.afterLogin();
-        this.closeDialoge();
+        
+        this.loggedInSuccess = true;
+        setTimeout(() => {
+          this.loggedInSuccess = false;
+          this.closeDialoge();
+        }, 1000)
       },
       error: e => {
         this.isLoadingSpinner = false;
Index: ../FrontEnd/DishDash/src/app/Components/edit-profile/edit-profile.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div class=\"editprofile container mt-5\">\r\n  <div class=\"header\">\r\n    <h2 class=\"fw-bold mb-4\">Update Your Profile</h2>\r\n  </div>\r\n  \r\n  <form [formGroup]=\"updateForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-field-container\">\r\n      <!-- Customer Name -->\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Your Name</mat-label>\r\n        <input matInput type=\"text\" placeholder=\"Your Name\" formControlName=\"customerName\">\r\n        <mat-error *ngIf=\"updateForm.get('customerName')?.hasError('required')\">\r\n          Name is required\r\n        </mat-error>\r\n        <mat-error *ngIf=\"updateForm.get('customerName')?.hasError('minlength')\">\r\n          Name must have more than 2 characters.\r\n        </mat-error>\r\n        <mat-error *ngIf=\"updateForm.get('customerName')?.hasError('pattern')\">\r\n          Only alphabets are allowed\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <!-- Customer Email -->\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Your Email</mat-label>\r\n        <input matInput type=\"email\" placeholder=\"email\" formControlName=\"customerEmail\" matTooltip=\"You can't edit this email\">\r\n      </mat-form-field>\r\n\r\n      <!-- Customer Phone -->\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Your Phone Number</mat-label>\r\n        <input matInput type=\"text\" placeholder=\"Your Phone\" formControlName=\"customerPhone\">\r\n        <mat-error *ngIf=\"updateForm.get('customerPhone')?.hasError('required')\">\r\n          Phone is required\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <button class=\"full-width btn btn-primary mb-4\" type=\"submit\" [disabled]=\"updateForm.invalid\">Update Profile Info</button>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"spinner\" *ngIf=\"spinnerVisible\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n\r\n  <div class=\"update-message alert alert-success\" *ngIf=\"updateMessageVisible\" role=\"alert\">\r\n    Profile updated successfully!\r\n  </div>\r\n</div>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/edit-profile/edit-profile.component.html b/../FrontEnd/DishDash/src/app/Components/edit-profile/edit-profile.component.html
--- a/../FrontEnd/DishDash/src/app/Components/edit-profile/edit-profile.component.html	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/edit-profile/edit-profile.component.html	(date 1718772379000)
@@ -26,14 +26,18 @@
         <input matInput type="email" placeholder="email" formControlName="customerEmail" matTooltip="You can't edit this email">
       </mat-form-field>
 
-      <!-- Customer Phone -->
-      <mat-form-field appearance="outline">
-        <mat-label>Your Phone Number</mat-label>
-        <input matInput type="text" placeholder="Your Phone" formControlName="customerPhone">
-        <mat-error *ngIf="updateForm.get('customerPhone')?.hasError('required')">
-          Phone is required
-        </mat-error>
-      </mat-form-field>
+
+     <!-- Customer Phone -->
+     <mat-form-field appearance="outline">
+      <mat-label>Your Phone Number</mat-label>
+      <input matInput type="text" placeholder="Your Phone" formControlName="customerPhone">
+      <mat-error *ngIf="updateForm.get('customerPhone')?.hasError('required')">
+        Phone is required
+      </mat-error>
+      <mat-error *ngIf="updateForm.get('customerPhone').hasError('pattern')">
+        Invalid phone number
+      </mat-error>
+    </mat-form-field>
 
       <button class="full-width btn btn-primary mb-4" type="submit" [disabled]="updateForm.invalid">Update Profile Info</button>
     </div>
Index: ../FrontEnd/DishDash/src/app/Components/profile/profile.component.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.profile-container {\r\n  max-width: 1200px;\r\n  margin: auto;\r\n  padding: 20px;\r\n}\r\n\r\n.welcome {\r\n  background-color: #343a40;\r\n  padding: 40px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.profile {\r\n  width: 100px;\r\n  height: 100px;\r\n  object-fit: cover;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.camera-icon {\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n  color: #ffc107;\r\n  top: 70px;\r\n  right: 110px;\r\n}\r\n\r\n.profile-nav {\r\n  margin-top: 30px;\r\n}\r\n\r\n.card {\r\n  border: none;\r\n  border-radius: 8px;\r\n}\r\n\r\n.card-body {\r\n  padding: 20px;\r\n}\r\n\r\n.card-title {\r\n  font-size: 1.25rem;\r\n  margin-bottom: 15px;\r\n  color: #343a40;\r\n}\r\n\r\n.list-group-item {\r\n  border: none;\r\n  padding: 15px 20px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.list-group-item i {\r\n  margin-right: 10px;\r\n  color: #6c757d;\r\n}\r\n\r\n.list-group-item:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.content-area {\r\n  background-color: #f8f9fa;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  height: 100%;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/profile/profile.component.css b/../FrontEnd/DishDash/src/app/Components/profile/profile.component.css
--- a/../FrontEnd/DishDash/src/app/Components/profile/profile.component.css	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/profile/profile.component.css	(date 1718726222269)
@@ -1,29 +1,54 @@
 .profile-container {
   max-width: 1200px;
   margin: auto;
-  padding: 20px;
+  padding: 0px;
 }
 
-.welcome {
-  background-color: #343a40;
-  padding: 40px;
-  border-radius: 8px;
+.profile-header {
+  background-color: #007bff; /* Updated brand color */
+  padding: 30px;
+  border-radius: 12px;
   box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
+  color: #fff;
+}
+
+.profile-image-wrapper {
+  position: relative;
+  display: inline-block;
 }
 
 .profile {
-  width: 100px;
-  height: 100px;
+  width: 120px;
+  height: 120px;
   object-fit: cover;
   margin-bottom: 10px;
+  border: 4px solid #fff; /* Added border for better visibility */
 }
 
 .camera-icon {
   cursor: pointer;
   font-size: 24px;
-  color: #ffc107;
-  top: 70px;
-  right: 110px;
+  color: #007bff;
+  bottom: 0;
+  right: 0;
+  background-color: rgba(255, 255, 255, 0.8);
+  padding: 5px;
+  border-radius: 50%;
+}
+
+.profile-header h2 {
+  margin-top: 10px;
+  font-size: 1.75rem;
+}
+
+.profile-header p {
+  margin-bottom: 10px;
+  font-size: 1rem;
+}
+
+.profile-header .btn {
+  background-color: #fff;
+  color: #007bff;
 }
 
 .profile-nav {
@@ -54,7 +79,7 @@
   align-items: center;
 }
 
-.list-group-item i {
+.list-group-item mat-icon {
   margin-right: 10px;
   color: #6c757d;
 }
Index: ../FrontEnd/DishDash/src/app/Components/profile/profile.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div class=\"profile-container container mt-5\">\r\n  <!-- Profile Header Section -->\r\n  <form [formGroup]=\"pictureForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div id=\"profile-div\" class=\"welcome text-center p-4 bg-dark text-white position-relative rounded\">\r\n      <img id=\"profileImage\" *ngIf=\"profilePicture\" class=\"profile rounded-circle\" src=\"{{url}}\"  alt=\"Profile Image\">\r\n      <img id=\"profileImage\" *ngIf=\"!profilePicture\" class=\"profile rounded-circle\" src=\"https://via.placeholder.com/50x50\"  alt=\"Profile Image\">\r\n      <input placeholder=\"Upload your picture\" type=\"file\" id=\"fileInput\" id=\"customerProfilePic\"\r\n      class=\"form-control\"\r\n      formControlName=\"customerProfilePic\" (change)=\"onFileSelected($event)\" >\r\n      <!-- <i class=\"fas fa-camera camera-icon position-absolute\" (click)=\"triggerFileInput()\"></i> -->\r\n      <h2 class=\"mt-3\">Welcome, <span class=\"fst-italic fw-bold text-warning\">{{activeCustomer.customerName}}</span></h2>\r\n      <button mat-button type=\"submit\">submit</button>\r\n    </div>\r\n  </form>\r\n\r\n  <!-- Profile Navigation Section -->\r\n  <div class=\"profile-nav mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4 col-lg-3\">\r\n        <div class=\"card shadow-sm\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Profile</h5>\r\n            <ul class=\"list-group list-group-flush\">\r\n              <li class=\"list-group-item pointer\" routerLink=\"favorites\">\r\n                <i class=\"fas fa-heart me-2\"></i>Favorites\r\n              </li>\r\n              <li class=\"list-group-item pointer\" routerLink=\"edit-profile\">\r\n                <i class=\"fas fa-user-edit me-2\"></i>Edit Profile\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"card shadow-sm mt-4\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Online Ordering</h5>\r\n            <ul class=\"list-group list-group-flush\">\r\n              <li class=\"list-group-item pointer\" routerLink=\"order-history\">\r\n                <i class=\"fas fa-history me-2\"></i>Order History\r\n              </li>\r\n              <li class=\"list-group-item pointer\" routerLink=\"my-addresses\">\r\n                <i class=\"fas fa-map-marker-alt me-2\"></i>My Addresses\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"card shadow-sm mt-4\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Account Settings</h5>\r\n            <ul class=\"list-group list-group-flush\">\r\n              <li class=\"list-group-item pointer\" (click)=\"logout()\">\r\n                <i class=\"fas fa-sign-out-alt me-2\"></i>Logout\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-8 col-lg-9\">\r\n        <div class=\"content-area\">\r\n          <router-outlet></router-outlet>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/profile/profile.component.html b/../FrontEnd/DishDash/src/app/Components/profile/profile.component.html
--- a/../FrontEnd/DishDash/src/app/Components/profile/profile.component.html	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/profile/profile.component.html	(date 1718771761379)
@@ -2,14 +2,16 @@
   <!-- Profile Header Section -->
   <form [formGroup]="pictureForm" (ngSubmit)="onSubmit()">
     <div id="profile-div" class="welcome text-center p-4 bg-dark text-white position-relative rounded">
-      <img id="profileImage" *ngIf="profilePicture" class="profile rounded-circle" src="{{url}}"  alt="Profile Image">
+      <img id="profileImage" *ngIf="profilePicture" class="profile rounded-circle" src="{{url}}"  alt="Profile Image" >
       <img id="profileImage" *ngIf="!profilePicture" class="profile rounded-circle" src="https://via.placeholder.com/50x50"  alt="Profile Image">
-      <input placeholder="Upload your picture" type="file" id="fileInput" id="customerProfilePic"
+      <input type="file" id="fileInput"
       class="form-control"
-      formControlName="customerProfilePic" (change)="onFileSelected($event)" >
-      <!-- <i class="fas fa-camera camera-icon position-absolute" (click)="triggerFileInput()"></i> -->
+      formControlName="customerProfilePic"
+      *ngIf="pictureForm.get('file')?.errors?.['required']"
+       (change)="onFileSelected($event)" style="display:none;" >
+      <i class="fas fa-camera camera-icon" (click)="triggerFileInput()"></i>
       <h2 class="mt-3">Welcome, <span class="fst-italic fw-bold text-warning">{{activeCustomer.customerName}}</span></h2>
-      <button mat-button type="submit">submit</button>
+      <button mat-button type="submit" *ngIf="!pictureForm.invalid">upload</button>
     </div>
   </form>
 
@@ -22,10 +24,10 @@
             <h5 class="card-title">Profile</h5>
             <ul class="list-group list-group-flush">
               <li class="list-group-item pointer" routerLink="favorites">
-                <i class="fas fa-heart me-2"></i>Favorites
+                <mat-icon>favorite</mat-icon>Favorites
               </li>
               <li class="list-group-item pointer" routerLink="edit-profile">
-                <i class="fas fa-user-edit me-2"></i>Edit Profile
+                <mat-icon>edit</mat-icon>Edit Profile
               </li>
             </ul>
           </div>
@@ -35,10 +37,10 @@
             <h5 class="card-title">Online Ordering</h5>
             <ul class="list-group list-group-flush">
               <li class="list-group-item pointer" routerLink="order-history">
-                <i class="fas fa-history me-2"></i>Order History
+                <mat-icon>history</mat-icon>Order History
               </li>
               <li class="list-group-item pointer" routerLink="my-addresses">
-                <i class="fas fa-map-marker-alt me-2"></i>My Addresses
+                <mat-icon>location_on</mat-icon>My Addresses
               </li>
             </ul>
           </div>
@@ -48,7 +50,7 @@
             <h5 class="card-title">Account Settings</h5>
             <ul class="list-group list-group-flush">
               <li class="list-group-item pointer" (click)="logout()">
-                <i class="fas fa-sign-out-alt me-2"></i>Logout
+                <mat-icon>exit_to_app</mat-icon>Logout
               </li>
             </ul>
           </div>
Index: ../FrontEnd/DishDash/src/app/Components/profile/profile.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, OnInit } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { UserService } from '../../services/user.service';\r\nimport { customer } from '../../Model/customer';\r\nimport { RouterService } from '../../services/router.service';\r\nimport { FileHandle } from '../../Model/file-handle';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  customerJwt: string;\r\n  pictureForm: FormGroup;\r\n  profilePictureUrl: SafeUrl | null = null;\r\n  customerImage: FileHandle;\r\n  \r\n  activeCustomer: customer = {\r\n    customerId: '',\r\n    customerName: '',\r\n    customerEmail: '',\r\n    customerPassword: ''\r\n  };\r\n  profilePicture:boolean=false;\r\n  url:string  = `https://via.placeholder.com/50x50`\r\n  constructor(\r\n    private cookieService: CookieService,\r\n    private userService: UserService,\r\n    private routerService: RouterService,\r\n    private sanitizer: DomSanitizer,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.pictureForm = this.fb.group({\r\n      file: ['']\r\n    });\r\n  }\r\n  onSubmit(): void {\r\n    if (this.pictureForm.invalid) {\r\n      return;\r\n    }\r\n    const imageFormData = this.prepareFormData(this.customerImage);\r\n    this.userService.updateImage( imageFormData,this.cookieService.get('token')).subscribe({\r\n      next: data => {\r\n        console.log('Profile picture uploaded successfully', data);\r\n        this.fetchActiveCustomer();\r\n      \r\n      },\r\n      error: err => {\r\n        console.log('Error while uploading profile picture', err);\r\n      }\r\n    });\r\n  \r\n  }\r\n  prepareFormData(customerImage: FileHandle): FormData {\r\n    const formData = new FormData();\r\n    formData.append('image', customerImage.file);\r\n    return formData;\r\n  }\r\n  // triggerFileInput() {\r\n  //   const fileInput = document.getElementById('fileInput') as HTMLInputElement;\r\n  //   fileInput.click();\r\n  // }\r\n\r\n  onFileSelected(event: Event): void {\r\n    const input = event.target as HTMLInputElement;\r\n    if (input.files && input.files[0]) {\r\n      const file = input.files[0];\r\n      const fileHandle: FileHandle = {\r\n        file: file,\r\n        url: this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(file))\r\n      };\r\n      this.customerImage = fileHandle;\r\n      this.pictureForm.patchValue({ file: file });\r\n      const reader = new FileReader();\r\n      reader.onload = (e: any) => {\r\n        this.profilePictureUrl = this.sanitizer.bypassSecurityTrustUrl(e.target.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n \r\n  ngOnInit(): void {\r\n    this.fetchActiveCustomer();\r\n   \r\n  }\r\n  fetchActiveCustomer() {\r\n    this.customerJwt = this.cookieService.get(\"token\");\r\n    let pic:string=\"\"\r\n    this.userService.fetchCustomerByJwt(this.customerJwt).subscribe({\r\n      next: data => {\r\n        this.activeCustomer = data;\r\n        if(this.activeCustomer.customerProfilePic)\r\n          {\r\n            \r\n            this.url =\"http://127.0.0.1:5500/DishDash/src/assets/images/\"+`${this.activeCustomer.customerProfilePic}`\r\n            // pic=`<img id=\"profileImage\" *ngIf=\"profilePicture\" class=\"profile rounded-circle\" src=${this.url}  alt=\"Profile Image\">`\r\n            // const element=document.getElementById(\"profile-div\");\r\n            // element.innerHTML=element.innerHTML+pic;\r\n            this.profilePicture=true;\r\n            \r\n          }\r\n      },\r\n      error: data => {\r\n        console.log(\"Error while fetching customer\");\r\n      }\r\n    });\r\n  }\r\n  logout() {\r\n    this.userService.loggingOutFromProfile(true);\r\n    this.routerService.navigateToHomePage();\r\n  }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/profile/profile.component.ts b/../FrontEnd/DishDash/src/app/Components/profile/profile.component.ts
--- a/../FrontEnd/DishDash/src/app/Components/profile/profile.component.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/profile/profile.component.ts	(date 1718771906928)
@@ -5,7 +5,7 @@
 import { RouterService } from '../../services/router.service';
 import { FileHandle } from '../../Model/file-handle';
 import { DomSanitizer, SafeUrl } from '@angular/platform-browser';
-import { FormBuilder, FormGroup } from '@angular/forms';
+import { FormBuilder, FormGroup, Validators } from '@angular/forms';
 @Component({
   selector: 'app-profile',
   templateUrl: './profile.component.html',
@@ -33,7 +33,7 @@
     private fb: FormBuilder
   ) {
     this.pictureForm = this.fb.group({
-      file: ['']
+      file: ['',Validators.required]
     });
   }
   onSubmit(): void {
@@ -51,17 +51,26 @@
         console.log('Error while uploading profile picture', err);
       }
     });
-  
+    this.resetForm();
+  }
+  resetForm() {
+    this.pictureForm.reset();
+    this.profilePicture = false;
+    this.url = '';
   }
   prepareFormData(customerImage: FileHandle): FormData {
     const formData = new FormData();
     formData.append('image', customerImage.file);
     return formData;
   }
-  // triggerFileInput() {
-  //   const fileInput = document.getElementById('fileInput') as HTMLInputElement;
-  //   fileInput.click();
-  // }
+  triggerFileInput() {
+    const fileInput = document.getElementById('fileInput') as HTMLInputElement;
+    if (fileInput) {
+        fileInput.click();
+    } else {
+        console.error('File input element not found');
+    }
+}
 
   onFileSelected(event: Event): void {
     const input = event.target as HTMLInputElement;
@@ -95,9 +104,6 @@
           {
             
             this.url ="http://127.0.0.1:5500/DishDash/src/assets/images/"+`${this.activeCustomer.customerProfilePic}`
-            // pic=`<img id="profileImage" *ngIf="profilePicture" class="profile rounded-circle" src=${this.url}  alt="Profile Image">`
-            // const element=document.getElementById("profile-div");
-            // element.innerHTML=element.innerHTML+pic;
             this.profilePicture=true;
             
           }
Index: ../FrontEnd/DishDash/src/app/Components/cart/cart.component.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.cart-container {\r\n    padding: 0px 20px 20px 20px;\r\n    background-color: #ffffff;\r\n    border-radius: 8px;\r\n    /* box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); */\r\n  }\r\n  \r\n  .details {\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .cart-title {\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .cart-items {\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .cart-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px 0;\r\n    border-bottom: 1px solid #ddd;\r\n  }\r\n  \r\n  .item-image img {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .item-details {\r\n    flex: 1;\r\n    margin-left: 10px;\r\n  }\r\n  \r\n  .item-name {\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .item-price {\r\n    color: #007bff;\r\n  }\r\n  \r\n  .quantity-controls {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  \r\n  .quantity-controls button {\r\n    margin: 0 5px;\r\n  }\r\n  \r\n  .cart-total {\r\n    margin-top: 20px;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    text-align: right;\r\n  }\r\n  \r\n  .button {\r\n    text-align: right;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .cartempty {\r\n    text-align: center;\r\n    margin-top: 20px;\r\n    font-size: 1.2rem;\r\n    color: #555;\r\n  }\r\n  \r\n  .cartempty .empty-cart-icon {\r\n    font-size: 3rem;\r\n    color: #ddd;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .cart-item {\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n    }\r\n  \r\n    .quantity-controls {\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n  
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/cart/cart.component.css b/../FrontEnd/DishDash/src/app/Components/cart/cart.component.css
--- a/../FrontEnd/DishDash/src/app/Components/cart/cart.component.css	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/cart/cart.component.css	(date 1718749159704)
@@ -1,12 +1,14 @@
 .cart-container {
-    padding: 0px 20px 20px 20px;
+    padding: 0px 5px 5px 20px;
     background-color: #ffffff;
     border-radius: 8px;
+    max-height: 400px;
+   
     /* box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); */
   }
   
   .details {
-    margin-top: 20px;
+    margin-top: 0px;
   }
   
   .cart-title {
@@ -17,6 +19,11 @@
   
   .cart-items {
     margin-top: 20px;
+    max-height: 200px;
+    width: 100%;
+    overflow: scroll;
+    padding: 0px 10px;
+    overflow-x: hidden;
   }
   
   .cart-item {
@@ -65,7 +72,7 @@
   
   .button {
     text-align: right;
-    margin-top: 20px;
+    margin-top: 10px;
   }
   
   .cartempty {
@@ -75,20 +82,4 @@
     color: #555;
   }
   
-  .cartempty .empty-cart-icon {
-    font-size: 3rem;
-    color: #ddd;
-    margin-bottom: 10px;
-  }
-  
-  @media (max-width: 768px) {
-    .cart-item {
-      flex-direction: column;
-      align-items: flex-start;
-    }
-  
-    .quantity-controls {
-      margin-top: 10px;
-    }
-  }
-  
\ No newline at end of file
+  .cartempty
\ No newline at end of file
Index: ../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.admin-view-container {\r\n    padding: 20px;\r\n    max-width: 1200px;\r\n    margin: auto;\r\n  }\r\n  \r\n  h2 {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .orders-section, .customers-section {\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .mat-table {\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-header-cell, .mat-cell {\r\n    padding: 8px 16px;\r\n  }\r\n  \r\n  .mat-header-row, .mat-row {\r\n    border-bottom: 1px solid #e0e0e0;\r\n  }\r\n  \r\n  .mat-elevation-z8 {\r\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  }\r\n  
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.css b/../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.css
--- a/../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.css	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.css	(date 1718745858003)
@@ -1,8 +1,11 @@
 .admin-view-container {
-    padding: 20px;
+    padding: 20px 20px 20px 20px;
     max-width: 1200px;
     margin: auto;
   }
+  .adminbar {
+    margin-top: -70px;
+  }
   
   h2 {
     margin-bottom: 20px;
Index: ../FrontEnd/DishDash/src/app/Components/support-chat/support-chat.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, OnInit } from '@angular/core';\r\nimport { ChatServiceService } from '../../services/chat-service.service';\r\n\r\n@Component({\r\n  selector: 'app-support-chat',\r\n  templateUrl: './support-chat.component.html',\r\n  styleUrl: './support-chat.component.css'\r\n})\r\nexport class SupportChatComponent implements OnInit {\r\n\r\n  query: string = '';\r\n  response:string = '';\r\n  messages = [\r\n    \r\n      {\r\n        \"role\": \"system\",\r\n        \"content\": \"You are a helpful assistant. You are working for our web app called dishdash which help people to order food online from restuarant online. You will only answers queries realted to our application not of general life and your response will be maximum 50-100words only not more than that and if users ask you questions which you don't know about just say, You query is sent to our team, one of your represeantaive will contact you, fix the type in the previous sentance.\"\r\n      }\r\n    \r\n  ]\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  constructor(private chatService:ChatServiceService) {}\r\n\r\n  generateMessages() {\r\n    let msg = {\r\n      \"role\":\"user\",\r\n      \"content\":this.query\r\n    }\r\n\r\n    this.messages.push(msg);\r\n    this.query = ''\r\n\r\n    this.chatService.generateSupportQuery(this.messages).subscribe({\r\n      next:data => {\r\n        console.log(\"data fetch success\")\r\n        console.log(data);\r\n\r\n        this.response = data.choices[0].message.content;\r\n\r\n        \r\n        let chatMessage =  {\r\n          \"role\":\"assistant\",\r\n          \"content\":this.response\r\n        }\r\n\r\n        console.log(chatMessage);\r\n\r\n        this.messages.push(chatMessage);\r\n       \r\n      },\r\n      error:e => {\r\n        console.log(\"Error while fetching response\")\r\n        console.log(e);\r\n\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/support-chat/support-chat.component.ts b/../FrontEnd/DishDash/src/app/Components/support-chat/support-chat.component.ts
--- a/../FrontEnd/DishDash/src/app/Components/support-chat/support-chat.component.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/support-chat/support-chat.component.ts	(date 1718739841586)
@@ -14,7 +14,7 @@
     
       {
         "role": "system",
-        "content": "You are a helpful assistant. You are working for our web app called dishdash which help people to order food online from restuarant online. You will only answers queries realted to our application not of general life and your response will be maximum 50-100words only not more than that and if users ask you questions which you don't know about just say, You query is sent to our team, one of your represeantaive will contact you, fix the type in the previous sentance."
+        "content": "You are a helpful assistant for our web app, Dishdash, which helps people order food online from restaurants. Only answer queries related to our application within 50-100 words. If a user asks a question you don't know, respond with: 'Your query is sent to our team. One of our representatives will contact you.'"
       }
     
   ]
Index: ../FrontEnd/DishDash/src/app/Components/support-chat/support-chat.component.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* Overall chatbot container styling */\r\n.chatbot-container {\r\n    width: 350px;\r\n    max-height: 500px;\r\n    background-color: #f5f5f5;\r\n    border-radius: 15px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    overflow: hidden;\r\n    font-family: Arial, sans-serif;\r\n  }\r\n  \r\n  /* Header styling */\r\n  .chatbot-header {\r\n    background-color: #007bff;\r\n    color: white;\r\n    padding: 10px 15px;\r\n    text-align: center;\r\n    border-top-left-radius: 15px;\r\n    border-top-right-radius: 15px;\r\n    margin: 0;\r\n  }\r\n  \r\n  /* Messages container styling */\r\n  .messages {\r\n    flex: 1;\r\n    padding: 15px;\r\n    overflow-y: auto;\r\n    background-color: #ffffff;\r\n  }\r\n  \r\n  /* Individual chat message styling */\r\n  .chat-container .chat {\r\n    margin-bottom: 10px;\r\n    padding: 10px;\r\n    border-radius: 15px;\r\n    max-width: 80%;\r\n    word-wrap: break-word;\r\n  }\r\n  \r\n  /* Left-aligned messages for the assistant */\r\n  .chat-container .left {\r\n    background-color: #e9ecef;\r\n    align-self: flex-start;\r\n    border-bottom-left-radius: 0;\r\n  }\r\n  \r\n  /* Right-aligned messages for the user */\r\n  .chat-container .right {\r\n    background-color: #007bff;\r\n    color: white;\r\n    align-self: flex-end;\r\n    border-bottom-right-radius: 0;\r\n  }\r\n  \r\n  /* Query input bar styling */\r\n  .querybar {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-top: 1px solid #ddd;\r\n    background-color: #f5f5f5;\r\n  }\r\n  \r\n  /* Input field styling */\r\n  .querybar input {\r\n    flex: 1;\r\n    padding: 10px;\r\n    border-radius: 20px;\r\n    border: 1px solid #ddd;\r\n    outline: none;\r\n    margin-right: 10px;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  /* Send button styling */\r\n  .querybar .search {\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 20px;\r\n    padding: 10px 15px;\r\n    cursor: pointer;\r\n    font-size: 14px;\r\n    transition: background-color 0.3s;\r\n  }\r\n  \r\n  /* Send button hover effect */\r\n  .querybar .search:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  /* Smooth scrolling for messages */\r\n  .messages {\r\n    scroll-behavior: smooth;\r\n  }\r\n  \r\n  /* Hide scrollbar for messages */\r\n  .messages::-webkit-scrollbar {\r\n    width: 6px;\r\n  }\r\n  \r\n  .messages::-webkit-scrollbar-thumb {\r\n    background-color: #007bff;\r\n    border-radius: 10px;\r\n  }\r\n  \r\n  .messages::-webkit-scrollbar-track {\r\n    background: transparent;\r\n  }\r\n  
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/support-chat/support-chat.component.css b/../FrontEnd/DishDash/src/app/Components/support-chat/support-chat.component.css
--- a/../FrontEnd/DishDash/src/app/Components/support-chat/support-chat.component.css	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/support-chat/support-chat.component.css	(date 1718739754760)
@@ -2,6 +2,7 @@
 .chatbot-container {
     width: 350px;
     max-height: 500px;
+    height: 400px;
     background-color: #f5f5f5;
     border-radius: 15px;
     box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
Index: ../FrontEnd/DishDash/src/app/app-routing.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NavigationComponent } from './Components/navigation/navigation.component';\r\nimport { PagenotfoundComponent } from './Components/pagenotfound/pagenotfound.component';\r\nimport { RestaurantviewComponent } from './Components/restaurantview/restaurantview.component';\r\nimport { HomepageComponent } from './Components/homepage/homepage.component';\r\nimport { LoginComponent } from './Components/login/login.component';\r\nimport { RegisterComponent } from './Components/register/register.component';\r\nimport { CutomerfavouriteComponent } from './Components/cutomerfavourite/cutomerfavourite.component';\r\nimport { ProfileComponent } from './Components/profile/profile.component';\r\nimport { EditProfileComponent } from './Components/edit-profile/edit-profile.component';\r\nimport { OrderhistoryComponent } from './Components/orderhistory/orderhistory.component';\r\nimport { MyaddressesComponent } from './Components/myaddresses/myaddresses.component';\r\nimport { CheckoutComponent } from './Components/checkout/checkout.component';\r\nimport { OrderSuccessComponent } from './Components/order-success/order-success.component';\r\nimport { AdminViewComponent } from './Components/admin-view/admin-view.component';\r\nimport { AdminLoginComponent } from './Components/admin-login/admin-login.component';\r\n\r\nconst routes: Routes = [\r\n{path:'', component: HomepageComponent},\r\n{path:'home', component: HomepageComponent},\r\n{path:'customer/profile', component:ProfileComponent, children: [\r\n  {path:'', component: CutomerfavouriteComponent},\r\n  {path:'favorites', component: CutomerfavouriteComponent},\r\n  {path:'edit-profile', component: EditProfileComponent},\r\n  {path:'order-history', component: OrderhistoryComponent},\r\n  {path:'my-addresses', component: MyaddressesComponent},\r\n]},\r\n{path:'customer/favourites', component: CutomerfavouriteComponent},\r\n{path:'customer/checkout', component: CheckoutComponent},\r\n{path:'customer/order-complete/:orderId', component: OrderSuccessComponent},\r\n{path:':city/restaurants/:resid', component: RestaurantviewComponent},\r\n{path:'admin/view', component: AdminViewComponent},\r\n{path:'admin/login', component: AdminLoginComponent},\r\n{path:'**', component: PagenotfoundComponent}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/app-routing.module.ts b/../FrontEnd/DishDash/src/app/app-routing.module.ts
--- a/../FrontEnd/DishDash/src/app/app-routing.module.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/app-routing.module.ts	(date 1718714155466)
@@ -15,6 +15,7 @@
 import { OrderSuccessComponent } from './Components/order-success/order-success.component';
 import { AdminViewComponent } from './Components/admin-view/admin-view.component';
 import { AdminLoginComponent } from './Components/admin-login/admin-login.component';
+import { LegalComponent } from './Components/legal/legal.component';
 
 const routes: Routes = [
 {path:'', component: HomepageComponent},
@@ -32,6 +33,7 @@
 {path:':city/restaurants/:resid', component: RestaurantviewComponent},
 {path:'admin/view', component: AdminViewComponent},
 {path:'admin/login', component: AdminLoginComponent},
+{path:'legal', component: LegalComponent},
 {path:'**', component: PagenotfoundComponent}
 
 ];
Index: ../FrontEnd/DishDash/src/app/Model/Order.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { CartDish } from \"./CartDish\"\r\nimport { address } from \"./address\"\r\n\r\nexport class Order {\r\n    orderId:string\r\n    restaurantId:string\r\n    customerId:string\r\n    timeStamp:string\r\n    totalPrice:number\r\n    discount:number\r\n    billingPrice:number\r\n    totalItems:number\r\n    customerAddress:address\r\n    paymentMethod:string\r\n    cartItems:CartDish[]\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Model/Order.ts b/../FrontEnd/DishDash/src/app/Model/Order.ts
--- a/../FrontEnd/DishDash/src/app/Model/Order.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Model/Order.ts	(date 1718741447433)
@@ -5,6 +5,8 @@
     orderId:string
     restaurantId:string
     customerId:string
+    customerName:string
+    customerEmail:string
     timeStamp:string
     totalPrice:number
     discount:number
Index: ../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.order-history-container {\r\n    max-width: 800px;\r\n    margin: auto;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .order-history-container h2 {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .empty-history {\r\n    text-align: center;\r\n    color: #777;\r\n  }\r\n  \r\n  .order-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n  \r\n  .order-card {\r\n    background-color: #fff;\r\n    border-radius: 8px;\r\n    padding: 20px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .order-card .card-body {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .order-card .card-title {\r\n    font-size: 1.5em;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .order-card .card-text {\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  .order-card ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .order-card ul li {\r\n    background-color: #f8f9fa;\r\n    padding: 5px;\r\n    border-radius: 4px;\r\n    margin-bottom: 5px;\r\n  }\r\n  
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.css b/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.css
--- a/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.css	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.css	(date 1718729568555)
@@ -1,56 +1,0 @@
-.order-history-container {
-    max-width: 800px;
-    margin: auto;
-    padding: 20px;
-  }
-  
-  .order-history-container h2 {
-    text-align: center;
-    margin-bottom: 20px;
-  }
-  
-  .empty-history {
-    text-align: center;
-    color: #777;
-  }
-  
-  .order-list {
-    display: flex;
-    flex-direction: column;
-    gap: 20px;
-  }
-  
-  .order-card {
-    background-color: #fff;
-    border-radius: 8px;
-    padding: 20px;
-    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
-  }
-  
-  .order-card .card-body {
-    display: flex;
-    flex-direction: column;
-    gap: 10px;
-  }
-  
-  .order-card .card-title {
-    font-size: 1.5em;
-    margin-bottom: 10px;
-  }
-  
-  .order-card .card-text {
-    margin-bottom: 5px;
-  }
-  
-  .order-card ul {
-    list-style-type: none;
-    padding: 0;
-  }
-  
-  .order-card ul li {
-    background-color: #f8f9fa;
-    padding: 5px;
-    border-radius: 4px;
-    margin-bottom: 5px;
-  }
-  
\ No newline at end of file
Index: ../FrontEnd/DishDash/src/app/Components/footer/footer.component.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.footer {\r\n  background-color: #f8f9fa;\r\n  color: #6c757d;\r\n  padding: 60px 0;\r\n}\r\n\r\n.footer .widget-title {\r\n  font-weight: 600;\r\n  font-size: 1.25rem;\r\n  color: #343a40;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.footer p, .footer address {\r\n  margin-bottom: 0.5rem;\r\n  color: #6c757d;\r\n}\r\n\r\n.footer a {\r\n  color: #6c757d;\r\n  text-decoration: none;\r\n}\r\n\r\n.footer a:hover {\r\n  color: #007bff;\r\n}\r\n\r\n.footer .list-inline-item {\r\n  margin-right: 15px;\r\n}\r\n\r\n.footer .list-inline-item a {\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.footer .border-top {\r\n  border-top: 1px solid #dee2e6 !important;\r\n}\r\n\r\n.footer .container {\r\n  max-width: 1140px;\r\n}\r\n\r\n.footer .text-primary {\r\n  color: #007bff !important;\r\n}\r\n\r\n.footer .text-dark {\r\n  color: #343a40 !important;\r\n}\r\n\r\n.footer .text-center {\r\n  text-align: center !important;\r\n}\r\n\r\n.footer .text-md-start {\r\n  text-align: left !important;\r\n}\r\n\r\n.footer .text-md-end {\r\n  text-align: right !important;\r\n}\r\n\r\n.footer .social-media-wrapper ul {\r\n  display: flex;\r\n  padding: 0;\r\n}\r\n\r\n.footer .social-media-wrapper ul li {\r\n  list-style: none;\r\n}\r\n\r\n.footer .social-media-wrapper ul li a {\r\n  color: #6c757d;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.footer .social-media-wrapper ul li a:hover {\r\n  color: #007bff;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/footer/footer.component.css b/../FrontEnd/DishDash/src/app/Components/footer/footer.component.css
--- a/../FrontEnd/DishDash/src/app/Components/footer/footer.component.css	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/footer/footer.component.css	(date 1718713429301)
@@ -1,80 +1,55 @@
 .footer {
   background-color: #f8f9fa;
-  color: #6c757d;
-  padding: 60px 0;
-}
-
-.footer .widget-title {
-  font-weight: 600;
-  font-size: 1.25rem;
   color: #343a40;
+  padding: 20px 0;
+}
+
+.footer .widget-title {
+  font-size: 1rem;
   margin-bottom: 1rem;
 }
 
-.footer p, .footer address {
-  margin-bottom: 0.5rem;
-  color: #6c757d;
+.footer .small {
+  font-size: 0.875rem;
+}
+
+.footer .widget p,
+.footer .widget a {
+  font-size: 0.875rem;
 }
 
-.footer a {
-  color: #6c757d;
+.footer .widget a {
+  color: #343a40;
   text-decoration: none;
+  transition: color 0.3s ease-in-out;
+}
+
+.footer .widget a:hover {
+  color: #007bff;
+}
+
+.footer .social-media-wrapper .list-inline-item {
+  margin-right: 10px;
 }
 
-.footer a:hover {
+.footer .social-media-wrapper .list-inline-item a {
+  font-size: 1.25rem;
+  color: #343a40;
+  transition: color 0.3s ease-in-out;
+}
+
+.footer .social-media-wrapper .list-inline-item a:hover {
   color: #007bff;
 }
 
-.footer .list-inline-item {
-  margin-right: 15px;
-}
-
-.footer .list-inline-item a {
-  font-size: 1.5rem;
-}
-
 .footer .border-top {
-  border-top: 1px solid #dee2e6 !important;
+  border-top: 1px solid #dee2e6;
 }
 
-.footer .container {
-  max-width: 1140px;
+.footer .col-12.text-center p {
+  margin: 0;
 }
 
 .footer .text-primary {
   color: #007bff !important;
 }
-
-.footer .text-dark {
-  color: #343a40 !important;
-}
-
-.footer .text-center {
-  text-align: center !important;
-}
-
-.footer .text-md-start {
-  text-align: left !important;
-}
-
-.footer .text-md-end {
-  text-align: right !important;
-}
-
-.footer .social-media-wrapper ul {
-  display: flex;
-  padding: 0;
-}
-
-.footer .social-media-wrapper ul li {
-  list-style: none;
-}
-
-.footer .social-media-wrapper ul li a {
-  color: #6c757d;
-  transition: color 0.3s;
-}
-
-.footer .social-media-wrapper ul li a:hover {
-  color: #007bff;
-}
Index: ../FrontEnd/DishDash/src/app/Components/footer/footer.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!-- Footer -->\r\n<footer class=\"footer bg-light text-dark py-5\">\r\n  <div class=\"container\">\r\n    <div class=\"row gy-4\">\r\n      <div class=\"col-12 col-md-3\">\r\n        <div class=\"widget\">\r\n          <a href=\"/\" class=\"d-inline-block mb-3\">\r\n            <img src=\"../../../assets/images/dishdashgif.gif\" alt=\"Logo\" class=\"img-fluid\">\r\n          </a>\r\n          <p>Your go-to platform for discovering the best food and drinks in the city.</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-md-3\">\r\n        <div class=\"widget\">\r\n          <h4 class=\"widget-title\">Quick Links</h4>\r\n          <ul class=\"list-unstyled\">\r\n            <li><a href=\"#\" class=\"link-secondary text-decoration-none\">About Us</a></li>\r\n            <li><a href=\"#\" class=\"link-secondary text-decoration-none\">Contact</a></li>\r\n            <li><a href=\"#\" class=\"link-secondary text-decoration-none\">Advertise</a></li>\r\n            <li><a href=\"#\" class=\"link-secondary text-decoration-none\">Terms of Service</a></li>\r\n            <li><a href=\"#\" class=\"link-secondary text-decoration-none\">Privacy Policy</a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-md-3\">\r\n        <div class=\"widget\">\r\n          <h4 class=\"widget-title\">Contact Us</h4>\r\n          <address>8014 Edith Blvd NE, Albuquerque, New Mexico, United States</address>\r\n          <p><a class=\"link-secondary text-decoration-none\" href=\"tel:+15057922430\">(505) 792-2430</a></p>\r\n          <p><a class=\"link-secondary text-decoration-none\" href=\"mailto:demo@yourdomain.com\">demo yourdomain.com</a></p>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-md-3\">\r\n        <div class=\"widget\">\r\n          <h4 class=\"widget-title\">Follow Us</h4>\r\n          <div class=\"social-media-wrapper\">\r\n            <ul class=\"list-inline\">\r\n              <li class=\"list-inline-item me-3\">\r\n                <a href=\"#\" class=\"link-dark link-opacity-75-hover\">\r\n                  <i class=\"bi bi-facebook\"></i>\r\n                </a>\r\n              </li>\r\n              <li class=\"list-inline-item me-3\">\r\n                <a href=\"#\" class=\"link-dark link-opacity-75-hover\">\r\n                  <i class=\"bi bi-youtube\"></i>\r\n                </a>\r\n              </li>\r\n              <li class=\"list-inline-item me-3\">\r\n                <a href=\"#\" class=\"link-dark link-opacity-75-hover\">\r\n                  <i class=\"bi bi-twitter\"></i>\r\n                </a>\r\n              </li>\r\n              <li class=\"list-inline-item\">\r\n                <a href=\"#\" class=\"link-dark link-opacity-75-hover\">\r\n                  <i class=\"bi bi-instagram\"></i>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-4 pt-4 border-top\">\r\n      <div class=\"col-xs-12 col-md-6 text-center text-md-start\">\r\n        <p class=\"mb-0\">&copy; 2024. All Rights Reserved.</p>\r\n        <p class=\"text-dark mb-0\">Built by <a href=\"https://bootstrapbrain.com/\" class=\"link-secondary text-decoration-none\">DishDash</a> with <span class=\"text-primary\">&#9829;</span></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/footer/footer.component.html b/../FrontEnd/DishDash/src/app/Components/footer/footer.component.html
--- a/../FrontEnd/DishDash/src/app/Components/footer/footer.component.html	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/footer/footer.component.html	(date 1718714523963)
@@ -1,69 +1,45 @@
 <!-- Footer -->
-<footer class="footer bg-light text-dark py-5">
+<footer class="footer bg-light text-dark py-3">
   <div class="container">
-    <div class="row gy-4">
-      <div class="col-12 col-md-3">
-        <div class="widget">
-          <a href="/" class="d-inline-block mb-3">
-            <img src="../../../assets/images/dishdashgif.gif" alt="Logo" class="img-fluid">
-          </a>
-          <p>Your go-to platform for discovering the best food and drinks in the city.</p>
-        </div>
+    <div class="row gy-3">
+      <div class="col-12 col-md-3 text-center text-md-start">
+        <a href="/" class="d-inline-block mb-2">
+          <img src="../../../assets/images/dishdashgif.gif" alt="Logo" class="img-fluid" style="max-width: 100px;">
+        </a>
+        <p class="small mb-0">Your go-to platform for discovering the best food and drinks in the city.</p>
       </div>
       <div class="col-12 col-md-3">
-        <div class="widget">
-          <h4 class="widget-title">Quick Links</h4>
-          <ul class="list-unstyled">
-            <li><a href="#" class="link-secondary text-decoration-none">About Us</a></li>
-            <li><a href="#" class="link-secondary text-decoration-none">Contact</a></li>
-            <li><a href="#" class="link-secondary text-decoration-none">Advertise</a></li>
-            <li><a href="#" class="link-secondary text-decoration-none">Terms of Service</a></li>
-            <li><a href="#" class="link-secondary text-decoration-none">Privacy Policy</a></li>
-          </ul>
-        </div>
+        <h5 class="widget-title">Quick Links</h5>
+        <ul class="list-unstyled small pointer">
+          <li><a (click)="openLoginDialog()" class="link-secondary text-decoration-none">Login</a></li>
+          <li><a (click)="openSignupDialog()" class="link-secondary text-decoration-none">Register</a></li>
+          <li><a routerLink="admin/login" class="link-secondary text-decoration-none">Admin</a></li>
+          <li><a routerLink="legal" class="link-secondary text-decoration-none">Privacy Policy</a></li>
+          <li><a routerLink="legal" class="link-secondary text-decoration-none">Terms of Service</a></li>
+        </ul>
       </div>
       <div class="col-12 col-md-3">
-        <div class="widget">
-          <h4 class="widget-title">Contact Us</h4>
-          <address>8014 Edith Blvd NE, Albuquerque, New Mexico, United States</address>
-          <p><a class="link-secondary text-decoration-none" href="tel:+15057922430">(505) 792-2430</a></p>
-          <p><a class="link-secondary text-decoration-none" href="mailto:demo@yourdomain.com">demo yourdomain.com</a></p>
-        </div>
+        <h5 class="widget-title">Support</h5>
+        <p class="small mb-1"><a class="link-secondary text-decoration-none" href="tel:+15057922430">+91 9799937376</a></p>
+        <p class="small mb-0"><a class="link-secondary text-decoration-none" href="mailto:support@yourdomain.com">support&#64;dishdash.com</a></p>
       </div>
       <div class="col-12 col-md-3">
-        <div class="widget">
-          <h4 class="widget-title">Follow Us</h4>
-          <div class="social-media-wrapper">
-            <ul class="list-inline">
-              <li class="list-inline-item me-3">
-                <a href="#" class="link-dark link-opacity-75-hover">
-                  <i class="bi bi-facebook"></i>
-                </a>
-              </li>
-              <li class="list-inline-item me-3">
-                <a href="#" class="link-dark link-opacity-75-hover">
-                  <i class="bi bi-youtube"></i>
-                </a>
-              </li>
-              <li class="list-inline-item me-3">
-                <a href="#" class="link-dark link-opacity-75-hover">
-                  <i class="bi bi-twitter"></i>
-                </a>
-              </li>
-              <li class="list-inline-item">
-                <a href="#" class="link-dark link-opacity-75-hover">
-                  <i class="bi bi-instagram"></i>
-                </a>
-              </li>
-            </ul>
-          </div>
+        <h5 class="widget-title">Follow Us</h5>
+        <div class="social-media-wrapper">
+          <ul class="list-inline mb-0">
+            <li class="list-inline-item me-2">
+              <a class="link-dark link-opacity-75-hover">
+                <mat-icon>facebook</mat-icon>
+              </a>
+            </li>
+          
+          </ul>
         </div>
       </div>
     </div>
-    <div class="row mt-4 pt-4 border-top">
-      <div class="col-xs-12 col-md-6 text-center text-md-start">
-        <p class="mb-0">&copy; 2024. All Rights Reserved.</p>
-        <p class="text-dark mb-0">Built by <a href="https://bootstrapbrain.com/" class="link-secondary text-decoration-none">DishDash</a> with <span class="text-primary">&#9829;</span></p>
+    <div class="row mt-3 pt-3 border-top">
+      <div class="col-12 text-center">
+        <p class="mb-0 small">&copy; 2024. All Rights Reserved. Built with <span class="text-primary">&#9829;</span> in India</p>
       </div>
     </div>
   </div>
Index: ../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../services/user.service';\r\nimport { address } from '../../Model/address';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n@Component({\r\n  selector: 'app-myaddresses',\r\n  templateUrl: './myaddresses.component.html',\r\n  styleUrls: ['./myaddresses.component.css']\r\n})\r\nexport class MyaddressesComponent implements OnInit {\r\n\r\n  allAddress: address[] = [];\r\n  spinnerVisible: boolean = false;\r\n  noAddresses: boolean = false;\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, private userService: UserService, private cookieService: CookieService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchAllAddresses();\r\n  }\r\n\r\n  fetchAllAddresses() {\r\n    this.spinnerVisible = true;\r\n    const Jwt = this.cookieService.get('token');\r\n    this.userService.fetchAllCustomerAddress(Jwt).subscribe({\r\n      next: data => {\r\n        this.allAddress = data;\r\n        this.noAddresses = this.allAddress.length === 0;\r\n        this.spinnerVisible = false;\r\n      },\r\n      error: e => {\r\n        console.log(\"Error in fetching addresses\", e);\r\n        this.spinnerVisible = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  primaryAddress(address) {\r\n    const Jwt = this.cookieService.get('token');\r\n    this.userService.makeItPrimary(Jwt, address).subscribe({\r\n      next: data => {\r\n        console.log(\"Done Making it primary\");\r\n        this.fetchAllAddresses();\r\n      },\r\n      error: e => {\r\n        console.log(\"Error while making it primary\", e);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteAddress(addressId) {\r\n    const Jwt = this.cookieService.get('token');\r\n    this.userService.deleteAddress(Jwt, addressId).subscribe({\r\n      next: data => {\r\n        console.log(\"Deletion Success\");\r\n        this.fetchAllAddresses();\r\n      },\r\n      error: e => {\r\n        console.log(\"Deletion Failure\", e);\r\n      }\r\n    });\r\n  }\r\n\r\n  generateUniqueKey() {\r\n    const timestamp = new Date().getTime();\r\n    const randomNumber = Math.floor(Math.random() * 1000);\r\n    return `address-${timestamp}-${randomNumber}`;\r\n  }\r\n\r\n  addressForm = this.fb.group({\r\n    addressId: [],\r\n    address1: ['', Validators.required],\r\n    landMark: ['', Validators.required],\r\n    city: ['', Validators.required],\r\n    pincode: [null, [Validators.required, Validators.pattern('^[0-9]{6}$')]],\r\n    currentLocation: []\r\n  });\r\n\r\n  get addressId() {\r\n    return this.addressForm.get('addressId');\r\n  }\r\n\r\n  get address1() {\r\n    return this.addressForm.get('address1');\r\n  }\r\n\r\n  get landmark() {\r\n    return this.addressForm.get('landMark');\r\n  }\r\n\r\n  get city() {\r\n    return this.addressForm.get('city');\r\n  }\r\n\r\n  get pincode() {\r\n    return this.addressForm.get('pincode');\r\n  }\r\n\r\n  get currentLocation() {\r\n    return this.addressForm.get('currentLocation');\r\n  }\r\n\r\n  onSubmit() {\r\n    const random = this.generateUniqueKey();\r\n\r\n    const addressNew = this.addressForm.value as address;\r\n    addressNew.addressId = random;\r\n    const Jwt = this.cookieService.get('token');\r\n\r\n    this.userService.saveNewAddress(Jwt, addressNew).subscribe({\r\n      next: data => {\r\n        console.log(\"Address Added Successfully\", data);\r\n        this.fetchAllAddresses();\r\n      },\r\n      error: e => {\r\n        console.log(\"Error while Saving Address\", e);\r\n      }\r\n    });\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.ts b/../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.ts
--- a/../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.ts	(date 1718772880459)
@@ -73,9 +73,9 @@
 
   addressForm = this.fb.group({
     addressId: [],
-    address1: ['', Validators.required],
-    landMark: ['', Validators.required],
-    city: ['', Validators.required],
+    address1: ['', [Validators.required, Validators.minLength(5)]],
+    landMark: ['', [Validators.required, Validators.minLength(5)]],
+    city: ['', [Validators.required, Validators.pattern(/^[a-zA-Z ]+$/),  Validators.minLength(2)]],
     pincode: [null, [Validators.required, Validators.pattern('^[0-9]{6}$')]],
     currentLocation: []
   });
Index: ../FrontEnd/DishDash/src/app/Components/edit-profile/edit-profile.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { UserService } from '../../services/user.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { customer } from '../../Model/customer';\r\n\r\n@Component({\r\n  selector: 'app-edit-profile',\r\n  templateUrl: './edit-profile.component.html',\r\n  styleUrls: ['./edit-profile.component.css']\r\n})\r\nexport class EditProfileComponent implements OnInit {\r\n  customerJwt: string = '';\r\n  spinnerVisible: boolean = false;\r\n  updateMessageVisible: boolean = false;\r\n  activeCustomer: customer = {\r\n    customerId: '',\r\n    customerName: '',\r\n    customerEmail: '',\r\n    customerPassword: '',\r\n    customerPhone: '' // Ensure phone number is an empty string initially\r\n  };\r\n\r\n  updateForm = this.fb.group({\r\n    customerId: [''],\r\n    customerEmail: [{ value: '', disabled: true }],\r\n    customerName: ['', [Validators.required, Validators.minLength(3), Validators.pattern(/^[a-zA-Z ]+$/)]],\r\n    customerPhone: ['', [Validators.required]] // Ensure phone number is initialized as an empty string\r\n  });\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private cookieService: CookieService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.customerJwt = this.cookieService.get('token');\r\n    this.fetchActiveCustomer();\r\n  }\r\n\r\n  fetchActiveCustomer() {\r\n    this.userService.fetchCustomerByJwt(this.customerJwt).subscribe({\r\n      next: data => {\r\n        this.activeCustomer = data;\r\n        // const customerPhone = this.activeCustomer.customerPhone !== null ? String(this.activeCustomer.customerPhone) : '';\r\n\r\n        this.updateForm.patchValue({\r\n          customerId: this.activeCustomer.customerId,\r\n          customerEmail: this.activeCustomer.customerEmail,\r\n          customerName: this.activeCustomer.customerName,\r\n          customerPhone: this.activeCustomer.customerPhone// Handle null or empty phone number\r\n        });\r\n      },\r\n      error: e => {\r\n        console.log('Error while fetching Customer');\r\n        console.log(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.spinnerVisible = true;\r\n    const customer = this.updateForm.getRawValue(); // getRawValue to include disabled fields\r\n    console.log(customer);\r\n\r\n    this.userService.updateCustomer(this.customerJwt, customer).subscribe({\r\n      next: data => {\r\n        this.spinnerVisible = false;\r\n        this.showUpdateMessage();\r\n        console.log('Update Success');\r\n      },\r\n      error: e => {\r\n        this.spinnerVisible = false;\r\n        console.log('Update Failed');\r\n      }\r\n    });\r\n  }\r\n\r\n  showUpdateMessage() {\r\n    this.updateMessageVisible = true;\r\n    setTimeout(() => {\r\n      this.updateMessageVisible = false;\r\n    }, 3000);\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/edit-profile/edit-profile.component.ts b/../FrontEnd/DishDash/src/app/Components/edit-profile/edit-profile.component.ts
--- a/../FrontEnd/DishDash/src/app/Components/edit-profile/edit-profile.component.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/edit-profile/edit-profile.component.ts	(date 1718772332048)
@@ -25,7 +25,7 @@
     customerId: [''],
     customerEmail: [{ value: '', disabled: true }],
     customerName: ['', [Validators.required, Validators.minLength(3), Validators.pattern(/^[a-zA-Z ]+$/)]],
-    customerPhone: ['', [Validators.required]] // Ensure phone number is initialized as an empty string
+    customerPhone: ['', [Validators.required, Validators.pattern(/^[6-9]\d{9}$/)]] // Ensure phone number is initialized as an empty string
   });
 
   constructor(
Index: ../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.address-management-container {\r\n  max-width: 800px;\r\n  margin: auto;\r\n}\r\n\r\n.add-address-section {\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.address-accordion .mat-expansion-panel-header-title {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.address-accordion .mat-expansion-panel-header-title mat-icon {\r\n  margin-right: 8px;\r\n}\r\n\r\n.mat-form-field {\r\n  width: 100%;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.form-row {\r\n  display: flex;\r\n  gap: 16px;\r\n}\r\n\r\n.form-row .mat-form-field {\r\n  flex: 1;\r\n}\r\n\r\n.saved-addresses-section {\r\n  margin-top: 20px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.spinner {\r\n  height: 100px;\r\n}\r\n\r\n.no-address h3 {\r\n  color: #6c757d;\r\n}\r\n\r\n.address-cards {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n}\r\n\r\n.address-card {\r\n  flex: 1 1 calc(50% - 20px);\r\n  min-width: 250px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.address-card .card-body {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n.primary-banner {\r\n  border-radius: 4px;\r\n}\r\n\r\n.card-title {\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.card-text {\r\n  color: #777;\r\n}\r\n\r\n.card-text strong {\r\n  color: #333;\r\n}\r\n\r\n.btn {\r\n  min-width: 100px;\r\n}\r\n\r\n.btn-block {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n}\r\n\r\n.mat-form-field {\r\n  background: #ffffff;\r\n  border-radius: 4px;\r\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.mat-form-field-appearance-outline .mat-form-field-outline {\r\n  color: #ced4da;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.css b/../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.css
--- a/../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.css	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/myaddresses/myaddresses.component.css	(date 1718734296941)
@@ -63,27 +63,37 @@
   box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
 }
 
+.address-card .card-header {
+  background-color: #f8f9fa;
+  border-bottom: 1px solid #ddd;
+  padding: 10px;
+  border-top-left-radius: 8px;
+  border-top-right-radius: 8px;
+}
+
 .address-card .card-body {
-  display: flex;
-  flex-direction: column;
-  justify-content: space-between;
-}
-
-.primary-banner {
-  border-radius: 4px;
+  padding: 20px;
 }
 
 .card-title {
   font-weight: bold;
   color: #333;
+  margin-bottom: 10px;
 }
 
 .card-text {
-  color: #777;
+  color: #555;
+  margin-bottom: 10px;
+}
+
+.card-text mat-icon {
+  vertical-align: middle;
+  margin-right: 8px;
+  color: #6c757d;
 }
 
-.card-text strong {
-  color: #333;
+.card-actions {
+  margin-top: 10px;
 }
 
 .btn {
@@ -95,13 +105,3 @@
   padding: 10px;
   font-size: 16px;
 }
-
-.mat-form-field {
-  background: #ffffff;
-  border-radius: 4px;
-  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
-}
-
-.mat-form-field-appearance-outline .mat-form-field-outline {
-  color: #ced4da;
-}
Index: ../FrontEnd/DishDash/src/app/Components/footer/footer.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrl: './footer.component.css'\r\n})\r\nexport class FooterComponent {\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/footer/footer.component.ts b/../FrontEnd/DishDash/src/app/Components/footer/footer.component.ts
--- a/../FrontEnd/DishDash/src/app/Components/footer/footer.component.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/footer/footer.component.ts	(date 1718750245212)
@@ -1,10 +1,4 @@
 import { Component } from '@angular/core';
-
-@Component({
-  selector: 'app-footer',
-  templateUrl: './footer.component.html',
-  styleUrl: './footer.component.css'
-})
-export class FooterComponent {
-
-}
+import { MatDialog } from '@angular/material/dialog';
+import { LoginComponent } from '../login/login.component';
+import { RegisterComponent } from '../register/reg
\ No newline at end of file
Index: ../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div class=\"order-history-container\">\r\n    <h2>Your Order History</h2>\r\n    \r\n    <div *ngIf=\"orderHistory.length === 0\" class=\"empty-history\">\r\n      <p>No orders found.</p>\r\n    </div>\r\n    \r\n    <div *ngIf=\"orderHistory.length > 0\" class=\"order-list\">\r\n      <div *ngFor=\"let order of orderHistory\" class=\"order-card card mb-4 shadow-sm\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">Order ID: {{ order.orderId }}</h5>\r\n          <p class=\"card-text\"><strong>Restaurant ID:</strong> {{ order.restaurantId }}</p>\r\n          <p class=\"card-text\"><strong>Date:</strong> {{ order.timeStamp | date:'medium' }}</p>\r\n          <p class=\"card-text\"><strong>Total Price:</strong> Rs {{ order.totalPrice }}</p>\r\n          <p class=\"card-text\"><strong>Discount:</strong> Rs {{ order.discount }}</p>\r\n          <p class=\"card-text\"><strong>Billing Price:</strong> Rs {{ order.billingPrice }}</p>\r\n          <p class=\"card-text\"><strong>Total Items:</strong> {{ order.totalItems }}</p>\r\n          <p class=\"card-text\"><strong>Payment Method:</strong> {{ order.paymentMethod }}</p>\r\n          \r\n          <h6>Items:</h6>\r\n          <ul>\r\n            <li *ngFor=\"let item of order.cartItems\">\r\n              {{ item.dishName }} - Rs {{ item.dishPrice }} x {{ item.quantity }}\r\n            </li>\r\n          </ul>\r\n          \r\n          <h6>Delivery Address:</h6>\r\n          <p>{{ order.customerAddress.address1 }}, {{ order.customerAddress.landMark }}, {{ order.customerAddress.city }} - {{ order.customerAddress.pincode }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.html b/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.html
--- a/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.html	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.html	(date 1718732146363)
@@ -1,33 +1,1 @@
-<div class="order-history-container">
-    <h2>Your Order History</h2>
-    
-    <div *ngIf="orderHistory.length === 0" class="empty-history">
-      <p>No orders found.</p>
-    </div>
-    
-    <div *ngIf="orderHistory.length > 0" class="order-list">
-      <div *ngFor="let order of orderHistory" class="order-card card mb-4 shadow-sm">
-        <div class="card-body">
-          <h5 class="card-title">Order ID: {{ order.orderId }}</h5>
-          <p class="card-text"><strong>Restaurant ID:</strong> {{ order.restaurantId }}</p>
-          <p class="card-text"><strong>Date:</strong> {{ order.timeStamp | date:'medium' }}</p>
-          <p class="card-text"><strong>Total Price:</strong> Rs {{ order.totalPrice }}</p>
-          <p class="card-text"><strong>Discount:</strong> Rs {{ order.discount }}</p>
-          <p class="card-text"><strong>Billing Price:</strong> Rs {{ order.billingPrice }}</p>
-          <p class="card-text"><strong>Total Items:</strong> {{ order.totalItems }}</p>
-          <p class="card-text"><strong>Payment Method:</strong> {{ order.paymentMethod }}</p>
-          
-          <h6>Items:</h6>
-          <ul>
-            <li *ngFor="let item of order.cartItems">
-              {{ item.dishName }} - Rs {{ item.dishPrice }} x {{ item.quantity }}
-            </li>
-          </ul>
-          
-          <h6>Delivery Address:</h6>
-          <p>{{ order.customerAddress.address1 }}, {{ order.customerAddress.landMark }}, {{ order.customerAddress.city }} - {{ order.customerAddress.pincode }}</p>
-        </div>
-      </div>
-    </div>
-  </div>
-  
\ No newline at end of file
+<div class="order-history-co
\ No newline at end of file
Index: ../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, OnInit } from '@angular/core';\r\nimport { CartServiceService } from '../../services/cart-service.service';\r\nimport { OrderServiceService } from '../../services/order-service.service';\r\nimport { Order } from '../../Model/Order';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { customer } from '../../Model/customer';\r\nimport { UserService } from '../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-orderhistory',\r\n  templateUrl: './orderhistory.component.html',\r\n  styleUrl: './orderhistory.component.css'\r\n})\r\nexport class OrderhistoryComponent implements OnInit {\r\n\r\n  orderHistory:Order[] = [];\r\n  orderIds:string[] = [];\r\n  activeCustomer:customer;\r\n  constructor(private orderService: OrderServiceService, private Cookieservice:CookieService, private userService:UserService) {}\r\n  ngOnInit(): void {\r\n    this.fetchActiveCustomer()\r\n  \r\n    \r\n  }\r\n\r\n  fetchActiveCustomer() {\r\n    const Jwt = this.Cookieservice.get('token')\r\n    this.userService.fetchCustomerByJwt(Jwt).subscribe({\r\n      next:data => {\r\n        this.activeCustomer  = data;\r\n        this.fetchCustomerOrderIds()\r\n      },\r\n      error:data => {\r\n        console.log(\"Error while fetching customer\")\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  fetchCustomerOrderIds() {\r\n    this.orderIds = this.activeCustomer.customerOrderHistory; \r\n    this.fetchingAllOrderHistory();\r\n  }\r\n\r\n  fetchingAllOrderHistory() {\r\n    for ( let orderId of this.orderIds) {\r\n      this.orderService.fetchingOneOrder(orderId).subscribe({\r\n        next:data => {\r\n          console.log(\"Fetch Success\");\r\n          this.orderHistory.push(data);\r\n        },\r\n        error:e => {\r\n          console.log(\"Error while fetching Order History\")\r\n        }\r\n      })\r\n    }\r\n  }\r\n  \r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.ts b/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.ts
--- a/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/orderhistory/orderhistory.component.ts	(date 1718726632943)
@@ -1,60 +1,5 @@
 import { Component, OnInit } from '@angular/core';
-import { CartServiceService } from '../../services/cart-service.service';
 import { OrderServiceService } from '../../services/order-service.service';
 import { Order } from '../../Model/Order';
 import { CookieService } from 'ngx-cookie-service';
-import { customer } from '../../Model/customer';
-import { UserService } from '../../services/user.service';
-
-@Component({
-  selector: 'app-orderhistory',
-  templateUrl: './orderhistory.component.html',
-  styleUrl: './orderhistory.component.css'
-})
-export class OrderhistoryComponent implements OnInit {
-
-  orderHistory:Order[] = [];
-  orderIds:string[] = [];
-  activeCustomer:customer;
-  constructor(private orderService: OrderServiceService, private Cookieservice:CookieService, private userService:UserService) {}
-  ngOnInit(): void {
-    this.fetchActiveCustomer()
-  
-    
-  }
-
-  fetchActiveCustomer() {
-    const Jwt = this.Cookieservice.get('token')
-    this.userService.fetchCustomerByJwt(Jwt).subscribe({
-      next:data => {
-        this.activeCustomer  = data;
-        this.fetchCustomerOrderIds()
-      },
-      error:data => {
-        console.log("Error while fetching customer")
-      }
-    })
-
-  }
-
-  fetchCustomerOrderIds() {
-    this.orderIds = this.activeCustomer.customerOrderHistory; 
-    this.fetchingAllOrderHistory();
-  }
-
-  fetchingAllOrderHistory() {
-    for ( let orderId of this.orderIds) {
-      this.orderService.fetchingOneOrder(orderId).subscribe({
-        next:data => {
-          console.log("Fetch Success");
-          this.orderHistory.push(data);
-        },
-        error:e => {
-          console.log("Error while fetching Order History")
-        }
-      })
-    }
-  }
-  
-
-}
+import 
\ No newline at end of file
Index: ../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div class=\"navbar navbar-expand-lg navbar-light bg-white fixed-top shadow-sm\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" routerLink=\"/\">\r\n      <img src=\"../../../assets/images/dishdashgif.gif\" alt=\"Logo\" class=\"logo\" />\r\n    </a>\r\n    <button\r\n      class=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-bs-toggle=\"collapse\"\r\n      data-bs-target=\"#navbarNav\"\r\n      aria-controls=\"navbarNav\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav ms-auto\">\r\n        <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\r\n          <a class=\"nav-link pointer\" (click)=\"openLoginDialog('3000ms', '1500ms')\">Log In</a>\r\n        </li>\r\n        \r\n        <li class=\"nav-item dropdown\" *ngIf=\"isLoggedIn\">\r\n          <a\r\n            class=\"nav-link dropdown-toggle d-flex align-items-center\"\r\n            href=\"#\"\r\n            id=\"navbarDropdown\"\r\n            role=\"button\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <img\r\n              src=\"https://w7.pngwing.com/pngs/178/595/png-transparent-user-profile-computer-icons-login-user-avatars.png\"\r\n              alt=\"Profile\"\r\n              class=\"profile-pic\"\r\n            />\r\n            {{ activeCustomer.customerName.split(' ')[0] }}\r\n          </a>\r\n          <ul class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"navbarDropdown\">\r\n            <li>\r\n              <a class=\"dropdown-item d-flex align-items-center\" routerLink=\"customer/profile/favorites\">\r\n                <mat-icon class=\"me-2\">account_circle</mat-icon> Profile\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a class=\"dropdown-item d-flex align-items-center pointer\" (click)=\"logout()\">\r\n                <mat-icon class=\"me-2\">exit_to_app</mat-icon> Logout\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li class=\"nav-item position-relative\" (mouseover)=\"showCart = true\" (mouseleave)=\"showCart = false\">\r\n          <a class=\"nav-link d-flex align-items-center\">\r\n            <mat-icon class=\"cart-icon\" [matBadge]=\"matBadge\" matBadgeColor=\"warn\">shopping_cart</mat-icon>\r\n            <span class=\"ms-1 pointer\">Cart</span>\r\n          </a>\r\n          <div class=\"cart-dropdown position-absolute bg-white shadow-sm\" *ngIf=\"showCart\">\r\n            <app-cart (quantityChange)=\"noOfItemsChanges($event)\"></app-cart>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"logout-message alert alert-success\" *ngIf=\"logoutMessageVisible\" role=\"alert\">\r\n    Logged out successfully!\r\n  </div>\r\n\r\n  <div class=\"loading-overlay\" *ngIf=\"loading\">\r\n    <div class=\"spinner-border text-primary\" role=\"status\">\r\n      <span class=\"visually-hidden\">Loading...</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.html b/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.html
--- a/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.html	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.html	(date 1718716986811)
@@ -29,10 +29,11 @@
             data-bs-toggle="dropdown"
             aria-expanded="false"
           >
+          <img id="profileImage" *ngIf="profilePicture" class="profile rounded-circle" [src]="url" alt="Profile Image">
             <img
               src="https://w7.pngwing.com/pngs/178/595/png-transparent-user-profile-computer-icons-login-user-avatars.png"
               alt="Profile"
-              class="profile-pic"
+              class="profile-pic" *ngIf="!profilePicture"
             />
             {{ activeCustomer.customerName.split(' ')[0] }}
           </a>
Index: ../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, OnInit } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { UserService } from '../../services/user.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { customer } from '../../Model/customer';\r\nimport { RegisterComponent } from '../register/register.component';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  activeCustomer: customer;\r\n  customerJwt: string;\r\n  matBadge: number;\r\n  showCart: boolean = false;\r\n\r\n  logoutMessageVisible: boolean = false;\r\n  loading: boolean = false;\r\n\r\n  constructor(private cookieService: CookieService, private userService: UserService, public dialog: MatDialog) {}\r\n  isLoggedIn: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    // Check if token exists and fetch active customer if it does\r\n    if (this.cookieService.check(\"token\")) {\r\n      this.customerJwt = this.cookieService.get(\"token\");\r\n      this.fetchActiveCustomer();\r\n    }\r\n\r\n    // Subscribe to token subject to handle token-related actions\r\n    this.userService.tokenSubject.subscribe({\r\n      next: data => {\r\n        if (!data) {\r\n          this.logout();\r\n        }\r\n      },\r\n      error: e => {\r\n        console.error(e);\r\n      }\r\n    });\r\n\r\n    // Subscribe to logInSubject to update login state\r\n    this.userService.logInSubject.subscribe({\r\n      next: data => {\r\n        this.isLoggedIn = data;\r\n        this.customerJwt = this.cookieService.get(\"token\");\r\n        this.fetchActiveCustomer();\r\n      }\r\n    });\r\n\r\n    // Subscribe to loggedOutFromProfileSubject to handle profile logout\r\n    this.userService.loggedOutFromProfileSubject.subscribe({\r\n      next: data => {\r\n        if (true) {\r\n          this.logout();\r\n        }\r\n      },\r\n      error: e => {\r\n        console.error(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Update the badge with the number of items in the cart\r\n  noOfItemsChanges($event) {\r\n    this.matBadge = $event;\r\n  }\r\n\r\n  // Handle user logout and display loading indicator\r\n  logout() {\r\n    this.cookieService.delete(\"token\");\r\n    this.loading = true;\r\n    setTimeout(() => {\r\n      this.cookieService.delete(\"token\");\r\n      this.isLoggedIn = false;\r\n      this.loading = false;\r\n      this.showLogoutMessage();\r\n    }, 1000);\r\n  }\r\n\r\n  // Show a temporary message indicating successful logout\r\n  showLogoutMessage() {\r\n    this.logoutMessageVisible = true;\r\n    setTimeout(() => {\r\n      this.logoutMessageVisible = false;\r\n    }, 3000);\r\n  }\r\n\r\n  // Open the login dialog\r\n  openLoginDialog(enterAnimationDuration: string, exitAnimationDuration: string): void {\r\n    this.dialog.open(LoginComponent, {\r\n      width: \"400px\"\r\n    });\r\n  }\r\n\r\n  // Open the signup dialog\r\n  openSignupDialog(enterAnimationDuration: string, exitAnimationDuration: string): void {\r\n    this.dialog.open(RegisterComponent, {\r\n      width: \"400px\"\r\n    });\r\n  }\r\n\r\n  // Fetch active customer details using JWT token\r\n  fetchActiveCustomer() {\r\n    this.userService.fetchCustomerByJwt(this.customerJwt).subscribe({\r\n      next: data => {\r\n        this.activeCustomer = data;\r\n        this.isLoggedIn = true;\r\n      },\r\n      error: e => {\r\n        console.error(e);\r\n      }\r\n    });\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.spec.ts b/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.spec.ts
--- a/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.spec.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.spec.ts	(date 1718716770957)
@@ -20,6 +20,7 @@
 
   logoutMessageVisible: boolean = false;
   loading: boolean = false;
+url: any;
 
   constructor(private cookieService: CookieService, private userService: UserService, public dialog: MatDialog) {}
   isLoggedIn: boolean = false;
Index: ../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div class=\"admin-view-container\">\r\n    <h2 class=\"text-center mb-4\">Admin Dashboard</h2>\r\n    <mat-tab-group>\r\n      <!-- Orders Tab -->\r\n      <mat-tab label=\"Orders\">\r\n        <div class=\"orders-section\">\r\n          <mat-table [dataSource]=\"allOrders\" class=\"mat-elevation-z8\">\r\n            <!-- Order ID Column -->\r\n            <ng-container matColumnDef=\"orderId\">\r\n              <mat-header-cell *matHeaderCellDef> Order ID </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let order\"> {{order.orderId}} </mat-cell>\r\n            </ng-container>\r\n  \r\n            <!-- Customer ID Column -->\r\n            <ng-container matColumnDef=\"customerId\">\r\n              <mat-header-cell *matHeaderCellDef> Customer ID </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let order\"> {{order.customerId}} </mat-cell>\r\n            </ng-container>\r\n  \r\n            <!-- Total Price Column -->\r\n            <ng-container matColumnDef=\"totalPrice\">\r\n              <mat-header-cell *matHeaderCellDef> Total Price </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let order\"> Rs {{order.totalPrice}} </mat-cell>\r\n            </ng-container>\r\n  \r\n            <!-- Payment Method Column -->\r\n            <ng-container matColumnDef=\"paymentMethod\">\r\n              <mat-header-cell *matHeaderCellDef> Payment Method </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let order\"> {{order.paymentMethod}} </mat-cell>\r\n            </ng-container>\r\n  \r\n            <!-- Order Timestamp Column -->\r\n            <ng-container matColumnDef=\"timeStamp\">\r\n              <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let order\"> {{order.timeStamp | date:'medium'}} </mat-cell>\r\n            </ng-container>\r\n  \r\n            <!-- Header and Row Definitions -->\r\n            <mat-header-row *matHeaderRowDef=\"orderDisplayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: orderDisplayedColumns;\"></mat-row>\r\n          </mat-table>\r\n        </div>\r\n      </mat-tab>\r\n  \r\n      <!-- Customers Tab -->\r\n      <mat-tab label=\"Customers\">\r\n        <div class=\"customers-section\">\r\n          <mat-table [dataSource]=\"allCustomers\" class=\"mat-elevation-z8\">\r\n            <!-- Customer ID Column -->\r\n            <ng-container matColumnDef=\"customerId\">\r\n              <mat-header-cell *matHeaderCellDef> Customer ID </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let customer\"> {{customer.customerId}} </mat-cell>\r\n            </ng-container>\r\n  \r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"customerName\">\r\n              <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let customer\"> {{customer.customerName}} </mat-cell>\r\n            </ng-container>\r\n  \r\n            <!-- Email Column -->\r\n            <ng-container matColumnDef=\"customerEmail\">\r\n              <mat-header-cell *matHeaderCellDef> Email </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let customer\"> {{customer.customerEmail}} </mat-cell>\r\n            </ng-container>\r\n  \r\n            <!-- Phone Column -->\r\n            <ng-container matColumnDef=\"customerPhone\">\r\n              <mat-header-cell *matHeaderCellDef> Phone </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let customer\"> {{customer.customerPhone}} </mat-cell>\r\n            </ng-container>\r\n  \r\n            <!-- Header and Row Definitions -->\r\n            <mat-header-row *matHeaderRowDef=\"customerDisplayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: customerDisplayedColumns;\"></mat-row>\r\n          </mat-table>\r\n        </div>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n  
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.html b/../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.html
--- a/../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.html	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/admin-view/admin-view.component.html	(date 1718745544848)
@@ -1,4 +1,10 @@
+
+<div class="adminbar bg-body-tertiary flex justify-content-end p-3" >
+  <div class="logout">
+    <p routerLink="../../admin/login" class="pointer fw-bold">Logout</p></div>
+</div>
 <div class="admin-view-container">
+
     <h2 class="text-center mb-4">Admin Dashboard</h2>
     <mat-tab-group>
       <!-- Orders Tab -->
Index: ../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, OnInit } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { UserService } from '../../services/user.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { customer } from '../../Model/customer';\r\nimport { RegisterComponent } from '../register/register.component';\r\nimport { RouterService } from '../../services/router.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  activeCustomer: customer;\r\n  customerJwt: string;\r\n  matBadge: 5;\r\n  showCart: boolean = false;\r\n\r\n  logoutMessageVisible: boolean = false;\r\n  loading: boolean = false;\r\n\r\n  constructor(private cookieService: CookieService, private userService: UserService, public dialog: MatDialog, private routerService:RouterService) {}\r\n  isLoggedIn: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    // Check if token exists and fetch active customer if it does\r\n    if (this.cookieService.check(\"token\")) {\r\n      this.customerJwt = this.cookieService.get(\"token\");\r\n      this.fetchActiveCustomer();\r\n    }\r\n\r\n    this.updateCartCount();\r\n    window.addEventListener('storage', this.updateCartCount.bind(this));\r\n\r\n    // Subscribe to logInSubject to update login state\r\n    this.userService.logInSubject.subscribe({\r\n      next: data => {\r\n        this.isLoggedIn = data;\r\n        this.customerJwt = this.cookieService.get(\"token\");\r\n        this.fetchActiveCustomer();\r\n      }\r\n    });\r\n\r\n    // Subscribe to loggedOutFromProfileSubject to handle profile logout\r\n    this.userService.loggedOutFromProfileSubject.subscribe({\r\n      next: data => {\r\n        if (data) {\r\n          this.handleLogout();\r\n        }\r\n      },\r\n      error: e => {\r\n        console.error(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  //Updating cart number\r\n  updateCartCount() {\r\n    const cart = JSON.parse(localStorage.getItem('cart') || '[]');\r\n    this.matBadge = cart.reduce((total:number, item:any) => total+item.quantity, 0);\r\n  }\r\n\r\n  // Update the badge with the number of items in the cart\r\n  noOfItemsChanges($event) {\r\n    this.matBadge = $event;\r\n  }\r\n\r\n  // Handle user logout and display loading indicator\r\n  logout() {\r\n    this.cookieService.delete(\"token\");\r\n    this.loading = true;\r\n    this.routerService.navigateToHomePage()\r\n    setTimeout(() => {\r\n      this.isLoggedIn = false;\r\n      this.loading = false;\r\n      this.showLogoutMessage();\r\n    }, 1000);\r\n  }\r\n\r\n  // Handle logout without showing the message immediately on page load\r\n  handleLogout() {\r\n    this.cookieService.delete(\"token\");\r\n    this.isLoggedIn = false;\r\n    this.showLogoutMessage();\r\n  }\r\n\r\n  // Show a temporary message indicating successful logout\r\n  showLogoutMessage() {\r\n    this.logoutMessageVisible = true;\r\n    setTimeout(() => {\r\n      this.logoutMessageVisible = false;\r\n    }, 3000);\r\n  }\r\n\r\n  // Open the login dialog\r\n  openLoginDialog(enterAnimationDuration: string, exitAnimationDuration: string): void {\r\n    this.dialog.open(LoginComponent, {\r\n      width: \"400px\"\r\n    });\r\n  }\r\n\r\n  // Open the signup dialog\r\n  openSignupDialog(enterAnimationDuration: string, exitAnimationDuration: string): void {\r\n    this.dialog.open(RegisterComponent, {\r\n      width: \"400px\"\r\n    });\r\n  }\r\n\r\n  // Fetch active customer details using JWT token\r\n  fetchActiveCustomer() {\r\n    this.userService.fetchCustomerByJwt(this.customerJwt).subscribe({\r\n      next: data => {\r\n        this.activeCustomer = data;\r\n        this.isLoggedIn = true;\r\n      },\r\n      error: e => {\r\n        console.error(e);\r\n      }\r\n    });\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.ts b/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.ts
--- a/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/navbar/navbar.component.ts	(date 1718716891019)
@@ -22,6 +22,9 @@
   logoutMessageVisible: boolean = false;
   loading: boolean = false;
 
+  profilePicture:boolean = false; 
+  url:string  = `https://via.placeholder.com/50x50`//for fetching profile pic
+
   constructor(private cookieService: CookieService, private userService: UserService, public dialog: MatDialog, private routerService:RouterService) {}
   isLoggedIn: boolean = false;
 
@@ -115,6 +118,14 @@
       next: data => {
         this.activeCustomer = data;
         this.isLoggedIn = true;
+        if(this.activeCustomer.customerProfilePic)
+          {
+            
+            this.url ="http://127.0.0.1:5500/DishDash/src/assets/images/"+`${this.activeCustomer.customerProfilePic}`
+      
+            this.profilePicture=true;
+            
+          }
       },
       error: e => {
         console.error(e);
Index: ../FrontEnd/DishDash/src/app/Components/restaurant/restaurant.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, OnInit } from '@angular/core';\r\nimport { restaurant } from '../../Model/restaurant';\r\nimport { RestaurantService } from '../../services/restaurant.service';\r\n\r\n@Component({\r\n  selector: 'app-restaurant',\r\n  templateUrl: './restaurant.component.html',\r\n  styleUrls: ['./restaurant.component.css']\r\n})\r\nexport class RestaurantComponent implements OnInit {\r\n  city: string;\r\n  restaurants: restaurant[] = [];\r\n  spinnerVisible: boolean = false;\r\n  noRestuarant: boolean = false;\r\n  noSuchRestaurant: boolean = false;\r\n\r\n  // Pagination properties\r\n  p: number = 1;  // Current page number\r\n  itemsPerPage: number = 7;  // Number of items per page\r\n\r\n  constructor(private resService: RestaurantService) {}\r\n\r\n  ngOnInit(): void {\r\n    // Subscribe to city changes\r\n    this.resService.cityEmiter.subscribe({\r\n      next: data => {\r\n        this.city = data;\r\n        this.spinnerVisible = true;\r\n        this.noRestuarant = false;\r\n\r\n        // Subscribe to restaurant data changes\r\n        this.resService.restaurantsEmitter.subscribe({\r\n          next: data => {\r\n            console.log(\"Data from search\")\r\n            console.log(data);\r\n            \r\n            if (data) {\r\n              this.restaurants = data;\r\n              this.noRestuarant = false;\r\n              if(this.restaurants.length == 0) {\r\n                this.noSuchRestaurant = true;\r\n              }\r\n            } else {\r\n              this.noRestuarant = true;\r\n              this.restaurants = [];\r\n            }\r\n            this.spinnerVisible = false;\r\n          },\r\n          error: e => {\r\n            console.error(\"Error fetching restaurant data\", e);\r\n            this.spinnerVisible = false;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/restaurant/restaurant.component.ts b/../FrontEnd/DishDash/src/app/Components/restaurant/restaurant.component.ts
--- a/../FrontEnd/DishDash/src/app/Components/restaurant/restaurant.component.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/restaurant/restaurant.component.ts	(date 1718771372343)
@@ -16,7 +16,7 @@
 
   // Pagination properties
   p: number = 1;  // Current page number
-  itemsPerPage: number = 7;  // Number of items per page
+  itemsPerPage: number = 6;  // Number of items per page
 
   constructor(private resService: RestaurantService) {}
 
Index: ../FrontEnd/DishDash/src/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <title>DishDash</title>\r\n  <base href=\"/\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\r\n  <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500&display=swap\" rel=\"stylesheet\">\r\n  <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\r\n\r\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/bootstrap@5.3.3/dist/css/bootstrap.min.css\">\r\n<link rel=\"stylesheet\" href=\"https://unpkg.com/bs-brain@2.0.4/utilities/font-size/font-size.css\">\r\n<link rel=\"stylesheet\" href=\"https://unpkg.com/bs-brain@2.0.4/utilities/padding/padding.css\">\r\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n</head>\r\n<body class=\"mat-typography\">\r\n  <app-root></app-root>\r\n\r\n  <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js\" integrity=\"sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r\" crossorigin=\"anonymous\"></script>\r\n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js\" integrity=\"sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy\" crossorigin=\"anonymous\"></script>\r\n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/index.html b/../FrontEnd/DishDash/src/index.html
--- a/../FrontEnd/DishDash/src/index.html	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/index.html	(date 1718744794145)
@@ -2,10 +2,11 @@
 <html lang="en">
 <head>
   <meta charset="utf-8">
-  <title>DishDash</title>
+  <meta name="description" content="Your go-to platform for discovering the best food and drinks in the city.">
+  <title>DishDash - Best Food Delivery App</title>
   <base href="/">
   <meta name="viewport" content="width=device-width, initial-scale=1">
-  <link rel="icon" type="image/x-icon" href="favicon.ico">
+  <link rel="icon" type="image/x-icon" href="./assets/images/favicon_3.jpg">
   <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500&display=swap" rel="stylesheet">
   <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
 
Index: ../FrontEnd/DishDash/src/app/Components/register/register.component.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.header {\r\n  padding: 1rem;\r\n  border-bottom: 1px solid #dee2e6;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: #fff;\r\n  z-index: 1000;\r\n}\r\n\r\n.close-button {\r\n  margin: 0;\r\n  font-size: 1.25rem;\r\n  color: #495057;\r\n}\r\n\r\n.regform {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.form-outline {\r\n  position: relative;\r\n  margin-bottom: 1rem; /* Reduced margin for shorter form */\r\n}\r\n\r\n.form-control {\r\n  padding: 0.75rem; /* Adjusted padding for smaller form */\r\n  height: auto;\r\n  border-radius: 0.25rem;\r\n  border: 1px solid #ced4da;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.form-control:focus {\r\n  border-color: #80bdff;\r\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.button {\r\n  text-align: center;\r\n}\r\n\r\n.button button {\r\n  min-width: 100%;\r\n  padding: 0.75rem;\r\n  font-size: 1rem;\r\n}\r\n\r\n.spinner {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.text-danger {\r\n  font-size: 0.875rem;\r\n  margin-top: 0.25rem;\r\n}\r\n\r\n.alert {\r\n  font-size: 0.9rem;\r\n  margin-bottom: 1rem;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/register/register.component.css b/../FrontEnd/DishDash/src/app/Components/register/register.component.css
--- a/../FrontEnd/DishDash/src/app/Components/register/register.component.css	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/register/register.component.css	(date 1718716230173)
@@ -1,5 +1,5 @@
 .header {
-  padding: 1rem;
+  padding: 0.5rem; /* Reduced padding */
   border-bottom: 1px solid #dee2e6;
   display: flex;
   justify-content: flex-end;
@@ -18,15 +18,20 @@
 .regform {
   max-width: 400px;
   margin: 0 auto;
+  padding: 1rem; /* Reduced padding */
+}
+
+h4 {
+  font-size: 1.5rem; /* Slightly smaller headline */
 }
 
 .form-outline {
   position: relative;
-  margin-bottom: 1rem; /* Reduced margin for shorter form */
+  margin-bottom: 0.75rem; /* Reduced margin for more compact form */
 }
 
 .form-control {
-  padding: 0.75rem; /* Adjusted padding for smaller form */
+  padding: 0.5rem; /* Adjusted padding for smaller form */
   height: auto;
   border-radius: 0.25rem;
   border: 1px solid #ced4da;
@@ -44,12 +49,12 @@
 
 .button button {
   min-width: 100%;
-  padding: 0.75rem;
+  padding: 0.5rem; /* Reduced padding for button */
   font-size: 1rem;
 }
 
 .spinner {
-  margin-top: 1rem;
+  margin-top: 0.75rem; /* Reduced margin */
 }
 
 .text-danger {
@@ -61,3 +66,7 @@
   font-size: 0.9rem;
   margin-bottom: 1rem;
 }
+
+.register-message {
+  margin-top: 0.75rem ; /* Reduced margin */
+}
Index: ../FrontEnd/DishDash/src/app/app.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavigationComponent } from './Components/navigation/navigation.component';\r\nimport { NavbarComponent } from './Components/navbar/navbar.component';\r\nimport { SearchComponent } from './Components/search/search.component';\r\nimport { CategoryComponent } from './Components/category/category.component';\r\nimport { CategorycardComponent } from './Components/categorycard/categorycard.component';\r\nimport { RestaurantComponent } from './Components/restaurant/restaurant.component';\r\nimport { RestaurantviewComponent } from './Components/restaurantview/restaurantview.component';\r\nimport { FooterComponent } from './Components/footer/footer.component';\r\nimport { LoginComponent } from './Components/login/login.component';\r\nimport { RegisterComponent } from './Components/register/register.component';\r\nimport { PagenotfoundComponent } from './Components/pagenotfound/pagenotfound.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RestaurantcardComponent } from './Components/restaurantcard/restaurantcard.component';\r\nimport { HomepageComponent } from './Components/homepage/homepage.component';\r\nimport { CutomerfavouriteComponent } from './Components/cutomerfavourite/cutomerfavourite.component';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { LoadingbarComponent } from './Components/loadingbar/loadingbar.component';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { ProfileComponent } from './Components/profile/profile.component';\r\nimport { LoginalertComponent } from './Components/loginalert/loginalert.component';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { CartComponent } from './Components/cart/cart.component';\r\nimport { OrderhistoryComponent } from './Components/orderhistory/orderhistory.component';\r\nimport { MyaddressesComponent } from './Components/myaddresses/myaddresses.component';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { CheckoutComponent } from './Components/checkout/checkout.component';\r\nimport { OrderSuccessComponent } from './Components/order-success/order-success.component';\r\nimport { AdminLoginComponent } from './Components/admin-login/admin-login.component';\r\nimport { AdminViewComponent } from './Components/admin-view/admin-view.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabGroup, MatTabsModule } from '@angular/material/tabs';\r\nimport { SpinnerComponent } from './Components/spinner/spinner.component';\r\nimport { EditProfileComponent } from './Components/edit-profile/edit-profile.component';\r\nimport { SupportChatComponent } from './Components/support-chat/support-chat.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavigationComponent,\r\n    NavbarComponent,\r\n    SearchComponent,\r\n    CategoryComponent,\r\n    CategorycardComponent,\r\n    RestaurantComponent,\r\n    RestaurantviewComponent,\r\n    FooterComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    PagenotfoundComponent,\r\n    RestaurantcardComponent,\r\n    HomepageComponent,\r\n    CutomerfavouriteComponent,\r\n    LoadingbarComponent,\r\n    SpinnerComponent,\r\n    ProfileComponent,\r\n    LoginalertComponent,\r\n    CartComponent,\r\n    OrderhistoryComponent,\r\n    MyaddressesComponent,\r\n    EditProfileComponent,\r\n    CheckoutComponent,\r\n    OrderSuccessComponent,\r\n    AdminLoginComponent,\r\n    AdminViewComponent,\r\n    SupportChatComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatBadgeModule,\r\n    MatExpansionModule,\r\n    MatButtonModule,\r\n    NgxPaginationModule,\r\n    MatTooltipModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatTabGroup,\r\n    HttpClientModule\r\n  ],\r\n  providers: [CookieService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/app.module.ts b/../FrontEnd/DishDash/src/app/app.module.ts
--- a/../FrontEnd/DishDash/src/app/app.module.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/app.module.ts	(date 1718737935470)
@@ -46,6 +46,8 @@
 import { SpinnerComponent } from './Components/spinner/spinner.component';
 import { EditProfileComponent } from './Components/edit-profile/edit-profile.component';
 import { SupportChatComponent } from './Components/support-chat/support-chat.component';
+import { LegalComponent } from './Components/legal/legal.component';
+import { ConfirmDialogComponent } from './Components/confirm-dialog/confirm-dialog.component';
 
 @NgModule({
   declarations: [
@@ -76,7 +78,9 @@
     OrderSuccessComponent,
     AdminLoginComponent,
     AdminViewComponent,
-    SupportChatComponent
+    SupportChatComponent,
+    LegalComponent,
+    ConfirmDialogComponent
   ],
   imports: [
     BrowserModule,
Index: ../FrontEnd/DishDash/src/app/Components/register/register.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div class=\"header flex justify-content-end align-items-center\">\r\n  <button mat-icon-button class=\"close-button\" (click)=\"closeDialoge()\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</div>\r\n\r\n<div class=\"regform p-5\">\r\n  <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div *ngIf=\"formSubmitted && registerForm.invalid\" class=\"alert alert-danger\">\r\n      Please fill out the form correctly.\r\n    </div>\r\n\r\n    <!-- Customer Name -->\r\n    <div class=\"form-outline mb-4\">\r\n      <input\r\n        type=\"text\"\r\n        id=\"customerName\"\r\n        class=\"form-control\"\r\n        formControlName=\"customerName\"\r\n        placeholder=\"Your Name\"\r\n      />\r\n      <div *ngIf=\"registerForm.get('customerName')?.touched && registerForm.get('customerName')?.invalid\">\r\n        <small *ngIf=\"registerForm.get('customerName')?.errors?.['required']\" class=\"text-danger\">\r\n          Name is required.\r\n        </small>\r\n        <small *ngIf=\"registerForm.get('customerName')?.errors?.['minlength']\" class=\"text-danger\">\r\n          Name must have more than 2 characters.\r\n        </small>\r\n        <small *ngIf=\"registerForm.get('customerName')?.errors?.['pattern']\" class=\"text-danger\">\r\n          Only alphabets are allowed.\r\n        </small>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Customer Email -->\r\n    <div class=\"form-outline mb-4\">\r\n      <input\r\n        type=\"email\"\r\n        id=\"customerEmail\"\r\n        class=\"form-control\"\r\n        formControlName=\"customerEmail\"\r\n        placeholder=\"Email address\"\r\n      />\r\n      <div *ngIf=\"registerForm.get('customerEmail')?.touched && registerForm.get('customerEmail')?.invalid\">\r\n        <small *ngIf=\"registerForm.get('customerEmail')?.errors?.['required']\" class=\"text-danger\">\r\n          Email is required.\r\n        </small>\r\n        <small *ngIf=\"registerForm.get('customerEmail')?.errors?.['pattern']\" class=\"text-danger\">\r\n          Enter a valid email.\r\n        </small>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Customer Password -->\r\n    <div class=\"form-outline mb-4\">\r\n      <input\r\n        type=\"password\"\r\n        id=\"customerPassword\"\r\n        class=\"form-control\"\r\n        formControlName=\"customerPassword\"\r\n        placeholder=\"Password\"\r\n      />\r\n      <div *ngIf=\"registerForm.get('customerPassword')?.touched && registerForm.get('customerPassword')?.invalid\">\r\n        <small *ngIf=\"registerForm.get('customerPassword')?.errors?.['required']\" class=\"text-danger\">\r\n          Password is required.\r\n        </small>\r\n        <small *ngIf=\"registerForm.get('customerPassword')?.errors?.['pattern']\" class=\"text-danger\">\r\n          Password should have min 8 characters, with at least one symbol, upper and lower case letters, and a number.\r\n        </small>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Confirm Password -->\r\n    <div class=\"form-outline mb-4\">\r\n      <input\r\n        type=\"password\"\r\n        id=\"confirmPassword\"\r\n        class=\"form-control\"\r\n        formControlName=\"confirmPassword\"\r\n        placeholder=\"Confirm Password\"\r\n      />\r\n      <div *ngIf=\"confirmPassword?.touched && confirmPassword?.invalid\">\r\n        <small *ngIf=\"confirmPassword?.errors?.['required']\" class=\"text-danger\">\r\n          Confirm Password is required.\r\n        </small>\r\n        <small *ngIf=\"registerForm.errors?.['passwordMismatch']\" class=\"text-danger\">\r\n          Password and Confirm Password should match.\r\n        </small>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Submit button -->\r\n    <div class=\"button\">\r\n      <button class=\"btn btn-primary btn-block mb-4\" type=\"submit\" [disabled]=\"registerForm.invalid\">Register</button>\r\n    </div>\r\n\r\n    <!-- Spinner -->\r\n    <div class=\"spinner flex justify-content-center\" *ngIf=\"isLoading\">\r\n      <mat-spinner></mat-spinner>\r\n    </div>\r\n  </form>\r\n</div>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/register/register.component.html b/../FrontEnd/DishDash/src/app/Components/register/register.component.html
--- a/../FrontEnd/DishDash/src/app/Components/register/register.component.html	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/register/register.component.html	(date 1718772262574)
@@ -4,14 +4,15 @@
   </button>
 </div>
 
-<div class="regform p-5">
+<div class="regform p-3">
+  <h4 class="text-center mb-3">Sign up </h4>
   <form [formGroup]="registerForm" (ngSubmit)="onSubmit()">
     <div *ngIf="formSubmitted && registerForm.invalid" class="alert alert-danger">
       Please fill out the form correctly.
     </div>
 
     <!-- Customer Name -->
-    <div class="form-outline mb-4">
+    <div class="form-outline mb-3">
       <input
         type="text"
         id="customerName"
@@ -33,7 +34,7 @@
     </div>
 
     <!-- Customer Email -->
-    <div class="form-outline mb-4">
+    <div class="form-outline mb-3">
       <input
         type="email"
         id="customerEmail"
@@ -52,7 +53,7 @@
     </div>
 
     <!-- Customer Password -->
-    <div class="form-outline mb-4">
+    <div class="form-outline mb-3">
       <input
         type="password"
         id="customerPassword"
@@ -71,7 +72,7 @@
     </div>
 
     <!-- Confirm Password -->
-    <div class="form-outline mb-4">
+    <div class="form-outline mb-3">
       <input
         type="password"
         id="confirmPassword"
@@ -79,11 +80,11 @@
         formControlName="confirmPassword"
         placeholder="Confirm Password"
       />
-      <div *ngIf="confirmPassword?.touched && confirmPassword?.invalid">
+      <div *ngIf="confirmPassword?.dirty ||  confirmPassword?.touched">
         <small *ngIf="confirmPassword?.errors?.['required']" class="text-danger">
           Confirm Password is required.
         </small>
-        <small *ngIf="registerForm.errors?.['passwordMismatch']" class="text-danger">
+        <small *ngIf="confirmPassword?.dirty && registerForm?.errors?.['passwordMismatch']" class="text-danger">
           Password and Confirm Password should match.
         </small>
       </div>
@@ -91,7 +92,7 @@
 
     <!-- Submit button -->
     <div class="button">
-      <button class="btn btn-primary btn-block mb-4" type="submit" [disabled]="registerForm.invalid">Register</button>
+      <button class="btn btn-primary btn-block mb-3" type="submit" [disabled]="registerForm.invalid">Register</button>
     </div>
 
     <!-- Spinner -->
@@ -99,4 +100,13 @@
       <mat-spinner></mat-spinner>
     </div>
   </form>
+
+  <!-- Success Message -->
+  <div class="register-message alert alert-success" *ngIf="registrationSuccess" role="alert">
+    Registered successfully!
+  </div>
+
+  <div class="register-message alert alert-success" *ngIf="emailAreadyExist" role="alert">
+    Email Already Exist
+  </div>
 </div>
Index: ../FrontEnd/DishDash/src/app/Components/register/register.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { customer } from '../../Model/customer';\r\nimport { UserService } from '../../services/user.service';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { customerLogin } from '../../Model/customerLogin';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n\r\n  uniqueId: string = '';\r\n  isLoading: boolean = false;\r\n  uuidString: string = uuidv4();\r\n  formSubmitted: boolean = false;\r\n\r\n  userlogin: customerLogin = {\r\n    customerEmail: '',\r\n    customerPassword: ''\r\n  };\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    public dialogRef: MatDialogRef<RegisterComponent>,\r\n    public cookieService: CookieService\r\n  ) {}\r\n\r\n  registerForm = this.fb.group({\r\n    customerId: [this.uuidString],\r\n    customerName: ['', [Validators.required, Validators.minLength(3), Validators.pattern(/^[a-zA-Z ]+$/)]],\r\n    customerEmail: ['', [Validators.required, Validators.pattern(/^\\S+@\\S+\\.\\S+$/)]],\r\n    customerPassword: ['', [Validators.required, Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]],\r\n    confirmPassword: ['', [Validators.required]]\r\n  }, { validators: this.checkPasswordMismatch });\r\n\r\n  get customerId() {\r\n    return this.registerForm.get('customerId');\r\n  }\r\n\r\n  get customerName() {\r\n    return this.registerForm.get('customerName');\r\n  }\r\n\r\n  get customerEmail() {\r\n    return this.registerForm.get('customerEmail');\r\n  }\r\n\r\n  get customerPassword() {\r\n    return this.registerForm.get('customerPassword');\r\n  }\r\n\r\n  get confirmPassword() {\r\n    return this.registerForm.get('confirmPassword');\r\n  }\r\n\r\n  onSubmit() {\r\n    this.formSubmitted = true;\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    let registerCustomer: customer = this.registerForm.value as customer;\r\n    // registerCustomer.customerCartId = this.generateUniqueKey();\r\n    console.log(registerCustomer);\r\n    this.userService.registerUser(registerCustomer).subscribe({\r\n      next: data => {\r\n        this.isLoading = false;\r\n        console.log(data);\r\n        this.userlogin.customerEmail = data.customerEmail;\r\n        this.userlogin.customerPassword = data.customerPassword;\r\n        this.closeDialoge();\r\n        this.loginUser(this.userlogin);\r\n      },\r\n      error: err => {\r\n        this.isLoading = false;\r\n        console.log(\"Error\", err);\r\n      }\r\n    });\r\n  }\r\n\r\n  generateUniqueKey() {\r\n    const timestamp = new Date().getTime();\r\n    const randomNumber = Math.floor(Math.random() * 1000);\r\n    return `cart-${timestamp}-${randomNumber}`;\r\n  }\r\n\r\n  checkPasswordMismatch(c: AbstractControl) {\r\n    const password = c.get('customerPassword');\r\n    const confirmPass = c.get('confirmPassword');\r\n    if (!password?.value || !confirmPass?.value) {\r\n      return null;\r\n    }\r\n    return password.value === confirmPass.value ? null : { passwordMismatch: true };\r\n  }\r\n\r\n  loginUser(userlogin: customerLogin) {\r\n    let customerJWT: string;\r\n    this.userService.loginUser(userlogin).subscribe({\r\n      next: data => {\r\n        console.log(data);\r\n        customerJWT = data;\r\n        this.cookieService.set(\"token\", customerJWT);\r\n        this.afterLogin();\r\n      },\r\n      error: e => {\r\n        console.log(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  afterLogin() {\r\n    this.userService.login(true);\r\n  }\r\n\r\n  closeDialoge() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/register/register.component.ts b/../FrontEnd/DishDash/src/app/Components/register/register.component.ts
--- a/../FrontEnd/DishDash/src/app/Components/register/register.component.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/register/register.component.ts	(date 1718750626484)
@@ -18,6 +18,8 @@
   isLoading: boolean = false;
   uuidString: string = uuidv4();
   formSubmitted: boolean = false;
+  registrationSuccess: boolean = false;
+  emailAreadyExist:boolean = false;
 
   userlogin: customerLogin = {
     customerEmail: '',
@@ -28,11 +30,10 @@
     private fb: FormBuilder,
     private userService: UserService,
     public dialogRef: MatDialogRef<RegisterComponent>,
-    public cookieService: CookieService
-  ) {}
+    public cookieService: CookieService) {}
 
   registerForm = this.fb.group({
-    customerId: [this.uuidString],
+    customerId: [this.generateUniqueKey()],
     customerName: ['', [Validators.required, Validators.minLength(3), Validators.pattern(/^[a-zA-Z ]+$/)]],
     customerEmail: ['', [Validators.required, Validators.pattern(/^\S+@\S+\.\S+$/)]],
     customerPassword: ['', [Validators.required, Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/)]],
@@ -74,10 +75,22 @@
         console.log(data);
         this.userlogin.customerEmail = data.customerEmail;
         this.userlogin.customerPassword = data.customerPassword;
-        this.closeDialoge();
-        this.loginUser(this.userlogin);
+        this.registrationSuccess = true;
+        setTimeout(() => {
+          this.registrationSuccess = false;
+          this.closeDialoge();
+          this.loginUser(this.userlogin);
+        }, 2000); // Show success message for 2 seconds before closing the dialog
       },
       error: err => {
+        if(err.status == 409) {
+
+          this.emailAreadyExist = true;
+          setTimeout(() => {
+            this.emailAreadyExist = false;
+          }, 3000)
+
+        }
         this.isLoading = false;
         console.log("Error", err);
       }
@@ -87,7 +100,7 @@
   generateUniqueKey() {
     const timestamp = new Date().getTime();
     const randomNumber = Math.floor(Math.random() * 1000);
-    return `cart-${timestamp}-${randomNumber}`;
+    return `customer-${timestamp}-${randomNumber}`;
   }
 
   checkPasswordMismatch(c: AbstractControl) {
Index: ../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* Navbar Styles */\r\n.navbar {\r\n  z-index: 1000; /* Ensure the navbar is above other content */\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* Loading Bar Styles */\r\n.loading-bar {\r\n  position: relative;\r\n  z-index: 999; /* Ensure the loading bar is below the navbar */\r\n  width: 100%;\r\n  height: 5px;\r\n  background-color: yellow;\r\n  display: none; /* Initially hidden */\r\n}\r\n\r\n/* Main Content Styles */\r\n.main-content {\r\n  padding-top: 70px; /* Match the navbar height */\r\n  padding-bottom: 20px; /* Optional: Add some bottom padding */\r\n}\r\n\r\n/* Footer Styles */\r\nfooter {\r\n  padding: 20px;\r\n  text-align: center;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n/* Media Query for Responsive Design */\r\n@media (max-width: 768px) {\r\n  .navbar-brand .logo {\r\n      height: 40px;\r\n  }\r\n  .nav-item .cart-dropdown {\r\n      width: 100%;\r\n  }\r\n}\r\n\r\n.chatbot {\r\n  position: fixed;\r\n  right: 20px;\r\n  bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  z-index: 1100; /* Ensure the chatbot is above other content */\r\n}\r\n\r\n.chatbubble {\r\n  width: 60px; /* Set equal width and height */\r\n  height: 60px; /* Set equal width and height */\r\n  border-radius: 50%;\r\n  background-color: #007bff; /* Primary color for the bubble */\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  cursor: pointer;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.chatbubble:hover {\r\n  transform: scale(1.1);\r\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.chatbubble mat-icon {\r\n  font-size: 24px; /* Adjust the size of the chat icon */\r\n}\r\n\r\n.chatbubble-message {\r\n  margin-top: 10px;\r\n  padding: 5px 10px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  text-align: center;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  animation: fadeInUp 0.3s ease-in-out;\r\n}\r\n\r\n@keyframes fadeInUp {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(10px);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.support-dropup {\r\n  right: 20px; /* Adjust position to stay aligned with the chat bubble */\r\n  bottom: 80px; /* Adjust position to float above the chat bubble */\r\n  width: 400px;\r\n  border-radius: 5px;\r\n  /* background-color: white; */\r\n  padding: 10px;\r\n  z-index: 1000;\r\n  /* box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); */\r\n  transition: all 0.3s ease-in-out;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .support-dropup {\r\n    width: 90%;\r\n    right: 5%;\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.css b/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.css
--- a/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.css	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.css	(date 1718745797555)
@@ -20,7 +20,7 @@
 
 /* Main Content Styles */
 .main-content {
-  padding-top: 70px; /* Match the navbar height */
+  padding-top: 70px; 
   padding-bottom: 20px; /* Optional: Add some bottom padding */
 }
 
@@ -101,6 +101,7 @@
   right: 20px; /* Adjust position to stay aligned with the chat bubble */
   bottom: 80px; /* Adjust position to float above the chat bubble */
   width: 400px;
+  /* height: 400px; */
   border-radius: 5px;
   /* background-color: white; */
   padding: 10px;
Index: ../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { UserService } from '../../services/user.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { CartServiceService } from '../../services/cart-service.service';\r\nimport { customer } from '../../Model/customer';\r\nimport { CartDish } from '../../Model/CartDish';\r\nimport { Order } from '../../Model/Order';\r\nimport { RouterService } from '../../services/router.service';\r\nimport { OrderServiceService } from '../../services/order-service.service';\r\n\r\n@Component({\r\n  selector: 'app-checkout',\r\n  templateUrl: './checkout.component.html',\r\n  styleUrls: ['./checkout.component.css']\r\n})\r\nexport class CheckoutComponent implements OnInit {\r\n  checkoutForm: FormGroup;\r\n  cartItems:CartDish[]= [];\r\n  primaryAddress:any = {};\r\n  activeCustomer: customer;\r\n  totalAmount: number = 0;\r\n  isLoadingSpinner:boolean = false;\r\n\r\n  orderDetail:Order = {\r\n    orderId: '',\r\n    restaurantId: '',\r\n    customerId: '',\r\n    timeStamp: '',\r\n    totalPrice: 0,\r\n    discount: 0,\r\n    billingPrice: 0,\r\n    totalItems: 0,\r\n    customerAddress: {\r\n      address1: '',\r\n      landMark: '',\r\n      city: '',\r\n      pincode: 0\r\n    },\r\n    paymentMethod: '',\r\n    cartItems: []\r\n  }\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private cookieService: CookieService,\r\n    private routerService:RouterService,\r\n    private orderService:OrderServiceService\r\n  ) {\r\n    this.checkoutForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      email: [{ value: '', disabled: true }],\r\n      phone: ['', Validators.required],\r\n      paymentMethod: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchActiveCustomer();\r\n    this.loadCartItems();\r\n  }\r\n\r\n  fetchActiveCustomer() {\r\n    const Jwt = this.cookieService.get('token');\r\n    this.userService.fetchCustomerByJwt(Jwt).subscribe({\r\n      next: data => {\r\n        this.activeCustomer = data;\r\n        this.checkoutForm.patchValue({\r\n          name: this.activeCustomer.customerName,\r\n          email: this.activeCustomer.customerEmail,\r\n          phone: this.activeCustomer.customerPhone\r\n        });\r\n        this.primaryAddress = this.activeCustomer.customerAddress[0]; // Assuming address is part of customer model\r\n      },\r\n      error: e => {\r\n        console.log('Error while fetching the customer', e);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadCartItems() {\r\n    const cart = JSON.parse(localStorage.getItem('cart') || '[]');\r\n    this.cartItems = cart;\r\n    this.totalAmount = this.cartItems.reduce((acc, item) => acc + item.dishPrice * item.quantity, 0);\r\n  }\r\n\r\n  //Total Count Update\r\n  countTotalItems():number {\r\n    const cart = JSON.parse(localStorage.getItem('cart') || '[]');\r\n    return cart.reduce((total:number, item:any) => total+item.quantity, 0);\r\n  }\r\n\r\n  \r\n\r\n  onSubmit() {\r\n    this.isLoadingSpinner = true;\r\n    \r\nthis.orderDetail.orderId = this.generateUniqueKey();\r\nthis.orderDetail.restaurantId = this.cartItems[0].restaurantId;\r\nthis.orderDetail.customerId = this.activeCustomer.customerId;\r\nthis.orderDetail.timeStamp = new Date().toDateString();\r\nthis.orderDetail.totalPrice = this.totalAmount;\r\nthis.orderDetail.discount = 0;\r\nthis.orderDetail.billingPrice = this.totalAmount;\r\nthis.orderDetail.totalItems = this.countTotalItems();\r\nthis.orderDetail.customerAddress = this.activeCustomer.customerAddress[0];\r\nthis.orderDetail.paymentMethod = this.checkoutForm.get('paymentMethod').value;\r\nthis.orderDetail.cartItems = this.cartItems;\r\nconsole.log(this.orderDetail);\r\n\r\n//Now sending it to backend\r\n      this.orderService.finalOrderPlacing(this.orderDetail).subscribe({\r\n        next:data => {\r\n          console.log(\"Order Success\")\r\n\r\n          localStorage.setItem('cart', JSON.stringify([]));\r\n          const event = new Event('storage');\r\n    window.dispatchEvent(event)\r\n          this.routerService.navigateToOrderCompletion(this.orderDetail.orderId);\r\n          this.isLoadingSpinner= false;\r\n        },\r\n        error:e => {\r\n          console.log(e);\r\n          console.log(\"Order Failure\")\r\n          this.isLoadingSpinner= false;\r\n        }\r\n      })\r\n\r\n  \r\n  }\r\n\r\n  //Genrating usnique order id\r\n\r\n  generateUniqueKey() {\r\n    const timestamp = new Date().getTime();\r\n    const randomNumber = Math.floor(Math.random() * 10000);\r\n    return `orderId-${timestamp}-${randomNumber}`;\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.ts b/../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.ts
--- a/../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.ts	(date 1718773051251)
@@ -21,6 +21,7 @@
   activeCustomer: customer;
   totalAmount: number = 0;
   isLoadingSpinner:boolean = false;
+  showAddressError:boolean = false;
 
   orderDetail:Order = {
     orderId: '',
@@ -38,7 +39,9 @@
       pincode: 0
     },
     paymentMethod: '',
-    cartItems: []
+    cartItems: [],
+    customerName: '',
+    customerEmail: ''
   }
 
   constructor(
@@ -49,9 +52,9 @@
     private orderService:OrderServiceService
   ) {
     this.checkoutForm = this.fb.group({
-      name: ['', Validators.required],
+      name: ['', [Validators.required, Validators.minLength(3)]],
       email: [{ value: '', disabled: true }],
-      phone: ['', Validators.required],
+      phone: ['', [Validators.required,Validators.pattern(/^[6-9]\d{9}$/)]],
       paymentMethod: ['', Validators.required]
     });
   }
@@ -91,15 +94,18 @@
     return cart.reduce((total:number, item:any) => total+item.quantity, 0);
   }
 
-  
-
   onSubmit() {
-    this.isLoadingSpinner = true;
-    
+    if (!this.primaryAddress) {
+      this.showAddressError = true;  // Show the error message
+      return;
+    }
+this.isLoadingSpinner = true;
 this.orderDetail.orderId = this.generateUniqueKey();
 this.orderDetail.restaurantId = this.cartItems[0].restaurantId;
 this.orderDetail.customerId = this.activeCustomer.customerId;
-this.orderDetail.timeStamp = new Date().toDateString();
+this.orderDetail.timeStamp = new Date().toLocaleString();
+this.orderDetail.customerName = this.activeCustomer.customerName;
+this.orderDetail.customerEmail = this.activeCustomer.customerEmail;
 this.orderDetail.totalPrice = this.totalAmount;
 this.orderDetail.discount = 0;
 this.orderDetail.billingPrice = this.totalAmount;
@@ -109,6 +115,7 @@
 this.orderDetail.cartItems = this.cartItems;
 console.log(this.orderDetail);
 
+
 //Now sending it to backend
       this.orderService.finalOrderPlacing(this.orderDetail).subscribe({
         next:data => {
@@ -116,25 +123,4 @@
 
           localStorage.setItem('cart', JSON.stringify([]));
           const event = new Event('storage');
-    window.dispatchEvent(event)
-          this.routerService.navigateToOrderCompletion(this.orderDetail.orderId);
-          this.isLoadingSpinner= false;
-        },
-        error:e => {
-          console.log(e);
-          console.log("Order Failure")
-          this.isLoadingSpinner= false;
-        }
-      })
-
-  
-  }
-
-  //Genrating usnique order id
-
-  generateUniqueKey() {
-    const timestamp = new Date().getTime();
-    const randomNumber = Math.floor(Math.random() * 10000);
-    return `orderId-${timestamp}-${randomNumber}`;
-  }
-}
+    window.dispatchEvent(
\ No newline at end of file
Index: ../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><app-navbar></app-navbar>\r\n<app-loadingbar></app-loadingbar>\r\n<div class=\"main-content\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n<app-footer></app-footer>\r\n\r\n<div class=\"chatbot\">\r\n  <div class=\"support support-dropup\" *ngIf=\"supportChat\">\r\n    <app-support-chat></app-support-chat>\r\n  </div>\r\n\r\n  <div class=\"chatbubble\" (click)=\"supportChat = !supportChat\">\r\n    <mat-icon *ngIf=\"!supportChat\">chat</mat-icon>\r\n    <mat-icon *ngIf=\"supportChat\">close</mat-icon>\r\n  </div>\r\n  \r\n  <div class=\"chatbubble-message\" *ngIf=\"!supportChat\">Need help?</div>\r\n</div>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.html b/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.html
--- a/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.html	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.html	(date 1718745325650)
@@ -1,5 +1,6 @@
-<app-navbar></app-navbar>
+<app-navbar *ngIf="showNavbar"></app-navbar>
 <app-loadingbar></app-loadingbar>
+
 <div class="main-content">
   <router-outlet></router-outlet>
 </div>
Index: ../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div class=\"checkout-container container mt-5\">\r\n    <h2 class=\"text-center mb-4\">Checkout</h2>\r\n    <div class=\"row\">\r\n      <!-- Left Side: Customer Information -->\r\n      <div class=\"col-md-6\">\r\n        <form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit()\">\r\n          <!-- Basic Info -->\r\n          <h4>Basic Information</h4>\r\n          <div class=\"form-group mb-3\">\r\n            <label for=\"name\">Name</label>\r\n            <input id=\"name\" type=\"text\" formControlName=\"name\" class=\"form-control\" />\r\n            <div *ngIf=\"checkoutForm.get('name').invalid && checkoutForm.get('name').touched\" class=\"text-danger\">\r\n              Name is required.\r\n            </div>\r\n          </div>\r\n  \r\n          <div class=\"form-group mb-3\">\r\n            <label for=\"email\">Email</label>\r\n            <input id=\"email\" type=\"email\" formControlName=\"email\" class=\"form-control\" [disabled]=\"true\" matTooltip=\"You can't edit this email\" />\r\n          </div>\r\n  \r\n          <div class=\"form-group mb-3\">\r\n            <label for=\"phone\">Phone Number</label>\r\n            <input id=\"phone\" type=\"text\" formControlName=\"phone\" class=\"form-control\" />\r\n            <div *ngIf=\"checkoutForm.get('phone').invalid && checkoutForm.get('phone').touched\" class=\"text-danger\">\r\n              Phone Number is required.\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Primary Address -->\r\n          <h4 class=\"mt-4\"> Address</h4>\r\n          <div class=\"primary-address mb-3 p-3 border rounded\" *ngIf=\"primaryAddress\">\r\n            <p class=\"selected-address-badge text-success mb-2\">Selected Primary Address</p>\r\n            <p>{{ primaryAddress.address1 }}</p>\r\n            <p>{{ primaryAddress.landMark }}</p>\r\n            <p>{{ primaryAddress.city }}</p>\r\n            <p>{{ primaryAddress.pincode }}</p>\r\n            <a routerLink=\"/customer/profile/my-addresses\">Change Address</a>\r\n          </div>\r\n  \r\n          <div class=\"no-address p-3 border rounded\" *ngIf=\"!primaryAddress\">\r\n            <p>No Saved Address</p>\r\n            <a routerLink=\"/customer/profile/my-addresses\">Create Your Address Here</a>\r\n          </div>\r\n  \r\n          <!-- Payment Options -->\r\n          <h4 class=\"mt-4\">Payment Options</h4>\r\n          <div class=\"form-group\">\r\n            <div class=\"form-check mb-2\">\r\n              <input class=\"form-check-input\" type=\"radio\" formControlName=\"paymentMethod\" value=\"Debit\" id=\"debit\">\r\n              <label class=\"form-check-label\" for=\"debit\">Debit Card</label>\r\n            </div>\r\n            <div class=\"form-check mb-2\">\r\n              <input class=\"form-check-input\" type=\"radio\" formControlName=\"paymentMethod\" value=\"COD\" id=\"cod\">\r\n              <label class=\"form-check-label\" for=\"cod\">Cash on Delivery (COD)</label>\r\n            </div>\r\n            <div class=\"form-check mb-2\">\r\n              <input class=\"form-check-input\" type=\"radio\" formControlName=\"paymentMethod\" value=\"UPI\" id=\"upi\">\r\n              <label class=\"form-check-label\" for=\"upi\">UPI</label>\r\n            </div>\r\n          </div>\r\n  \r\n          <button type=\"submit\" class=\"btn btn-primary mt-4 w-100\" [disabled]=\"checkoutForm.invalid\">Place Order</button>\r\n        </form>\r\n\r\n          <!-- Spinner -->\r\n    <div class=\"spinner flex justify-content-center\" *ngIf=\"isLoadingSpinner\">\r\n      <mat-spinner></mat-spinner>\r\n    </div>\r\n      </div>\r\n  \r\n      <!-- Right Side: Cart Summary -->\r\n      <div class=\"col-md-6\">\r\n        <div class=\"cart-summary mt-4 p-3 border rounded\">\r\n          <h4>Order Summary</h4>\r\n          <ul class=\"list-group mb-3\">\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let item of cartItems\">\r\n              <div class=\"d-flex align-items-center\">\r\n                <img [src]=\"item.dishImage\" alt=\"{{ item.dishName }}\" class=\"img-thumbnail me-3\" style=\"width: 60px; height: 60px;\">\r\n                <div>\r\n                  <h6 class=\"my-0\">{{ item.dishName }}</h6>\r\n                  <small class=\"text-muted\">{{ item.veg ? 'Veg' : 'Non-Veg' }} - {{ item.quantity }} x Rs {{ item.dishPrice }}</small>\r\n                </div>\r\n              </div>\r\n              <span class=\"text-muted\">Rs {{ item.dishPrice * item.quantity }} /-</span>\r\n            </li>\r\n          </ul>\r\n          <h5 class=\"d-flex justify-content-between align-items-center\">\r\n            <span>Total (Rs)</span>\r\n            <strong>Rs {{ totalAmount }} /-</strong>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.html b/../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.html
--- a/../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.html	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/checkout/checkout.component.html	(date 1718773236309)
@@ -9,10 +9,13 @@
           <div class="form-group mb-3">
             <label for="name">Name</label>
             <input id="name" type="text" formControlName="name" class="form-control" />
-            <div *ngIf="checkoutForm.get('name').invalid && checkoutForm.get('name').touched" class="text-danger">
+            <div *ngIf="checkoutForm.get('name').hasError('required') && checkoutForm.get('name').touched" class="text-danger">
               Name is required.
             </div>
+            <div *ngIf="checkoutForm.get('name').hasError('minlength')" class="text-danger">
+              Enter atleast 3 characters
           </div>
+          </div>
   
           <div class="form-group mb-3">
             <label for="email">Email</label>
@@ -25,6 +28,9 @@
             <div *ngIf="checkoutForm.get('phone').invalid && checkoutForm.get('phone').touched" class="text-danger">
               Phone Number is required.
             </div>
+            <div *ngIf="checkoutForm.get('phone').hasError('pattern')" class="text-danger">
+              Enter valid 10 digit phone number
+          </div>
           </div>
   
           <!-- Primary Address -->
@@ -39,8 +45,14 @@
           </div>
   
           <div class="no-address p-3 border rounded" *ngIf="!primaryAddress">
+           
             <p>No Saved Address</p>
             <a routerLink="/customer/profile/my-addresses">Create Your Address Here</a>
+
+            <div *ngIf="showAddressError" class="text-danger mt-2 d-flex align-items-center">
+              <mat-icon>error</mat-icon>
+              <span class="ms-2">Please select an address before placing the order.</span>
+            </div>
           </div>
   
           <!-- Payment Options -->
@@ -59,10 +71,13 @@
               <label class="form-check-label" for="upi">UPI</label>
             </div>
           </div>
-  
-          <button type="submit" class="btn btn-primary mt-4 w-100" [disabled]="checkoutForm.invalid">Place Order</button>
+          <div class="button p-0 m-0" (mouseenter)="checkAddressSelected()" >
+            <button type="submit" class="btn btn-primary w-100" [disabled]="checkoutForm.invalid || !primaryAddress" >Place Order</button>
+          </div>
         </form>
 
+      
+
           <!-- Spinner -->
     <div class="spinner flex justify-content-center" *ngIf="isLoadingSpinner">
       <mat-spinner></mat-spinner>
@@ -74,23 +89,4 @@
         <div class="cart-summary mt-4 p-3 border rounded">
           <h4>Order Summary</h4>
           <ul class="list-group mb-3">
-            <li class="list-group-item d-flex justify-content-between align-items-center" *ngFor="let item of cartItems">
-              <div class="d-flex align-items-center">
-                <img [src]="item.dishImage" alt="{{ item.dishName }}" class="img-thumbnail me-3" style="width: 60px; height: 60px;">
-                <div>
-                  <h6 class="my-0">{{ item.dishName }}</h6>
-                  <small class="text-muted">{{ item.veg ? 'Veg' : 'Non-Veg' }} - {{ item.quantity }} x Rs {{ item.dishPrice }}</small>
-                </div>
-              </div>
-              <span class="text-muted">Rs {{ item.dishPrice * item.quantity }} /-</span>
-            </li>
-          </ul>
-          <h5 class="d-flex justify-content-between align-items-center">
-            <span>Total (Rs)</span>
-            <strong>Rs {{ totalAmount }} /-</strong>
-          </h5>
-        </div>
-      </div>
-    </div>
-  </div>
-  
\ No newline at end of file
+            <li class="list-group-item d-flex justify-content-between al
\ No newline at end of file
Index: ../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { IpLocationService } from '../../services/ip-location.service';\r\nimport { LoadingService } from '../../services/loading.service';\r\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\r\nimport { Subject, Subscription, filter } from 'rxjs';\r\nimport { RestaurantService } from '../../services/restaurant.service';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit, OnDestroy {\r\n\r\n  location: any;\r\n  city: string = '';\r\n\r\n  isLoading = false; // Add this property\r\n  progress = 0; // Add this property\r\n\r\n  supportChat:boolean=false;\r\n\r\n  private intervalId: any;\r\n  private routerEventsSubscription: Subscription = new Subscription(); // Initialize the subscription\r\n\r\n\r\n  constructor(\r\n    private ipLocationService: IpLocationService, \r\n    private loadingService: LoadingService, \r\n    private resService:RestaurantService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    // this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\r\n    //   window.scrollTo(0, 0);\r\n    // });\r\n\r\n    this.router.events.subscribe( (event) =>{\r\n      if (event instanceof NavigationEnd) {\r\n        window.scrollTo(0, 0);\r\n     \r\n      }\r\n    })\r\n\r\n \r\n    // Router events subscription\r\n    this.routerEventsSubscription = this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationStart) {\r\n        // console.log(\"Naviation Start\")\r\n        this.simulateLoadingProgress();\r\n      } else if (\r\n        event instanceof NavigationEnd || \r\n        event instanceof NavigationCancel || \r\n        event instanceof NavigationError\r\n      ) {\r\n        // console.log('Navigation event completed:', event);\r\n        this.completeLoading();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.routerEventsSubscription.unsubscribe();\r\n\r\n  }\r\n\r\n\r\n  private completeLoading() {\r\n    // console.log(\"Loading Completed\")\r\n    clearInterval(this.intervalId);\r\n    this.loadingService.setLoading(99);\r\n\r\n\r\n    setTimeout(() => {\r\n      \r\n    this.loadingService.setIsLoading(false);\r\n    this.loadingService.setLoading(0);\r\n      \r\n    }, 500)\r\n    \r\n  }\r\n\r\n  private simulateLoadingProgress() {\r\n    // console.log(\"Simulate Loading Progress\")\r\n    this.loadingService.setLoading(0);\r\n    this.loadingService.setIsLoading(true);\r\n\r\n    this.intervalId = setInterval(() => {\r\n      this.progress+=10;\r\n      this.loadingService.setLoading(this.progress)\r\n      if(this.progress) {\r\n        clearInterval(this.intervalId);\r\n      }\r\n    }, 100)\r\n   \r\n  }\r\n\r\n \r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.ts b/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.ts
--- a/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.ts	(revision fb455e25290c428a50a3890b59a8ce863edac877)
+++ b/../FrontEnd/DishDash/src/app/Components/navigation/navigation.component.ts	(date 1718745055075)
@@ -22,7 +22,7 @@
 
   private intervalId: any;
   private routerEventsSubscription: Subscription = new Subscription(); // Initialize the subscription
-
+  showNavbar:boolean = true;
 
   constructor(
     private ipLocationService: IpLocationService, 
@@ -37,6 +37,12 @@
     //   window.scrollTo(0, 0);
     // });
 
+    this.router.events.subscribe(event => {
+      if (event instanceof NavigationEnd) {
+        this.showNavbar = !event.url.includes('/admin');
+      }
+    });
+
     this.router.events.subscribe( (event) =>{
       if (event instanceof NavigationEnd) {
         window.scrollTo(0, 0);
